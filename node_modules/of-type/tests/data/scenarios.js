/* global isFinite, Promise, NaN, Infinity, Function, isNaN */

class Name { }
class instance { }
class truthy { }
class falsy { }
class any { }
class objectable { }

export default [
  { actual: Date, expected: 'date', result: false, itActual: 'Date', itExpected: '"date"' },
  { actual: new Date(), expected: 'function', result: false, itActual: 'new Date()', itExpected: '"function"' },
  { actual: Function, expected: 'object', result: false, itActual: 'Function', itExpected: '"object"' },
  { actual: function () { }, expected: 'object', result: false, itActual: 'function(){}', itExpected: '"object"' },
  { actual: new Function('return "hello"'), expected: 'object', result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '"object"' },
  { actual: (function () { return arguments; })(), expected: 'function', result: false, itActual: '(function(){return arguments;})()', itExpected: '"function"' },
  { actual: () => { }, expected: 'object', result: false, itActual: '()=>{}', itExpected: '"object"' },
  { actual: String, expected: 'string', result: false, itActual: 'String', itExpected: '"string"' },
  { actual: new String('Hello'), expected: 'object', result: false, itActual: 'new String("Hello")', itExpected: '"object"' },
  { actual: new String(''), expected: 'object', result: false, itActual: 'new String("")', itExpected: '"object"' },
  { actual: 'Hello', expected: 'object', result: false, itActual: '"Hello"', itExpected: '"object"' },
  { actual: `Hello`, expected: 'object', result: false, itActual: '`Hello`', itExpected: '"object"' },
  { actual: '', expected: 'object', result: false, itActual: '""', itExpected: '"object"' },
  { actual: Number, expected: 'number', result: false, itActual: 'Number', itExpected: '"number"' },
  { actual: new Number(10), expected: 'object', result: false, itActual: 'new Number(10)', itExpected: '"object"' },
  { actual: new Number(0), expected: 'object', result: false, itActual: 'new Number(0)', itExpected: '"object"' },
  { actual: 10, expected: 'object', result: false, itActual: '10', itExpected: '"object"' },
  { actual: 0, expected: 'object', result: false, itActual: '0', itExpected: '"object"' },
  { actual: Boolean, expected: 'object', result: false, itActual: 'Boolean', itExpected: '"object"' },
  { actual: new Boolean(0), expected: 'object', result: false, itActual: 'new Boolean(0)', itExpected: '"object"' },
  { actual: false, expected: 'object', result: false, itActual: 'false', itExpected: '"object"' },
  { actual: true, expected: 'object', result: false, itActual: 'true', itExpected: '"object"' },
  { actual: RegExp, expected: 'regexp', result: false, itActual: 'RegExp', itExpected: '"regexp"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'object', result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '"object"' },
  { actual: /hello/, expected: 'object', result: false, itActual: '/hello/', itExpected: '"object"' },
  { actual: isNaN, expected: 'object', result: false, itActual: 'isNaN', itExpected: '"object"' },
  { actual: isNaN('hello'), expected: 'object', result: false, itActual: 'isNaN("hello")', itExpected: '"object"' },
  { actual: isFinite, expected: 'object', result: false, itActual: 'isFinite', itExpected: '"object"' },
  { actual: isFinite(10), expected: 'object', result: false, itActual: 'isFinite(10)', itExpected: '"object"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'object', result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"object"' },
  { actual: Object, expected: 'object', result: false, itActual: 'Object', itExpected: '"object"' },
  { actual: {}, expected: 'function', result: false, itActual: '{}', itExpected: '"function"' },
  { actual: Error, expected: 'object', result: false, itActual: 'Error', itExpected: '"object"' },
  { actual: TypeError, expected: 'object', result: false, itActual: 'TypeError', itExpected: '"object"' },
  { actual: new Error('error'), expected: 'object', result: false, itActual: 'new Error("error")', itExpected: '"object"' },
  { actual: new TypeError('error'), expected: 'object', result: false, itActual: 'new TypeError("error")', itExpected: '"object"' },
  { actual: undefined, expected: 'object', result: false, itActual: 'undefined', itExpected: '"object"' },
  { actual: null, expected: 'object', result: false, itActual: 'null', itExpected: '"object"' },
  { actual: Infinity, expected: 'object', result: false, itActual: 'Infinity', itExpected: '"object"' },
  { actual: NaN, expected: 'object', result: false, itActual: 'NaN', itExpected: '"object"' },
  { actual: JSON, expected: 'function', result: false, itActual: 'JSON', itExpected: '"function"' },
  { actual: Promise, expected: 'object', result: false, itActual: 'Promise', itExpected: '"object"' },
  { actual: new Promise(() => { }), expected: 'object', result: false, itActual: 'new Promise(()=>{})', itExpected: '"object"' },
  { actual: {}.name, expected: 'object', result: false, itActual: '{}.name', itExpected: '"object"' },
  { actual: RangeError, expected: 'object', result: false, itActual: 'RangeError', itExpected: '"object"' },
  { actual: ReferenceError, expected: 'object', result: false, itActual: 'ReferenceError', itExpected: '"object"' },
  { actual: new RangeError('error'), expected: 'object', result: false, itActual: 'new RangeError("error")', itExpected: '"object"' },
  { actual: new ReferenceError('error'), expected: 'object', result: false, itActual: 'new ReferenceError("error")', itExpected: '"object"' },
  { actual: Name, expected: 'object', result: false, itActual: 'Name', itExpected: '"object"' },
  { actual: new Name(), expected: 'object', result: false, itActual: 'new Name()', itExpected: '"object"' },
  { actual: new instance(), expected: 'object', result: false, itActual: 'new instance()', itExpected: '"object"' },
  { actual: new truthy(), expected: 'object', result: false, itActual: 'new truthy()', itExpected: '"object"' },
  { actual: new falsy(), expected: 'object', result: false, itActual: 'new falsy()', itExpected: '"object"' },
  { actual: new any(), expected: 'object', result: false, itActual: 'new any()', itExpected: '"object"' },
  { actual: new objectable(), expected: 'object', result: false, itActual: 'new objectable()', itExpected: '"object"' },

  { actual: Date, expected: 'object|instance', result: false, itActual: 'Date', itExpected: '"object|instance"' },
  { actual: new Date(), expected: 'object|instance', result: false, itActual: 'new Date()', itExpected: '"object|instance"' },
  { actual: Function, expected: 'object|instance', result: false, itActual: 'Function', itExpected: '"object|instance"' },
  { actual: function () { }, expected: 'object|instance', result: false, itActual: 'function(){}', itExpected: '"object|instance"' },
  { actual: new Function('return "hello"'), expected: 'object|instance', result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '"object|instance"' },
  { actual: (function () { return arguments; })(), expected: 'object|instance', result: true, itActual: '(function(){return arguments;})()', itExpected: '"object|instance"' },
  { actual: () => { }, expected: 'object|instance', result: false, itActual: '()=>{}', itExpected: '"object|instance"' },
  { actual: String, expected: 'object|instance', result: false, itActual: 'String', itExpected: '"object|instance"' },
  { actual: new String('Hello'), expected: 'object|instance', result: false, itActual: 'new String("Hello")', itExpected: '"object|instance"' },
  { actual: new String(''), expected: 'object|instance', result: false, itActual: 'new String("")', itExpected: '"object|instance"' },
  { actual: 'Hello', expected: 'object|instance', result: false, itActual: '"Hello"', itExpected: '"object|instance"' },
  { actual: `Hello`, expected: 'object|instance', result: false, itActual: '`Hello`', itExpected: '"object|instance"' },
  { actual: '', expected: 'object|instance', result: false, itActual: '""', itExpected: '"object|instance"' },
  { actual: Number, expected: 'number', result: false, itActual: 'Number', itExpected: '"object|instance"' },
  { actual: new Number(10), expected: 'object|instance', result: false, itActual: 'new Number(10)', itExpected: '"object|instance"' },
  { actual: new Number(0), expected: 'object|instance', result: false, itActual: 'new Number(0)', itExpected: '"object|instance"' },
  { actual: 10, expected: 'object|instance', result: false, itActual: '10', itExpected: '"object|instance"' },
  { actual: 0, expected: 'object|instance', result: false, itActual: '0', itExpected: '"object|instance"' },
  { actual: Boolean, expected: 'object|instance', result: false, itActual: 'Boolean', itExpected: '"object|instance"' },
  { actual: new Boolean(0), expected: 'object|instance', result: false, itActual: 'new Boolean(0)', itExpected: '"object|instance"' },
  { actual: false, expected: 'object|instance', result: false, itActual: 'false', itExpected: '"object|instance"' },
  { actual: true, expected: 'object|instance', result: false, itActual: 'true', itExpected: '"object|instance"' },
  { actual: RegExp, expected: 'object|instance', result: false, itActual: 'RegExp', itExpected: '"object|instance"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'object|instance', result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '"object|instance"' },
  { actual: /hello/, expected: 'object|instance', result: false, itActual: '/hello/', itExpected: '"object|instance"' },
  { actual: isNaN, expected: 'object|instance', result: false, itActual: 'isNaN', itExpected: '"object|instance"' },
  { actual: isNaN('hello'), expected: 'object|instance', result: false, itActual: 'isNaN("hello")', itExpected: '"object|instance"' },
  { actual: isFinite, expected: 'object|instance', result: false, itActual: 'isFinite', itExpected: '"object|instance"' },
  { actual: isFinite(10), expected: 'object|instance', result: false, itActual: 'isFinite(10)', itExpected: '"object|instance"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'object|instance', result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"object|instance"' },
  { actual: Object, expected: 'object|instance', result: false, itActual: 'Object', itExpected: '"object|instance"' },
  { actual: {}, expected: 'object|instance', result: true, itActual: '{}', itExpected: '"object|instance"' },
  { actual: Error, expected: 'object|instance', result: false, itActual: 'Error', itExpected: '"object|instance"' },
  { actual: TypeError, expected: 'object|instance', result: false, itActual: 'TypeError', itExpected: '"object|instance"' },
  { actual: new Error('error'), expected: 'object|instance', result: false, itActual: 'new Error("error")', itExpected: '"object|instance"' },
  { actual: new TypeError('error'), expected: 'object|instance', result: false, itActual: 'new TypeError("error")', itExpected: '"object|instance"' },
  { actual: undefined, expected: 'object|instance', result: false, itActual: 'undefined', itExpected: '"object|instance"' },
  { actual: null, expected: 'object|instance', result: false, itActual: 'null', itExpected: '"object|instance"' },
  { actual: Infinity, expected: 'object|instance', result: false, itActual: 'Infinity', itExpected: '"object|instance"' },
  { actual: NaN, expected: 'object|instance', result: false, itActual: 'NaN', itExpected: '"object|instance"' },
  { actual: JSON, expected: 'object|instance', result: true, itActual: 'JSON', itExpected: '"object|instance"' },
  { actual: Promise, expected: 'object|instance', result: false, itActual: 'Promise', itExpected: '"object|instance"' },
  { actual: new Promise(() => { }), expected: 'object|instance', result: false, itActual: 'new Promise(()=>{})', itExpected: '"object|instance"' },
  { actual: {}.name, expected: 'object|instance', result: false, itActual: '{}.name', itExpected: '"object|instance"' },
  { actual: RangeError, expected: 'object|instance', result: false, itActual: 'RangeError', itExpected: '"object|instance"' },
  { actual: ReferenceError, expected: 'object|instance', result: false, itActual: 'ReferenceError', itExpected: '"object|instance"' },
  { actual: new RangeError('error'), expected: 'object|instance', result: false, itActual: 'new RangeError("error")', itExpected: '"object|instance"' },
  { actual: new ReferenceError('error'), expected: 'object|instance', result: false, itActual: 'new ReferenceError("error")', itExpected: '"object|instance"' },
  { actual: Name, expected: 'object|instance', result: false, itActual: 'Name', itExpected: '"object|instance"' },
  { actual: new Name(), expected: 'object|instance', result: true, itActual: 'new Name()', itExpected: '"object|instance"' },
  { actual: new instance(), expected: 'object|instance', result: true, itActual: 'new instance()', itExpected: '"object|instance"' },
  { actual: new truthy(), expected: 'object|instance', result: true, itActual: 'new truthy()', itExpected: '"object|instance"' },
  { actual: new falsy(), expected: 'object|instance', result: true, itActual: 'new falsy()', itExpected: '"object|instance"' },
  { actual: new any(), expected: 'object|instance', result: true, itActual: 'new any()', itExpected: '"object|instance"' },
  { actual: new objectable(), expected: 'object|instance', result: true, itActual: 'new objectable()', itExpected: '"object|instance"' },

  { actual: Date, expected: 'Date', result: false, itActual: 'Date', itExpected: '"Date"' },
  { actual: new Date(), expected: 'Function', result: false, itActual: 'new Date()', itExpected: '"Function"' },
  { actual: Function, expected: 'Object', result: false, itActual: 'Function', itExpected: '"Object"' },
  { actual: function () { }, expected: 'Object', result: false, itActual: 'function(){}', itExpected: '"Object"' },
  { actual: new Function('return "hello"'), expected: 'Object', result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '"Object"' },
  { actual: (function () { return arguments; })(), expected: 'Function', result: false, itActual: '(function(){return arguments;})()', itExpected: '"Function"' },
  { actual: () => { }, expected: 'Object', result: false, itActual: '()=>{}', itExpected: '"Object"' },
  { actual: String, expected: 'String', result: false, itActual: 'String', itExpected: '"String"' },
  { actual: new String('Hello'), expected: 'Object', result: false, itActual: 'new String("Hello")', itExpected: '"Object"' },
  { actual: new String(''), expected: 'Object', result: false, itActual: 'new String("")', itExpected: '"Object"' },
  { actual: 'Hello', expected: 'Object', result: false, itActual: '"Hello"', itExpected: '"Object"' },
  { actual: `Hello`, expected: 'Object', result: false, itActual: '`Hello`', itExpected: '"Object"' },
  { actual: '', expected: 'Object', result: false, itActual: '""', itExpected: '"Object"' },
  { actual: Number, expected: 'Number', result: false, itActual: 'Number', itExpected: '"Number"' },
  { actual: new Number(10), expected: 'Object', result: false, itActual: 'new Number(10)', itExpected: '"Object"' },
  { actual: new Number(0), expected: 'Object', result: false, itActual: 'new Number(0)', itExpected: '"Object"' },
  { actual: 10, expected: 'Object', result: false, itActual: '10', itExpected: '"Object"' },
  { actual: 0, expected: 'Object', result: false, itActual: '0', itExpected: '"Object"' },
  { actual: Boolean, expected: 'Object', result: false, itActual: 'Boolean', itExpected: '"Object"' },
  { actual: new Boolean(0), expected: 'Object', result: false, itActual: 'new Boolean(0)', itExpected: '"Object"' },
  { actual: false, expected: 'Object', result: false, itActual: 'false', itExpected: '"Object"' },
  { actual: true, expected: 'Object', result: false, itActual: 'true', itExpected: '"Object"' },
  { actual: RegExp, expected: 'RegExp', result: false, itActual: 'RegExp', itExpected: '"RegExp"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'Object', result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '"Object"' },
  { actual: /hello/, expected: 'Object', result: false, itActual: '/hello/', itExpected: '"Object"' },
  { actual: isNaN, expected: 'Object', result: false, itActual: 'isNaN', itExpected: '"Object"' },
  { actual: isNaN('hello'), expected: 'Object', result: false, itActual: 'isNaN("hello")', itExpected: '"Object"' },
  { actual: isFinite, expected: 'Object', result: false, itActual: 'isFinite', itExpected: '"Object"' },
  { actual: isFinite(10), expected: 'Object', result: false, itActual: 'isFinite(10)', itExpected: '"Object"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'Object', result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"Object"' },
  { actual: Object, expected: 'Object', result: false, itActual: 'Object', itExpected: '"Object"' },
  { actual: {}, expected: 'Function', result: false, itActual: '{}', itExpected: '"Function"' },
  { actual: Error, expected: 'Object', result: false, itActual: 'Error', itExpected: '"Object"' },
  { actual: TypeError, expected: 'Object', result: false, itActual: 'TypeError', itExpected: '"Object"' },
  { actual: new Error('error'), expected: 'Object', result: false, itActual: 'new Error("error")', itExpected: '"Object"' },
  { actual: new TypeError('error'), expected: 'Object', result: false, itActual: 'new TypeError("error")', itExpected: '"Object"' },
  { actual: undefined, expected: 'Object', result: false, itActual: 'undefined', itExpected: '"Object"' },
  { actual: null, expected: 'Object', result: false, itActual: 'null', itExpected: '"Object"' },
  { actual: Infinity, expected: 'Object', result: false, itActual: 'Infinity', itExpected: '"Object"' },
  { actual: NaN, expected: 'Object', result: false, itActual: 'NaN', itExpected: '"Object"' },
  { actual: JSON, expected: 'Function', result: false, itActual: 'JSON', itExpected: '"Function"' },
  { actual: Promise, expected: 'Object', result: false, itActual: 'Promise', itExpected: '"Object"' },
  { actual: new Promise(() => { }), expected: 'Object', result: false, itActual: 'new Promise(()=>{})', itExpected: '"Object"' },
  { actual: {}.name, expected: 'Object', result: false, itActual: '{}.name', itExpected: '"Object"' },
  { actual: RangeError, expected: 'Object', result: false, itActual: 'RangeError', itExpected: '"Object"' },
  { actual: ReferenceError, expected: 'Object', result: false, itActual: 'ReferenceError', itExpected: '"Object"' },
  { actual: new RangeError('error'), expected: 'Object', result: false, itActual: 'new RangeError("error")', itExpected: '"Object"' },
  { actual: new ReferenceError('error'), expected: 'Object', result: false, itActual: 'new ReferenceError("error")', itExpected: '"Object"' },
  { actual: Name, expected: 'Object', result: false, itActual: 'Name', itExpected: '"Object"' },
  { actual: new Name(), expected: 'Object', result: false, itActual: 'new Name()', itExpected: '"Object"' },
  { actual: new instance(), expected: 'Object', result: false, itActual: 'new instance()', itExpected: '"Object"' },
  { actual: new truthy(), expected: 'Object', result: false, itActual: 'new truthy()', itExpected: '"Object"' },
  { actual: new falsy(), expected: 'Object', result: false, itActual: 'new falsy()', itExpected: '"Object"' },
  { actual: new any(), expected: 'Object', result: false, itActual: 'new any()', itExpected: '"Object"' },
  { actual: new objectable(), expected: 'Object', result: false, itActual: 'new objectable()', itExpected: '"Object"' },

  { actual: Date, expected: 'DATE', result: false, itActual: 'Date', itExpected: '"DATE"' },
  { actual: new Date(), expected: 'FUNCTION', result: false, itActual: 'new Date()', itExpected: '"FUNCTION"' },
  { actual: Function, expected: 'OBJECT', result: false, itActual: 'Function', itExpected: '"OBJECT"' },
  { actual: function () { }, expected: 'OBJECT', result: false, itActual: 'function(){}', itExpected: '"OBJECT"' },
  { actual: new Function('return "hello"'), expected: 'OBJECT', result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '"OBJECT"' },
  { actual: (function () { return arguments; })(), expected: 'FUNCTION', result: false, itActual: '(function(){return arguments;})()', itExpected: '"FUNCTION"' },
  { actual: () => { }, expected: 'OBJECT', result: false, itActual: '()=>{}', itExpected: '"OBJECT"' },
  { actual: String, expected: 'STRING', result: false, itActual: 'String', itExpected: '"STRING"' },
  { actual: new String('Hello'), expected: 'OBJECT', result: false, itActual: 'new String("Hello")', itExpected: '"OBJECT"' },
  { actual: new String(''), expected: 'OBJECT', result: false, itActual: 'new String("")', itExpected: '"OBJECT"' },
  { actual: 'Hello', expected: 'OBJECT', result: false, itActual: '"Hello"', itExpected: '"OBJECT"' },
  { actual: `Hello`, expected: 'OBJECT', result: false, itActual: '`Hello`', itExpected: '"OBJECT"' },
  { actual: '', expected: 'OBJECT', result: false, itActual: '""', itExpected: '"OBJECT"' },
  { actual: Number, expected: 'NUMBER', result: false, itActual: 'Number', itExpected: '"NUMBER"' },
  { actual: new Number(10), expected: 'OBJECT', result: false, itActual: 'new Number(10)', itExpected: '"OBJECT"' },
  { actual: new Number(0), expected: 'OBJECT', result: false, itActual: 'new Number(0)', itExpected: '"OBJECT"' },
  { actual: 10, expected: 'OBJECT', result: false, itActual: '10', itExpected: '"OBJECT"' },
  { actual: 0, expected: 'OBJECT', result: false, itActual: '0', itExpected: '"OBJECT"' },
  { actual: Boolean, expected: 'OBJECT', result: false, itActual: 'Boolean', itExpected: '"OBJECT"' },
  { actual: new Boolean(0), expected: 'OBJECT', result: false, itActual: 'new Boolean(0)', itExpected: '"OBJECT"' },
  { actual: false, expected: 'OBJECT', result: false, itActual: 'false', itExpected: '"OBJECT"' },
  { actual: true, expected: 'OBJECT', result: false, itActual: 'true', itExpected: '"OBJECT"' },
  { actual: RegExp, expected: 'REGEXP', result: false, itActual: 'RegExp', itExpected: '"REGEXP"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'OBJECT', result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '"OBJECT"' },
  { actual: /hello/, expected: 'OBJECT', result: false, itActual: '/hello/', itExpected: '"OBJECT"' },
  { actual: isNaN, expected: 'OBJECT', result: false, itActual: 'isNaN', itExpected: '"OBJECT"' },
  { actual: isNaN('hello'), expected: 'OBJECT', result: false, itActual: 'isNaN("hello")', itExpected: '"OBJECT"' },
  { actual: isFinite, expected: 'OBJECT', result: false, itActual: 'isFinite', itExpected: '"OBJECT"' },
  { actual: isFinite(10), expected: 'OBJECT', result: false, itActual: 'isFinite(10)', itExpected: '"OBJECT"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'OBJECT', result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"OBJECT"' },
  { actual: Object, expected: 'OBJECT', result: false, itActual: 'Object', itExpected: '"OBJECT"' },
  { actual: {}, expected: 'FUNCTION', result: false, itActual: '{}', itExpected: '"FUNCTION"' },
  { actual: Error, expected: 'OBJECT', result: false, itActual: 'Error', itExpected: '"OBJECT"' },
  { actual: TypeError, expected: 'OBJECT', result: false, itActual: 'TypeError', itExpected: '"OBJECT"' },
  { actual: new Error('error'), expected: 'OBJECT', result: false, itActual: 'new Error("error")', itExpected: '"OBJECT"' },
  { actual: new TypeError('error'), expected: 'OBJECT', result: false, itActual: 'new TypeError("error")', itExpected: '"OBJECT"' },
  { actual: undefined, expected: 'OBJECT', result: false, itActual: 'undefined', itExpected: '"OBJECT"' },
  { actual: null, expected: 'OBJECT', result: false, itActual: 'null', itExpected: '"OBJECT"' },
  { actual: Infinity, expected: 'OBJECT', result: false, itActual: 'Infinity', itExpected: '"OBJECT"' },
  { actual: NaN, expected: 'OBJECT', result: false, itActual: 'NaN', itExpected: '"OBJECT"' },
  { actual: JSON, expected: 'FUNCTION', result: false, itActual: 'JSON', itExpected: '"FUNCTION"' },
  { actual: Promise, expected: 'OBJECT', result: false, itActual: 'Promise', itExpected: '"OBJECT"' },
  { actual: new Promise(() => { }), expected: 'OBJECT', result: false, itActual: 'new Promise(()=>{})', itExpected: '"OBJECT"' },
  { actual: {}.name, expected: 'OBJECT', result: false, itActual: '{}.name', itExpected: '"OBJECT"' },
  { actual: RangeError, expected: 'OBJECT', result: false, itActual: 'RangeError', itExpected: '"OBJECT"' },
  { actual: ReferenceError, expected: 'OBJECT', result: false, itActual: 'ReferenceError', itExpected: '"OBJECT"' },
  { actual: new RangeError('error'), expected: 'OBJECT', result: false, itActual: 'new RangeError("error")', itExpected: '"OBJECT"' },
  { actual: new ReferenceError('error'), expected: 'OBJECT', result: false, itActual: 'new ReferenceError("error")', itExpected: '"OBJECT"' },
  { actual: Name, expected: 'OBJECT', result: false, itActual: 'Name', itExpected: '"OBJECT"' },
  { actual: new Name(), expected: 'OBJECT', result: false, itActual: 'new Name()', itExpected: '"OBJECT"' },
  { actual: new instance(), expected: 'OBJECT', result: false, itActual: 'new instance()', itExpected: '"OBJECT"' },
  { actual: new truthy(), expected: 'OBJECT', result: false, itActual: 'new truthy()', itExpected: '"OBJECT"' },
  { actual: new falsy(), expected: 'OBJECT', result: false, itActual: 'new falsy()', itExpected: '"OBJECT"' },
  { actual: new any(), expected: 'OBJECT', result: false, itActual: 'new any()', itExpected: '"OBJECT"' },
  { actual: new objectable(), expected: 'OBJECT', result: false, itActual: 'new objectable()', itExpected: '"OBJECT"' },

  { actual: Date, expected: 'function', result: true, itActual: 'Date', itExpected: '"function"' },
  { actual: new Date(), expected: 'date', result: true, itActual: 'new Date()', itExpected: '"date"' },
  { actual: Function, expected: 'function', result: true, itActual: 'Function', itExpected: '"function"' },
  { actual: function () { }, expected: 'function', result: true, itActual: 'function(){}', itExpected: '"function"' },
  { actual: new Function('return "hello"'), expected: 'function', result: true, itActual: 'new Function(\'return "hello"\')', itExpected: '"function"' },
  { actual: (function () { return arguments; })(), expected: 'arguments', result: true, itActual: '(function(){return arguments;})()', itExpected: '"arguments"' },
  { actual: (function () { return arguments; })(), expected: 'object', result: true, itActual: '(function(){return arguments;})()', itExpected: '"object"' },
  { actual: () => { }, expected: 'function', result: true, itActual: '()=>{}', itExpected: '"function"' },
  { actual: String, expected: 'function', result: true, itActual: 'String', itExpected: '"function"' },
  { actual: new String('Hello'), expected: 'string', result: true, itActual: 'new String("Hello")', itExpected: '"string"' },
  { actual: new String(''), expected: 'string', result: true, itActual: 'new String("")', itExpected: '"string"' },
  { actual: 'Hello', expected: 'string', result: true, itActual: '"Hello"', itExpected: '"string"' },
  { actual: `Hello`, expected: 'string', result: true, itActual: '`Hello`', itExpected: '"string"' },
  { actual: '', expected: 'string', result: true, itActual: '""', itExpected: '"string"' },
  { actual: Number, expected: 'function', result: true, itActual: 'Number', itExpected: '"function"' },
  { actual: new Number(10), expected: 'number', result: true, itActual: 'new Number(10)', itExpected: '"number"' },
  { actual: new Number(0), expected: 'number', result: true, itActual: 'new Number(0)', itExpected: '"number"' },
  { actual: 10, expected: 'number', result: true, itActual: '10', itExpected: '"number"' },
  { actual: 0, expected: 'number', result: true, itActual: '0', itExpected: '"number"' },
  { actual: Boolean, expected: 'function', result: true, itActual: 'Boolean', itExpected: '"function"' },
  { actual: new Boolean(0), expected: 'boolean', result: true, itActual: 'new Boolean(0)', itExpected: '"boolean"' },
  { actual: false, expected: 'boolean', result: true, itActual: 'false', itExpected: '"boolean"' },
  { actual: true, expected: 'boolean', result: true, itActual: 'true', itExpected: '"boolean"' },
  { actual: RegExp, expected: 'function', result: true, itActual: 'RegExp', itExpected: '"function"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'regexp', result: true, itActual: 'new RegExp("Hello","gim")', itExpected: '"regexp"' },
  { actual: /hello/, expected: 'regexp', result: true, itActual: '/hello/', itExpected: '"regexp"' },
  { actual: isNaN, expected: 'function', result: true, itActual: 'isNaN', itExpected: '"function"' },
  { actual: isNaN('hello'), expected: 'boolean', result: true, itActual: 'isNaN("hello")', itExpected: '"boolean"' },
  { actual: isFinite, expected: 'function', result: true, itActual: 'isFinite', itExpected: '"function"' },
  { actual: isFinite(10), expected: 'boolean', result: true, itActual: 'isFinite(10)', itExpected: '"boolean"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'number', result: true, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"number"' },
  { actual: Object, expected: 'function', result: true, itActual: 'Object', itExpected: '"function"' },
  { actual: {}, expected: 'object', result: true, itActual: '{}', itExpected: '"object"' },
  { actual: Error, expected: 'function', result: true, itActual: 'Error', itExpected: '"function"' },
  { actual: TypeError, expected: 'function', result: true, itActual: 'TypeError', itExpected: '"function"' },
  { actual: new Error('error'), expected: 'error', result: true, itActual: 'new Error("error")', itExpected: '"error"' },
  { actual: new TypeError('error'), expected: 'error', result: false, itActual: 'new TypeError("error")', itExpected: '"error"' },
  { actual: new TypeError('error'), expected: 'typeerror', result: true, itActual: 'new TypeError("error")', itExpected: '"typeerror"' },
  { actual: undefined, expected: 'undefined', result: true, itActual: 'undefined', itExpected: '"undefined"' },
  { actual: null, expected: 'null', result: true, itActual: 'null', itExpected: '"null"' },
  { actual: Infinity, expected: 'number', result: true, itActual: 'Infinity', itExpected: '"number"' },
  { actual: NaN, expected: 'number', result: true, itActual: 'NaN', itExpected: '"number"' },
  { actual: JSON, expected: 'object', result: true, itActual: 'JSON', itExpected: '"object"' },
  { actual: Promise, expected: 'function', result: true, itActual: 'Promise', itExpected: '"function"' },
  { actual: new Promise(() => { }), expected: 'promise', result: true, itActual: 'new Promise(()=>{})', itExpected: '"promise"' },
  { actual: {}.name, expected: 'undefined', result: true, itActual: '{}.name', itExpected: '"undefined"' },
  { actual: RangeError, expected: 'function', result: true, itActual: 'RangeError', itExpected: '"function"' },
  { actual: ReferenceError, expected: 'function', result: true, itActual: 'ReferenceError', itExpected: '"function"' },
  { actual: new RangeError('error'), expected: 'error', result: false, itActual: 'new RangeError("error")', itExpected: '"error"' },
  { actual: new RangeError('error'), expected: 'rangeerror', result: true, itActual: 'new RangeError("error")', itExpected: '"rangeerror"' },
  { actual: new ReferenceError('error'), expected: 'error', result: false, itActual: 'new ReferenceError("error")', itExpected: '"error"' },
  { actual: new ReferenceError('error'), expected: 'referenceerror', result: true, itActual: 'new ReferenceError("error")', itExpected: '"referenceerror"' },
  { actual: Name, expected: 'function', result: true, itActual: 'Name', itExpected: '"function"' },
  { actual: new Name(), expected: 'name', result: true, itActual: 'new Name()', itExpected: '"name"' },
  { actual: new instance(), expected: 'instance', result: true, itActual: 'new instance()', itExpected: '"instance"' },
  { actual: new truthy(), expected: 'truthy', result: true, itActual: 'new truthy()', itExpected: '"truthy"' },
  { actual: new falsy(), expected: 'falsy', result: true, itActual: 'new falsy()', itExpected: '"falsy"' },
  { actual: new any(), expected: 'any', result: true, itActual: 'new any()', itExpected: '"any"' },
  { actual: new objectable(), expected: 'objectable', result: true, itActual: 'new objectable()', itExpected: '"objectable"' },

  { actual: Date, expected: 'fun', result: false, itActual: 'Date', itExpected: '"fun"' },
  { actual: new Date(), expected: 'dat', result: false, itActual: 'new Date()', itExpected: '"dat"' },
  { actual: Function, expected: 'fun', result: false, itActual: 'Function', itExpected: '"fun"' },
  { actual: function () { }, expected: 'fun', result: false, itActual: 'function(){}', itExpected: '"fun"' },
  { actual: new Function('return "hello"'), expected: 'fun', result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '"fun"' },
  { actual: (function () { return arguments; })(), expected: 'arg', result: false, itActual: '(function(){return arguments;})()', itExpected: '"arg"' },
  { actual: (function () { return arguments; })(), expected: 'obj', result: false, itActual: '(function(){return arguments;})()', itExpected: '"obj"' },
  { actual: () => { }, expected: 'fun', result: false, itActual: '()=>{}', itExpected: '"fun"' },
  { actual: String, expected: 'fun', result: false, itActual: 'String', itExpected: '"fun"' },
  { actual: new String('Hello'), expected: 'str', result: false, itActual: 'new String("Hello")', itExpected: '"str"' },
  { actual: new String(''), expected: 'str', result: false, itActual: 'new String("")', itExpected: '"str"' },
  { actual: 'Hello', expected: 'str', result: false, itActual: '"Hello"', itExpected: '"str"' },
  { actual: `Hello`, expected: 'str', result: false, itActual: '`Hello`', itExpected: '"str"' },
  { actual: '', expected: 'str', result: false, itActual: '""', itExpected: '"str"' },
  { actual: Number, expected: 'fun', result: false, itActual: 'Number', itExpected: '"fun"' },
  { actual: new Number(10), expected: 'num', result: false, itActual: 'new Number(10)', itExpected: '"num"' },
  { actual: new Number(0), expected: 'num', result: false, itActual: 'new Number(0)', itExpected: '"num"' },
  { actual: 10, expected: 'num', result: false, itActual: '10', itExpected: '"num"' },
  { actual: 0, expected: 'num', result: false, itActual: '0', itExpected: '"num"' },
  { actual: Boolean, expected: 'fun', result: false, itActual: 'Boolean', itExpected: '"fun"' },
  { actual: new Boolean(0), expected: 'bool', result: false, itActual: 'new Boolean(0)', itExpected: '"bool"' },
  { actual: false, expected: 'bool', result: false, itActual: 'false', itExpected: '"bool"' },
  { actual: true, expected: 'bool', result: false, itActual: 'true', itExpected: '"bool"' },
  { actual: RegExp, expected: 'fun', result: false, itActual: 'RegExp', itExpected: '"fun"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'reg', result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '"reg"' },
  { actual: /hello/, expected: 'reg', result: false, itActual: '/hello/', itExpected: '"reg"' },
  { actual: isNaN, expected: 'fun', result: false, itActual: 'isNaN', itExpected: '"fun"' },
  { actual: isNaN('hello'), expected: 'bool', result: false, itActual: 'isNaN("hello")', itExpected: '"bool"' },
  { actual: isFinite, expected: 'fun', result: false, itActual: 'isFinite', itExpected: '"fun"' },
  { actual: isFinite(10), expected: 'bool', result: false, itActual: 'isFinite(10)', itExpected: '"bool"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'num', result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"num"' },
  { actual: Object, expected: 'fun', result: false, itActual: 'Object', itExpected: '"fun"' },
  { actual: {}, expected: 'obj', result: false, itActual: '{}', itExpected: '"obj"' },
  { actual: Error, expected: 'fun', result: false, itActual: 'Error', itExpected: '"fun"' },
  { actual: TypeError, expected: 'fun', result: false, itActual: 'TypeError', itExpected: '"fun"' },
  { actual: new Error('error'), expected: 'err', result: false, itActual: 'new Error("error")', itExpected: '"err"' },
  { actual: new TypeError('error'), expected: 'err', result: false, itActual: 'new TypeError("error")', itExpected: '"err"' },
  { actual: new TypeError('error'), expected: 'err', result: false, itActual: 'new TypeError("error")', itExpected: '"err"' },
  { actual: undefined, expected: 'und', result: false, itActual: 'undefined', itExpected: '"und"' },
  { actual: null, expected: 'nu', result: false, itActual: 'null', itExpected: '"nu"' },
  { actual: Infinity, expected: 'num', result: false, itActual: 'Infinity', itExpected: '"num"' },
  { actual: NaN, expected: 'num', result: false, itActual: 'NaN', itExpected: '"num"' },
  { actual: JSON, expected: 'obj', result: false, itActual: 'JSON', itExpected: '"obj"' },
  { actual: Promise, expected: 'fun', result: false, itActual: 'Promise', itExpected: '"fun"' },
  { actual: new Promise(() => { }), expected: 'pro', result: false, itActual: 'new Promise(()=>{})', itExpected: '"pro"' },
  { actual: {}.name, expected: 'und', result: false, itActual: '{}.name', itExpected: '"und"' },
  { actual: RangeError, expected: 'fun', result: false, itActual: 'RangeError', itExpected: '"fun"' },
  { actual: ReferenceError, expected: 'fun', result: false, itActual: 'ReferenceError', itExpected: '"fun"' },
  { actual: new RangeError('error'), expected: 'err', result: false, itActual: 'new RangeError("error")', itExpected: '"err"' },
  { actual: new RangeError('error'), expected: 'err', result: false, itActual: 'new RangeError("error")', itExpected: '"err"' },
  { actual: new ReferenceError('error'), expected: 'err', result: false, itActual: 'new ReferenceError("error")', itExpected: '"err"' },
  { actual: new ReferenceError('error'), expected: 'err', result: false, itActual: 'new ReferenceError("error")', itExpected: '"err"' },
  { actual: Name, expected: 'fun', result: false, itActual: 'Name', itExpected: '"fun"' },
  { actual: new Name(), expected: 'na', result: false, itActual: 'new Name()', itExpected: '"na"' },
  { actual: new instance(), expected: 'ins', result: false, itActual: 'new instance()', itExpected: '"ins"' },
  { actual: new truthy(), expected: 'tr', result: false, itActual: 'new truthy()', itExpected: '"tr"' },
  { actual: new falsy(), expected: 'fal', result: false, itActual: 'new falsy()', itExpected: '"fal"' },
  { actual: new any(), expected: 'an', result: false, itActual: 'new any()', itExpected: '"an"' },
  { actual: new objectable(), expected: 'obj', result: false, itActual: 'new objectable()', itExpected: '"obj"' },

  { actual: Date, expected: 'Function', result: true, itActual: 'Date', itExpected: '"Function"' },
  { actual: new Date(), expected: 'Date', result: true, itActual: 'new Date()', itExpected: '"Date"' },
  { actual: Function, expected: 'Function', result: true, itActual: 'Function', itExpected: '"Function"' },
  { actual: function () { }, expected: 'Function', result: true, itActual: 'function(){}', itExpected: '"Function"' },
  { actual: new Function('return "hello"'), expected: 'Function', result: true, itActual: 'new Function(\'return "hello"\')', itExpected: '"Function"' },
  { actual: (function () { return arguments; })(), expected: 'Arguments', result: true, itActual: '(function(){return arguments;})()', itExpected: '"Arguments"' },
  { actual: (function () { return arguments; })(), expected: 'Object', result: true, itActual: '(function(){return arguments;})()', itExpected: '"Object"' },
  { actual: () => { }, expected: 'Function', result: true, itActual: '()=>{}', itExpected: '"Function"' },
  { actual: String, expected: 'Function', result: true, itActual: 'String', itExpected: '"Function"' },
  { actual: new String('Hello'), expected: 'String', result: true, itActual: 'new String("Hello")', itExpected: '"String"' },
  { actual: new String(''), expected: 'String', result: true, itActual: 'new String("")', itExpected: '"String"' },
  { actual: 'Hello', expected: 'String', result: true, itActual: '"Hello"', itExpected: '"String"' },
  { actual: `Hello`, expected: 'String', result: true, itActual: '`Hello`', itExpected: '"String"' },
  { actual: '', expected: 'String', result: true, itActual: '""', itExpected: '"String"' },
  { actual: Number, expected: 'Function', result: true, itActual: 'Number', itExpected: '"Function"' },
  { actual: new Number(10), expected: 'Number', result: true, itActual: 'new Number(10)', itExpected: '"Number"' },
  { actual: new Number(0), expected: 'Number', result: true, itActual: 'new Number(0)', itExpected: '"Number"' },
  { actual: 10, expected: 'Number', result: true, itActual: '10', itExpected: '"Number"' },
  { actual: 0, expected: 'Number', result: true, itActual: '0', itExpected: '"Number"' },
  { actual: Boolean, expected: 'Function', result: true, itActual: 'Boolean', itExpected: '"Function"' },
  { actual: new Boolean(0), expected: 'Boolean', result: true, itActual: 'new Boolean(0)', itExpected: '"Boolean"' },
  { actual: false, expected: 'Boolean', result: true, itActual: 'false', itExpected: '"Boolean"' },
  { actual: true, expected: 'Boolean', result: true, itActual: 'true', itExpected: '"Boolean"' },
  { actual: RegExp, expected: 'Function', result: true, itActual: 'RegExp', itExpected: '"Function"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'RegExp', result: true, itActual: 'new RegExp("Hello","gim")', itExpected: '"RegExp"' },
  { actual: /hello/, expected: 'RegExp', result: true, itActual: '/hello/', itExpected: '"RegExp"' },
  { actual: isNaN, expected: 'Function', result: true, itActual: 'isNaN', itExpected: '"Function"' },
  { actual: isNaN('hello'), expected: 'Boolean', result: true, itActual: 'isNaN("hello")', itExpected: '"Boolean"' },
  { actual: isFinite, expected: 'Function', result: true, itActual: 'isFinite', itExpected: '"Function"' },
  { actual: isFinite(10), expected: 'Boolean', result: true, itActual: 'isFinite(10)', itExpected: '"Boolean"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'Number', result: true, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"Number"' },
  { actual: Object, expected: 'Function', result: true, itActual: 'Object', itExpected: '"Function"' },
  { actual: {}, expected: 'Object', result: true, itActual: '{}', itExpected: '"Object"' },
  { actual: Error, expected: 'Function', result: true, itActual: 'Error', itExpected: '"Function"' },
  { actual: TypeError, expected: 'Function', result: true, itActual: 'TypeError', itExpected: '"Function"' },
  { actual: new Error('error'), expected: 'Error', result: true, itActual: 'new Error("error")', itExpected: '"Error"' },
  { actual: new TypeError('error'), expected: 'Error', result: false, itActual: 'new TypeError("error")', itExpected: '"Error"' },
  { actual: new TypeError('error'), expected: 'TypeError', result: true, itActual: 'new TypeError("error")', itExpected: '"TypeError"' },
  { actual: undefined, expected: 'Undefined', result: true, itActual: 'undefined', itExpected: '"Undefined"' },
  { actual: null, expected: 'Null', result: true, itActual: 'null', itExpected: '"Null"' },
  { actual: Infinity, expected: 'Number', result: true, itActual: 'Infinity', itExpected: '"Number"' },
  { actual: NaN, expected: 'Number', result: true, itActual: 'NaN', itExpected: '"Number"' },
  { actual: JSON, expected: 'Object', result: true, itActual: 'JSON', itExpected: '"Object"' },
  { actual: Promise, expected: 'Function', result: true, itActual: 'Promise', itExpected: '"Function"' },
  { actual: new Promise(() => { }), expected: 'Promise', result: true, itActual: 'new Promise(()=>{})', itExpected: '"Promise"' },
  { actual: {}.name, expected: 'Undefined', result: true, itActual: '{}.name', itExpected: '"Undefined"' },
  { actual: RangeError, expected: 'Function', result: true, itActual: 'RangeError', itExpected: '"Function"' },
  { actual: ReferenceError, expected: 'Function', result: true, itActual: 'ReferenceError', itExpected: '"Function"' },
  { actual: new RangeError('error'), expected: 'Error', result: false, itActual: 'new RangeError("error")', itExpected: '"Error"' },
  { actual: new RangeError('error'), expected: 'RangeError', result: true, itActual: 'new RangeError("error")', itExpected: '"RangeError"' },
  { actual: new ReferenceError('error'), expected: 'Error', result: false, itActual: 'new ReferenceError("error")', itExpected: '"Error"' },
  { actual: new ReferenceError('error'), expected: 'ReferenceError', result: true, itActual: 'new ReferenceError("error")', itExpected: '"ReferenceError"' },
  { actual: Name, expected: 'Function', result: true, itActual: 'Name', itExpected: '"Function"' },
  { actual: new Name(), expected: 'Name', result: true, itActual: 'new Name()', itExpected: '"Name"' },
  { actual: new instance(), expected: 'Instance', result: true, itActual: 'new instance()', itExpected: '"Instance"' },
  { actual: new truthy(), expected: 'Truthy', result: true, itActual: 'new truthy()', itExpected: '"Truthy"' },
  { actual: new falsy(), expected: 'Falsy', result: true, itActual: 'new falsy()', itExpected: '"Falsy"' },
  { actual: new any(), expected: 'Any', result: true, itActual: 'new any()', itExpected: '"Any"' },
  { actual: new objectable(), expected: 'Objectable', result: true, itActual: 'new objectable()', itExpected: '"Objectable"' },

  { actual: Date, expected: 'Fun', result: false, itActual: 'Date', itExpected: '"Fun"' },
  { actual: new Date(), expected: 'Dat', result: false, itActual: 'new Date()', itExpected: '"Dat"' },
  { actual: Function, expected: 'Fun', result: false, itActual: 'Function', itExpected: '"Fun"' },
  { actual: function () { }, expected: 'Fun', result: false, itActual: 'function(){}', itExpected: '"Fun"' },
  { actual: new Function('return "hello"'), expected: 'Fun', result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '"Fun"' },
  { actual: (function () { return arguments; })(), expected: 'Arg', result: false, itActual: '(function(){return arguments;})()', itExpected: '"Arg"' },
  { actual: (function () { return arguments; })(), expected: 'Obj', result: false, itActual: '(function(){return arguments;})()', itExpected: '"Obj"' },
  { actual: () => { }, expected: 'Fun', result: false, itActual: '()=>{}', itExpected: '"Fun"' },
  { actual: String, expected: 'Fun', result: false, itActual: 'String', itExpected: '"Fun"' },
  { actual: new String('Hello'), expected: 'Str', result: false, itActual: 'new String("Hello")', itExpected: '"Str"' },
  { actual: new String(''), expected: 'Str', result: false, itActual: 'new String("")', itExpected: '"Str"' },
  { actual: 'Hello', expected: 'Str', result: false, itActual: '"Hello"', itExpected: '"Str"' },
  { actual: `Hello`, expected: 'Str', result: false, itActual: '`Hello`', itExpected: '"Str"' },
  { actual: '', expected: 'Str', result: false, itActual: '""', itExpected: '"Str"' },
  { actual: Number, expected: 'Fun', result: false, itActual: 'Number', itExpected: '"Fun"' },
  { actual: new Number(10), expected: 'Num', result: false, itActual: 'new Number(10)', itExpected: '"Num"' },
  { actual: new Number(0), expected: 'Num', result: false, itActual: 'new Number(0)', itExpected: '"Num"' },
  { actual: 10, expected: 'Num', result: false, itActual: '10', itExpected: '"Num"' },
  { actual: 0, expected: 'Num', result: false, itActual: '0', itExpected: '"Num"' },
  { actual: Boolean, expected: 'Fun', result: false, itActual: 'Boolean', itExpected: '"Fun"' },
  { actual: new Boolean(0), expected: 'Bool', result: false, itActual: 'new Boolean(0)', itExpected: '"Bool"' },
  { actual: false, expected: 'Bool', result: false, itActual: 'false', itExpected: '"Bool"' },
  { actual: true, expected: 'Bool', result: false, itActual: 'true', itExpected: '"Bool"' },
  { actual: RegExp, expected: 'Fun', result: false, itActual: 'RegExp', itExpected: '"Fun"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'Reg', result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '"Reg"' },
  { actual: /hello/, expected: 'Reg', result: false, itActual: '/hello/', itExpected: '"Reg"' },
  { actual: isNaN, expected: 'Fun', result: false, itActual: 'isNaN', itExpected: '"Fun"' },
  { actual: isNaN('hello'), expected: 'Bool', result: false, itActual: 'isNaN("hello")', itExpected: '"Bool"' },
  { actual: isFinite, expected: 'Fun', result: false, itActual: 'isFinite', itExpected: '"Fun"' },
  { actual: isFinite(10), expected: 'Bool', result: false, itActual: 'isFinite(10)', itExpected: '"Bool"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'Num', result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"Num"' },
  { actual: Object, expected: 'Fun', result: false, itActual: 'Object', itExpected: '"Fun"' },
  { actual: {}, expected: 'Obj', result: false, itActual: '{}', itExpected: '"Obj"' },
  { actual: Error, expected: 'Fun', result: false, itActual: 'Error', itExpected: '"Fun"' },
  { actual: TypeError, expected: 'Fun', result: false, itActual: 'TypeError', itExpected: '"Fun"' },
  { actual: new Error('error'), expected: 'Err', result: false, itActual: 'new Error("error")', itExpected: '"Err"' },
  { actual: new TypeError('error'), expected: 'Err', result: false, itActual: 'new TypeError("error")', itExpected: '"Err"' },
  { actual: new TypeError('error'), expected: 'Err', result: false, itActual: 'new TypeError("error")', itExpected: '"Err"' },
  { actual: undefined, expected: 'Und', result: false, itActual: 'undefined', itExpected: '"Und"' },
  { actual: null, expected: 'Nu', result: false, itActual: 'null', itExpected: '"Nu"' },
  { actual: Infinity, expected: 'Num', result: false, itActual: 'Infinity', itExpected: '"Num"' },
  { actual: NaN, expected: 'Num', result: false, itActual: 'NaN', itExpected: '"Num"' },
  { actual: JSON, expected: 'Obj', result: false, itActual: 'JSON', itExpected: '"Obj"' },
  { actual: Promise, expected: 'Fun', result: false, itActual: 'Promise', itExpected: '"Fun"' },
  { actual: new Promise(() => { }), expected: 'Pro', result: false, itActual: 'new Promise(()=>{})', itExpected: '"Pro"' },
  { actual: {}.name, expected: 'Und', result: false, itActual: '{}.name', itExpected: '"Und"' },
  { actual: RangeError, expected: 'Fun', result: false, itActual: 'RangeError', itExpected: '"Fun"' },
  { actual: ReferenceError, expected: 'Fun', result: false, itActual: 'ReferenceError', itExpected: '"Fun"' },
  { actual: new RangeError('error'), expected: 'Err', result: false, itActual: 'new RangeError("error")', itExpected: '"Err"' },
  { actual: new RangeError('error'), expected: 'Err', result: false, itActual: 'new RangeError("error")', itExpected: '"Err"' },
  { actual: new ReferenceError('error'), expected: 'Err', result: false, itActual: 'new ReferenceError("error")', itExpected: '"Err"' },
  { actual: new ReferenceError('error'), expected: 'Err', result: false, itActual: 'new ReferenceError("error")', itExpected: '"Err"' },
  { actual: Name, expected: 'Fun', result: false, itActual: 'Name', itExpected: '"Fun"' },
  { actual: new Name(), expected: 'Na', result: false, itActual: 'new Name()', itExpected: '"Na"' },
  { actual: new instance(), expected: 'Ins', result: false, itActual: 'new instance()', itExpected: '"Ins"' },
  { actual: new truthy(), expected: 'Tr', result: false, itActual: 'new truthy()', itExpected: '"Tr"' },
  { actual: new falsy(), expected: 'Fal', result: false, itActual: 'new falsy()', itExpected: '"Fal"' },
  { actual: new any(), expected: 'An', result: false, itActual: 'new any()', itExpected: '"An"' },
  { actual: new objectable(), expected: 'Obj', result: false, itActual: 'new objectable()', itExpected: '"Obj"' },

  { actual: Date, expected: 'FUNCTION', result: true, itActual: 'Date', itExpected: '"FUNCTION"' },
  { actual: new Date(), expected: 'DATE', result: true, itActual: 'new Date()', itExpected: '"DATE"' },
  { actual: Function, expected: 'FUNCTION', result: true, itActual: 'Function', itExpected: '"FUNCTION"' },
  { actual: function () { }, expected: 'FUNCTION', result: true, itActual: 'function(){}', itExpected: '"FUNCTION"' },
  { actual: new Function('return "hello"'), expected: 'FUNCTION', result: true, itActual: 'new Function(\'return "hello"\')', itExpected: '"FUNCTION"' },
  { actual: (function () { return arguments; })(), expected: 'ARGUMENTS', result: true, itActual: '(function(){return arguments;})()', itExpected: '"ARGUMENTS"' },
  { actual: (function () { return arguments; })(), expected: 'OBJECT', result: true, itActual: '(function(){return arguments;})()', itExpected: '"OBJECT"' },
  { actual: () => { }, expected: 'FUNCTION', result: true, itActual: '()=>{}', itExpected: '"FUNCTION"' },
  { actual: String, expected: 'FUNCTION', result: true, itActual: 'String', itExpected: '"FUNCTION"' },
  { actual: new String('Hello'), expected: 'STRING', result: true, itActual: 'new String("Hello")', itExpected: '"STRING"' },
  { actual: new String(''), expected: 'STRING', result: true, itActual: 'new String("")', itExpected: '"STRING"' },
  { actual: 'Hello', expected: 'STRING', result: true, itActual: '"Hello"', itExpected: '"STRING"' },
  { actual: `Hello`, expected: 'STRING', result: true, itActual: '`Hello`', itExpected: '"STRING"' },
  { actual: '', expected: 'STRING', result: true, itActual: '""', itExpected: '"STRING"' },
  { actual: Number, expected: 'FUNCTION', result: true, itActual: 'Number', itExpected: '"FUNCTION"' },
  { actual: new Number(10), expected: 'NUMBER', result: true, itActual: 'new Number(10)', itExpected: '"NUMBER"' },
  { actual: new Number(0), expected: 'NUMBER', result: true, itActual: 'new Number(0)', itExpected: '"NUMBER"' },
  { actual: 10, expected: 'NUMBER', result: true, itActual: '10', itExpected: '"NUMBER"' },
  { actual: 0, expected: 'NUMBER', result: true, itActual: '0', itExpected: '"NUMBER"' },
  { actual: Boolean, expected: 'FUNCTION', result: true, itActual: 'Boolean', itExpected: '"FUNCTION"' },
  { actual: new Boolean(0), expected: 'BOOLEAN', result: true, itActual: 'new Boolean(0)', itExpected: '"BOOLEAN"' },
  { actual: false, expected: 'BOOLEAN', result: true, itActual: 'false', itExpected: '"BOOLEAN"' },
  { actual: true, expected: 'BOOLEAN', result: true, itActual: 'true', itExpected: '"BOOLEAN"' },
  { actual: RegExp, expected: 'FUNCTION', result: true, itActual: 'RegExp', itExpected: '"FUNCTION"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'REGEXP', result: true, itActual: 'new RegExp("Hello","gim")', itExpected: '"REGEXP"' },
  { actual: /hello/, expected: 'REGEXP', result: true, itActual: '/hello/', itExpected: '"REGEXP"' },
  { actual: isNaN, expected: 'FUNCTION', result: true, itActual: 'isNaN', itExpected: '"FUNCTION"' },
  { actual: isNaN('hello'), expected: 'BOOLEAN', result: true, itActual: 'isNaN("hello")', itExpected: '"BOOLEAN"' },
  { actual: isFinite, expected: 'FUNCTION', result: true, itActual: 'isFinite', itExpected: '"FUNCTION"' },
  { actual: isFinite(10), expected: 'BOOLEAN', result: true, itActual: 'isFinite(10)', itExpected: '"BOOLEAN"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'NUMBER', result: true, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"NUMBER"' },
  { actual: Object, expected: 'FUNCTION', result: true, itActual: 'Object', itExpected: '"FUNCTION"' },
  { actual: {}, expected: 'OBJECT', result: true, itActual: '{}', itExpected: '"OBJECT"' },
  { actual: Error, expected: 'FUNCTION', result: true, itActual: 'Error', itExpected: '"FUNCTION"' },
  { actual: TypeError, expected: 'FUNCTION', result: true, itActual: 'TypeError', itExpected: '"FUNCTION"' },
  { actual: new Error('error'), expected: 'ERROR', result: true, itActual: 'new Error("error")', itExpected: '"ERROR"' },
  { actual: new TypeError('error'), expected: 'ERROR', result: false, itActual: 'new TypeError("error")', itExpected: '"ERROR"' },
  { actual: new TypeError('error'), expected: 'TYPEERROR', result: true, itActual: 'new TypeError("error")', itExpected: '"TYPEERROR"' },
  { actual: undefined, expected: 'UNDEFINED', result: true, itActual: 'undefined', itExpected: '"UNDEFINED"' },
  { actual: null, expected: 'NULL', result: true, itActual: 'null', itExpected: '"NULL"' },
  { actual: Infinity, expected: 'NUMBER', result: true, itActual: 'Infinity', itExpected: '"NUMBER"' },
  { actual: NaN, expected: 'NUMBER', result: true, itActual: 'NaN', itExpected: '"NUMBER"' },
  { actual: JSON, expected: 'OBJECT', result: true, itActual: 'JSON', itExpected: '"OBJECT"' },
  { actual: Promise, expected: 'FUNCTION', result: true, itActual: 'Promise', itExpected: '"FUNCTION"' },
  { actual: new Promise(() => { }), expected: 'PROMISE', result: true, itActual: 'new Promise(()=>{})', itExpected: '"PROMISE"' },
  { actual: {}.name, expected: 'UNDEFINED', result: true, itActual: '{}.name', itExpected: '"UNDEFINED"' },
  { actual: RangeError, expected: 'FUNCTION', result: true, itActual: 'RangeError', itExpected: '"FUNCTION"' },
  { actual: ReferenceError, expected: 'FUNCTION', result: true, itActual: 'ReferenceError', itExpected: '"FUNCTION"' },
  { actual: new RangeError('error'), expected: 'ERROR', result: false, itActual: 'new RangeError("error")', itExpected: '"ERROR"' },
  { actual: new RangeError('error'), expected: 'RANGEERROR', result: true, itActual: 'new RangeError("error")', itExpected: '"RANGEERROR"' },
  { actual: new ReferenceError('error'), expected: 'ERROR', result: false, itActual: 'new ReferenceError("error")', itExpected: '"ERROR"' },
  { actual: new ReferenceError('error'), expected: 'REFERENCEERROR', result: true, itActual: 'new ReferenceError("error")', itExpected: '"REFERENCEERROR"' },
  { actual: Name, expected: 'FUNCTION', result: true, itActual: 'Name', itExpected: '"FUNCTION"' },
  { actual: new Name(), expected: 'NAME', result: true, itActual: 'new Name()', itExpected: '"NAME"' },
  { actual: new instance(), expected: 'INSTANCE', result: true, itActual: 'new instance()', itExpected: '"INSTANCE"' },
  { actual: new truthy(), expected: 'TRUTHY', result: true, itActual: 'new truthy()', itExpected: '"TRUTHY"' },
  { actual: new falsy(), expected: 'FALSY', result: true, itActual: 'new falsy()', itExpected: '"FALSY"' },
  { actual: new any(), expected: 'ANY', result: true, itActual: 'new any()', itExpected: '"ANY"' },
  { actual: new objectable(), expected: 'OBJECTABLE', result: true, itActual: 'new objectable()', itExpected: '"OBJECTABLE"' },

  { actual: Date, expected: '', result: true, itActual: 'Date', itExpected: '""' },
  { actual: new Date(), expected: '', result: true, itActual: 'new Date()', itExpected: '""' },
  { actual: Function, expected: '', result: true, itActual: 'Function', itExpected: '""' },
  { actual: function () { }, expected: '', result: true, itActual: 'function(){}', itExpected: '""' },
  { actual: new Function('return "hello"'), expected: '', result: true, itActual: 'new Function(\'return "hello"\')', itExpected: '""' },
  { actual: (function () { return arguments; })(), expected: '', result: true, itActual: '(function(){return arguments;})()', itExpected: '""' },
  { actual: () => { }, expected: '', result: true, itActual: '()=>{}', itExpected: '""' },
  { actual: String, expected: '', result: true, itActual: 'String', itExpected: '""' },
  { actual: new String('Hello'), expected: '', result: true, itActual: 'new String("Hello")', itExpected: '""' },
  { actual: new String(''), expected: '', result: true, itActual: 'new String("")', itExpected: '""' },
  { actual: 'Hello', expected: '', result: true, itActual: '"Hello"', itExpected: '""' },
  { actual: `Hello`, expected: '', result: true, itActual: '`Hello`', itExpected: '""' },
  { actual: '', expected: '', result: true, itActual: '""', itExpected: '""' },
  { actual: Number, expected: '', result: true, itActual: 'Number', itExpected: '""' },
  { actual: new Number(10), expected: '', result: true, itActual: 'new Number(10)', itExpected: '""' },
  { actual: new Number(0), expected: '', result: true, itActual: 'new Number(0)', itExpected: '""' },
  { actual: 10, expected: '', result: true, itActual: '10', itExpected: '""' },
  { actual: 0, expected: '', result: true, itActual: '0', itExpected: '""' },
  { actual: Boolean, expected: '', result: true, itActual: 'Boolean', itExpected: '""' },
  { actual: new Boolean(0), expected: '', result: true, itActual: 'new Boolean(0)', itExpected: '""' },
  { actual: false, expected: '', result: true, itActual: 'false', itExpected: '""' },
  { actual: true, expected: '', result: true, itActual: 'true', itExpected: '""' },
  { actual: RegExp, expected: '', result: true, itActual: 'RegExp', itExpected: '""' },
  { actual: new RegExp('Hello', 'gim'), expected: '', result: true, itActual: 'new RegExp("Hello","gim")', itExpected: '""' },
  { actual: /hello/, expected: '', result: true, itActual: '/hello/', itExpected: '""' },
  { actual: isNaN, expected: '', result: true, itActual: 'isNaN', itExpected: '""' },
  { actual: isNaN('hello'), expected: '', result: true, itActual: 'isNaN("hello")', itExpected: '""' },
  { actual: isFinite, expected: '', result: true, itActual: 'isFinite', itExpected: '""' },
  { actual: isFinite(10), expected: '', result: true, itActual: 'isFinite(10)', itExpected: '""' },
  { actual: Number.NEGATIVE_INFINITY, expected: '', result: true, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '""' },
  { actual: Object, expected: '', result: true, itActual: 'Object', itExpected: '""' },
  { actual: {}, expected: '', result: true, itActual: '{}', itExpected: '""' },
  { actual: Error, expected: '', result: true, itActual: 'Error', itExpected: '""' },
  { actual: TypeError, expected: '', result: true, itActual: 'TypeError', itExpected: '""' },
  { actual: new Error('error'), expected: '', result: true, itActual: 'new Error("error")', itExpected: '""' },
  { actual: new TypeError('error'), expected: '', result: true, itActual: 'new TypeError("error")', itExpected: '""' },
  { actual: undefined, expected: '', result: true, itActual: 'undefined', itExpected: '""' },
  { actual: null, expected: '', result: true, itActual: 'null', itExpected: '""' },
  { actual: Infinity, expected: '', result: true, itActual: 'Infinity', itExpected: '""' },
  { actual: NaN, expected: '', result: true, itActual: 'NaN', itExpected: '""' },
  { actual: JSON, expected: '', result: true, itActual: 'JSON', itExpected: '""' },
  { actual: Promise, expected: '', result: true, itActual: 'Promise', itExpected: '""' },
  { actual: new Promise(() => { }), expected: '', result: true, itActual: 'new Promise(()=>{})', itExpected: '""' },
  { actual: {}.name, expected: '', result: true, itActual: '{}.name', itExpected: '""' },
  { actual: RangeError, expected: '', result: true, itActual: 'RangeError', itExpected: '""' },
  { actual: ReferenceError, expected: '', result: true, itActual: 'ReferenceError', itExpected: '""' },
  { actual: new RangeError('error'), expected: '', result: true, itActual: 'new RangeError("error")', itExpected: '""' },
  { actual: new ReferenceError('error'), expected: '', result: true, itActual: 'new ReferenceError("error")', itExpected: '""' },
  { actual: Name, expected: '', result: true, itActual: 'Name', itExpected: '""' },
  { actual: new Name(), expected: '', result: true, itActual: 'new Name()', itExpected: '""' },
  { actual: new instance(), expected: '', result: true, itActual: 'new instance()', itExpected: '""' },
  { actual: new truthy(), expected: '', result: true, itActual: 'new truthy()', itExpected: '""' },
  { actual: new falsy(), expected: '', result: true, itActual: 'new falsy()', itExpected: '""' },
  { actual: new any(), expected: '', result: true, itActual: 'new any()', itExpected: '""' },
  { actual: new objectable(), expected: '', result: true, itActual: 'new objectable()', itExpected: '""' },

  { actual: Date, expected: 'any', result: true, itActual: 'Date', itExpected: '"any"' },
  { actual: new Date(), expected: 'any', result: true, itActual: 'new Date()', itExpected: '"any"' },
  { actual: Function, expected: 'any', result: true, itActual: 'Function', itExpected: '"any"' },
  { actual: function () { }, expected: 'any', result: true, itActual: 'function(){}', itExpected: '"any"' },
  { actual: new Function('return "hello"'), expected: 'any', result: true, itActual: 'new Function(\'return "hello"\')', itExpected: '"any"' },
  { actual: (function () { return arguments; })(), expected: 'any', result: true, itActual: '(function(){return arguments;})()', itExpected: '"any"' },
  { actual: () => { }, expected: 'any', result: true, itActual: '()=>{}', itExpected: '"any"' },
  { actual: String, expected: 'any', result: true, itActual: 'String', itExpected: '"any"' },
  { actual: new String('Hello'), expected: 'any', result: true, itActual: 'new String("Hello")', itExpected: '"any"' },
  { actual: new String(''), expected: 'any', result: true, itActual: 'new String("")', itExpected: '"any"' },
  { actual: 'Hello', expected: 'any', result: true, itActual: '"Hello"', itExpected: '"any"' },
  { actual: `Hello`, expected: 'any', result: true, itActual: '`Hello`', itExpected: '"any"' },
  { actual: '', expected: 'any', result: true, itActual: '""', itExpected: '"any"' },
  { actual: Number, expected: 'any', result: true, itActual: 'Number', itExpected: '"any"' },
  { actual: new Number(10), expected: 'any', result: true, itActual: 'new Number(10)', itExpected: '"any"' },
  { actual: new Number(0), expected: 'any', result: true, itActual: 'new Number(0)', itExpected: '"any"' },
  { actual: 10, expected: 'any', result: true, itActual: '10', itExpected: '"any"' },
  { actual: 0, expected: 'any', result: true, itActual: '0', itExpected: '"any"' },
  { actual: Boolean, expected: 'any', result: true, itActual: 'Boolean', itExpected: '"any"' },
  { actual: new Boolean(0), expected: 'any', result: true, itActual: 'new Boolean(0)', itExpected: '"any"' },
  { actual: false, expected: 'any', result: true, itActual: 'false', itExpected: '"any"' },
  { actual: true, expected: 'any', result: true, itActual: 'true', itExpected: '"any"' },
  { actual: RegExp, expected: 'any', result: true, itActual: 'RegExp', itExpected: '"any"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'any', result: true, itActual: 'new RegExp("Hello","gim")', itExpected: '"any"' },
  { actual: /hello/, expected: 'any', result: true, itActual: '/hello/', itExpected: '"any"' },
  { actual: isNaN, expected: 'any', result: true, itActual: 'isNaN', itExpected: '"any"' },
  { actual: isNaN('hello'), expected: 'any', result: true, itActual: 'isNaN("hello")', itExpected: '"any"' },
  { actual: isFinite, expected: 'any', result: true, itActual: 'isFinite', itExpected: '"any"' },
  { actual: isFinite(10), expected: 'any', result: true, itActual: 'isFinite(10)', itExpected: '"any"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'any', result: true, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"any"' },
  { actual: Object, expected: 'any', result: true, itActual: 'Object', itExpected: '"any"' },
  { actual: {}, expected: 'any', result: true, itActual: '{}', itExpected: '"any"' },
  { actual: Error, expected: 'any', result: true, itActual: 'Error', itExpected: '"any"' },
  { actual: TypeError, expected: 'any', result: true, itActual: 'TypeError', itExpected: '"any"' },
  { actual: new Error('error'), expected: 'any', result: true, itActual: 'new Error("error")', itExpected: '"any"' },
  { actual: new TypeError('error'), expected: 'any', result: true, itActual: 'new TypeError("error")', itExpected: '"any"' },
  { actual: undefined, expected: 'any', result: true, itActual: 'undefined', itExpected: '"any"' },
  { actual: null, expected: 'any', result: true, itActual: 'null', itExpected: '"any"' },
  { actual: Infinity, expected: 'any', result: true, itActual: 'Infinity', itExpected: '"any"' },
  { actual: NaN, expected: 'any', result: true, itActual: 'NaN', itExpected: '"any"' },
  { actual: JSON, expected: 'any', result: true, itActual: 'JSON', itExpected: '"any"' },
  { actual: Promise, expected: 'any', result: true, itActual: 'Promise', itExpected: '"any"' },
  { actual: new Promise(() => { }), expected: 'any', result: true, itActual: 'new Promise(()=>{})', itExpected: '"any"' },
  { actual: {}.name, expected: 'any', result: true, itActual: '{}.name', itExpected: '"any"' },
  { actual: RangeError, expected: 'any', result: true, itActual: 'RangeError', itExpected: '"any"' },
  { actual: ReferenceError, expected: 'any', result: true, itActual: 'ReferenceError', itExpected: '"any"' },
  { actual: new RangeError('error'), expected: 'any', result: true, itActual: 'new RangeError("error")', itExpected: '"any"' },
  { actual: new ReferenceError('error'), expected: 'any', result: true, itActual: 'new ReferenceError("error")', itExpected: '"any"' },
  { actual: Name, expected: 'any', result: true, itActual: 'Name', itExpected: '"any"' },
  { actual: new Name(), expected: 'any', result: true, itActual: 'new Name()', itExpected: '"any"' },
  { actual: new instance(), expected: 'any', result: true, itActual: 'new instance()', itExpected: '"any"' },
  { actual: new truthy(), expected: 'any', result: true, itActual: 'new truthy()', itExpected: '"any"' },
  { actual: new falsy(), expected: 'any', result: true, itActual: 'new falsy()', itExpected: '"any"' },
  { actual: new any(), expected: 'any', result: true, itActual: 'new any()', itExpected: '"any"' },
  { actual: new objectable(), expected: 'any', result: true, itActual: 'new objectable()', itExpected: '"any"' },

  { actual: Date, expected: 'an', result: false, itActual: 'Date', itExpected: '"an"' },
  { actual: new Date(), expected: 'an', result: false, itActual: 'new Date()', itExpected: '"an"' },
  { actual: Function, expected: 'an', result: false, itActual: 'Function', itExpected: '"an"' },
  { actual: function () { }, expected: 'an', result: false, itActual: 'function(){}', itExpected: '"an"' },
  { actual: new Function('return "hello"'), expected: 'an', result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '"an"' },
  { actual: (function () { return arguments; })(), expected: 'an', result: false, itActual: '(function(){return arguments;})()', itExpected: '"an"' },
  { actual: () => { }, expected: 'an', result: false, itActual: '()=>{}', itExpected: '"an"' },
  { actual: String, expected: 'an', result: false, itActual: 'String', itExpected: '"an"' },
  { actual: new String('Hello'), expected: 'an', result: false, itActual: 'new String("Hello")', itExpected: '"an"' },
  { actual: new String(''), expected: 'an', result: false, itActual: 'new String("")', itExpected: '"an"' },
  { actual: 'Hello', expected: 'an', result: false, itActual: '"Hello"', itExpected: '"an"' },
  { actual: `Hello`, expected: 'an', result: false, itActual: '`Hello`', itExpected: '"an"' },
  { actual: '', expected: 'an', result: false, itActual: '""', itExpected: '"an"' },
  { actual: Number, expected: 'an', result: false, itActual: 'Number', itExpected: '"an"' },
  { actual: new Number(10), expected: 'an', result: false, itActual: 'new Number(10)', itExpected: '"an"' },
  { actual: new Number(0), expected: 'an', result: false, itActual: 'new Number(0)', itExpected: '"an"' },
  { actual: 10, expected: 'an', result: false, itActual: '10', itExpected: '"an"' },
  { actual: 0, expected: 'an', result: false, itActual: '0', itExpected: '"an"' },
  { actual: Boolean, expected: 'an', result: false, itActual: 'Boolean', itExpected: '"an"' },
  { actual: new Boolean(0), expected: 'an', result: false, itActual: 'new Boolean(0)', itExpected: '"an"' },
  { actual: false, expected: 'an', result: false, itActual: 'false', itExpected: '"an"' },
  { actual: true, expected: 'an', result: false, itActual: 'true', itExpected: '"an"' },
  { actual: RegExp, expected: 'an', result: false, itActual: 'RegExp', itExpected: '"an"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'an', result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '"an"' },
  { actual: /hello/, expected: 'an', result: false, itActual: '/hello/', itExpected: '"an"' },
  { actual: isNaN, expected: 'an', result: false, itActual: 'isNaN', itExpected: '"an"' },
  { actual: isNaN('hello'), expected: 'an', result: false, itActual: 'isNaN("hello")', itExpected: '"an"' },
  { actual: isFinite, expected: 'an', result: false, itActual: 'isFinite', itExpected: '"an"' },
  { actual: isFinite(10), expected: 'an', result: false, itActual: 'isFinite(10)', itExpected: '"an"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'an', result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"an"' },
  { actual: Object, expected: 'an', result: false, itActual: 'Object', itExpected: '"an"' },
  { actual: {}, expected: 'an', result: false, itActual: '{}', itExpected: '"an"' },
  { actual: Error, expected: 'an', result: false, itActual: 'Error', itExpected: '"an"' },
  { actual: TypeError, expected: 'an', result: false, itActual: 'TypeError', itExpected: '"an"' },
  { actual: new Error('error'), expected: 'an', result: false, itActual: 'new Error("error")', itExpected: '"an"' },
  { actual: new TypeError('error'), expected: 'an', result: false, itActual: 'new TypeError("error")', itExpected: '"an"' },
  { actual: undefined, expected: 'an', result: false, itActual: 'undefined', itExpected: '"an"' },
  { actual: null, expected: 'an', result: false, itActual: 'null', itExpected: '"an"' },
  { actual: Infinity, expected: 'an', result: false, itActual: 'Infinity', itExpected: '"an"' },
  { actual: NaN, expected: 'an', result: false, itActual: 'NaN', itExpected: '"an"' },
  { actual: JSON, expected: 'an', result: false, itActual: 'JSON', itExpected: '"an"' },
  { actual: Promise, expected: 'an', result: false, itActual: 'Promise', itExpected: '"an"' },
  { actual: new Promise(() => { }), expected: 'an', result: false, itActual: 'new Promise(()=>{})', itExpected: '"an"' },
  { actual: {}.name, expected: 'an', result: false, itActual: '{}.name', itExpected: '"an"' },
  { actual: RangeError, expected: 'an', result: false, itActual: 'RangeError', itExpected: '"an"' },
  { actual: ReferenceError, expected: 'an', result: false, itActual: 'ReferenceError', itExpected: '"an"' },
  { actual: new RangeError('error'), expected: 'an', result: false, itActual: 'new RangeError("error")', itExpected: '"an"' },
  { actual: new ReferenceError('error'), expected: 'an', result: false, itActual: 'new ReferenceError("error")', itExpected: '"an"' },
  { actual: Name, expected: 'an', result: false, itActual: 'Name', itExpected: '"an"' },
  { actual: new Name(), expected: 'an', result: false, itActual: 'new Name()', itExpected: '"an"' },
  { actual: new instance(), expected: 'an', result: false, itActual: 'new instance()', itExpected: '"an"' },
  { actual: new truthy(), expected: 'an', result: false, itActual: 'new truthy()', itExpected: '"an"' },
  { actual: new falsy(), expected: 'an', result: false, itActual: 'new falsy()', itExpected: '"an"' },
  { actual: new any(), expected: 'an', result: false, itActual: 'new any()', itExpected: '"an"' },
  { actual: new objectable(), expected: 'an', result: false, itActual: 'new objectable()', itExpected: '"an"' },

  { actual: Date, expected: 'ANY', result: true, itActual: 'Date', itExpected: '"ANY"' },
  { actual: new Date(), expected: 'ANY', result: true, itActual: 'new Date()', itExpected: '"ANY"' },
  { actual: Function, expected: 'ANY', result: true, itActual: 'Function', itExpected: '"ANY"' },
  { actual: function () { }, expected: 'ANY', result: true, itActual: 'function(){}', itExpected: '"ANY"' },
  { actual: new Function('return "hello"'), expected: 'ANY', result: true, itActual: 'new Function(\'return "hello"\')', itExpected: '"ANY"' },
  { actual: (function () { return arguments; })(), expected: 'ANY', result: true, itActual: '(function(){return arguments;})()', itExpected: '"ANY"' },
  { actual: () => { }, expected: 'ANY', result: true, itActual: '()=>{}', itExpected: '"ANY"' },
  { actual: String, expected: 'ANY', result: true, itActual: 'String', itExpected: '"ANY"' },
  { actual: new String('Hello'), expected: 'ANY', result: true, itActual: 'new String("Hello")', itExpected: '"ANY"' },
  { actual: new String(''), expected: 'ANY', result: true, itActual: 'new String("")', itExpected: '"ANY"' },
  { actual: 'Hello', expected: 'ANY', result: true, itActual: '"Hello"', itExpected: '"ANY"' },
  { actual: `Hello`, expected: 'ANY', result: true, itActual: '`Hello`', itExpected: '"ANY"' },
  { actual: '', expected: 'ANY', result: true, itActual: '""', itExpected: '"ANY"' },
  { actual: Number, expected: 'ANY', result: true, itActual: 'Number', itExpected: '"ANY"' },
  { actual: new Number(10), expected: 'ANY', result: true, itActual: 'new Number(10)', itExpected: '"ANY"' },
  { actual: new Number(0), expected: 'ANY', result: true, itActual: 'new Number(0)', itExpected: '"ANY"' },
  { actual: 10, expected: 'ANY', result: true, itActual: '10', itExpected: '"ANY"' },
  { actual: 0, expected: 'ANY', result: true, itActual: '0', itExpected: '"ANY"' },
  { actual: Boolean, expected: 'ANY', result: true, itActual: 'Boolean', itExpected: '"ANY"' },
  { actual: new Boolean(0), expected: 'ANY', result: true, itActual: 'new Boolean(0)', itExpected: '"ANY"' },
  { actual: false, expected: 'ANY', result: true, itActual: 'false', itExpected: '"ANY"' },
  { actual: true, expected: 'ANY', result: true, itActual: 'true', itExpected: '"ANY"' },
  { actual: RegExp, expected: 'ANY', result: true, itActual: 'RegExp', itExpected: '"ANY"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'ANY', result: true, itActual: 'new RegExp("Hello","gim")', itExpected: '"ANY"' },
  { actual: /hello/, expected: 'ANY', result: true, itActual: '/hello/', itExpected: '"ANY"' },
  { actual: isNaN, expected: 'ANY', result: true, itActual: 'isNaN', itExpected: '"ANY"' },
  { actual: isNaN('hello'), expected: 'ANY', result: true, itActual: 'isNaN("hello")', itExpected: '"ANY"' },
  { actual: isFinite, expected: 'ANY', result: true, itActual: 'isFinite', itExpected: '"ANY"' },
  { actual: isFinite(10), expected: 'ANY', result: true, itActual: 'isFinite(10)', itExpected: '"ANY"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'ANY', result: true, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"ANY"' },
  { actual: Object, expected: 'ANY', result: true, itActual: 'Object', itExpected: '"ANY"' },
  { actual: {}, expected: 'ANY', result: true, itActual: '{}', itExpected: '"ANY"' },
  { actual: Error, expected: 'ANY', result: true, itActual: 'Error', itExpected: '"ANY"' },
  { actual: TypeError, expected: 'ANY', result: true, itActual: 'TypeError', itExpected: '"ANY"' },
  { actual: new Error('error'), expected: 'ANY', result: true, itActual: 'new Error("error")', itExpected: '"ANY"' },
  { actual: new TypeError('error'), expected: 'ANY', result: true, itActual: 'new TypeError("error")', itExpected: '"ANY"' },
  { actual: undefined, expected: 'ANY', result: true, itActual: 'undefined', itExpected: '"ANY"' },
  { actual: null, expected: 'ANY', result: true, itActual: 'null', itExpected: '"ANY"' },
  { actual: Infinity, expected: 'ANY', result: true, itActual: 'Infinity', itExpected: '"ANY"' },
  { actual: NaN, expected: 'ANY', result: true, itActual: 'NaN', itExpected: '"ANY"' },
  { actual: JSON, expected: 'ANY', result: true, itActual: 'JSON', itExpected: '"ANY"' },
  { actual: Promise, expected: 'ANY', result: true, itActual: 'Promise', itExpected: '"ANY"' },
  { actual: new Promise(() => { }), expected: 'ANY', result: true, itActual: 'new Promise(()=>{})', itExpected: '"ANY"' },
  { actual: {}.name, expected: 'ANY', result: true, itActual: '{}.name', itExpected: '"ANY"' },
  { actual: RangeError, expected: 'ANY', result: true, itActual: 'RangeError', itExpected: '"ANY"' },
  { actual: ReferenceError, expected: 'ANY', result: true, itActual: 'ReferenceError', itExpected: '"ANY"' },
  { actual: new RangeError('error'), expected: 'ANY', result: true, itActual: 'new RangeError("error")', itExpected: '"ANY"' },
  { actual: new ReferenceError('error'), expected: 'ANY', result: true, itActual: 'new ReferenceError("error")', itExpected: '"ANY"' },
  { actual: Name, expected: 'ANY', result: true, itActual: 'Name', itExpected: '"ANY"' },
  { actual: new Name(), expected: 'ANY', result: true, itActual: 'new Name()', itExpected: '"ANY"' },
  { actual: new instance(), expected: 'ANY', result: true, itActual: 'new instance()', itExpected: '"ANY"' },
  { actual: new truthy(), expected: 'ANY', result: true, itActual: 'new truthy()', itExpected: '"ANY"' },
  { actual: new falsy(), expected: 'ANY', result: true, itActual: 'new falsy()', itExpected: '"ANY"' },
  { actual: new any(), expected: 'ANY', result: true, itActual: 'new any()', itExpected: '"ANY"' },
  { actual: new objectable(), expected: 'ANY', result: true, itActual: 'new objectable()', itExpected: '"ANY"' },

  { actual: Date, expected: 'AN', result: false, itActual: 'Date', itExpected: '"AN"' },
  { actual: new Date(), expected: 'AN', result: false, itActual: 'new Date()', itExpected: '"AN"' },
  { actual: Function, expected: 'AN', result: false, itActual: 'Function', itExpected: '"AN"' },
  { actual: function () { }, expected: 'AN', result: false, itActual: 'function(){}', itExpected: '"AN"' },
  { actual: new Function('return "hello"'), expected: 'AN', result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '"AN"' },
  { actual: (function () { return arguments; })(), expected: 'AN', result: false, itActual: '(function(){return arguments;})()', itExpected: '"AN"' },
  { actual: () => { }, expected: 'AN', result: false, itActual: '()=>{}', itExpected: '"AN"' },
  { actual: String, expected: 'AN', result: false, itActual: 'String', itExpected: '"AN"' },
  { actual: new String('Hello'), expected: 'AN', result: false, itActual: 'new String("Hello")', itExpected: '"AN"' },
  { actual: new String(''), expected: 'AN', result: false, itActual: 'new String("")', itExpected: '"AN"' },
  { actual: 'Hello', expected: 'AN', result: false, itActual: '"Hello"', itExpected: '"AN"' },
  { actual: `Hello`, expected: 'AN', result: false, itActual: '`Hello`', itExpected: '"AN"' },
  { actual: '', expected: 'AN', result: false, itActual: '""', itExpected: '"AN"' },
  { actual: Number, expected: 'AN', result: false, itActual: 'Number', itExpected: '"AN"' },
  { actual: new Number(10), expected: 'AN', result: false, itActual: 'new Number(10)', itExpected: '"AN"' },
  { actual: new Number(0), expected: 'AN', result: false, itActual: 'new Number(0)', itExpected: '"AN"' },
  { actual: 10, expected: 'AN', result: false, itActual: '10', itExpected: '"AN"' },
  { actual: 0, expected: 'AN', result: false, itActual: '0', itExpected: '"AN"' },
  { actual: Boolean, expected: 'AN', result: false, itActual: 'Boolean', itExpected: '"AN"' },
  { actual: new Boolean(0), expected: 'AN', result: false, itActual: 'new Boolean(0)', itExpected: '"AN"' },
  { actual: false, expected: 'AN', result: false, itActual: 'false', itExpected: '"AN"' },
  { actual: true, expected: 'AN', result: false, itActual: 'true', itExpected: '"AN"' },
  { actual: RegExp, expected: 'AN', result: false, itActual: 'RegExp', itExpected: '"AN"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'AN', result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '"AN"' },
  { actual: /hello/, expected: 'AN', result: false, itActual: '/hello/', itExpected: '"AN"' },
  { actual: isNaN, expected: 'AN', result: false, itActual: 'isNaN', itExpected: '"AN"' },
  { actual: isNaN('hello'), expected: 'AN', result: false, itActual: 'isNaN("hello")', itExpected: '"AN"' },
  { actual: isFinite, expected: 'AN', result: false, itActual: 'isFinite', itExpected: '"AN"' },
  { actual: isFinite(10), expected: 'AN', result: false, itActual: 'isFinite(10)', itExpected: '"AN"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'AN', result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"AN"' },
  { actual: Object, expected: 'AN', result: false, itActual: 'Object', itExpected: '"AN"' },
  { actual: {}, expected: 'AN', result: false, itActual: '{}', itExpected: '"AN"' },
  { actual: Error, expected: 'AN', result: false, itActual: 'Error', itExpected: '"AN"' },
  { actual: TypeError, expected: 'AN', result: false, itActual: 'TypeError', itExpected: '"AN"' },
  { actual: new Error('error'), expected: 'AN', result: false, itActual: 'new Error("error")', itExpected: '"AN"' },
  { actual: new TypeError('error'), expected: 'AN', result: false, itActual: 'new TypeError("error")', itExpected: '"AN"' },
  { actual: undefined, expected: 'AN', result: false, itActual: 'undefined', itExpected: '"AN"' },
  { actual: null, expected: 'AN', result: false, itActual: 'null', itExpected: '"AN"' },
  { actual: Infinity, expected: 'AN', result: false, itActual: 'Infinity', itExpected: '"AN"' },
  { actual: NaN, expected: 'AN', result: false, itActual: 'NaN', itExpected: '"AN"' },
  { actual: JSON, expected: 'AN', result: false, itActual: 'JSON', itExpected: '"AN"' },
  { actual: Promise, expected: 'AN', result: false, itActual: 'Promise', itExpected: '"AN"' },
  { actual: new Promise(() => { }), expected: 'AN', result: false, itActual: 'new Promise(()=>{})', itExpected: '"AN"' },
  { actual: {}.name, expected: 'AN', result: false, itActual: '{}.name', itExpected: '"AN"' },
  { actual: RangeError, expected: 'AN', result: false, itActual: 'RangeError', itExpected: '"AN"' },
  { actual: ReferenceError, expected: 'AN', result: false, itActual: 'ReferenceError', itExpected: '"AN"' },
  { actual: new RangeError('error'), expected: 'AN', result: false, itActual: 'new RangeError("error")', itExpected: '"AN"' },
  { actual: new ReferenceError('error'), expected: 'AN', result: false, itActual: 'new ReferenceError("error")', itExpected: '"AN"' },
  { actual: Name, expected: 'AN', result: false, itActual: 'Name', itExpected: '"AN"' },
  { actual: new Name(), expected: 'AN', result: false, itActual: 'new Name()', itExpected: '"AN"' },
  { actual: new instance(), expected: 'AN', result: false, itActual: 'new instance()', itExpected: '"AN"' },
  { actual: new truthy(), expected: 'AN', result: false, itActual: 'new truthy()', itExpected: '"AN"' },
  { actual: new falsy(), expected: 'AN', result: false, itActual: 'new falsy()', itExpected: '"AN"' },
  { actual: new any(), expected: 'AN', result: false, itActual: 'new any()', itExpected: '"AN"' },
  { actual: new objectable(), expected: 'AN', result: false, itActual: 'new objectable()', itExpected: '"AN"' },

  { actual: Date, expected: 'truthy', result: true, itActual: 'Date', itExpected: '"truthy"' },
  { actual: new Date(), expected: 'truthy', result: true, itActual: 'new Date()', itExpected: '"truthy"' },
  { actual: Function, expected: 'truthy', result: true, itActual: 'Function', itExpected: '"truthy"' },
  { actual: function () { }, expected: 'truthy', result: true, itActual: 'function(){}', itExpected: '"truthy"' },
  { actual: new Function('return "hello"'), expected: 'truthy', result: true, itActual: 'new Function(\'return "hello"\')', itExpected: '"truthy"' },
  { actual: (function () { return arguments; })(), expected: 'truthy', result: true, itActual: '(function(){return arguments;})()', itExpected: '"truthy"' },
  { actual: () => { }, expected: 'truthy', result: true, itActual: '()=>{}', itExpected: '"truthy"' },
  { actual: String, expected: 'truthy', result: true, itActual: 'String', itExpected: '"truthy"' },
  { actual: new String('Hello'), expected: 'truthy', result: true, itActual: 'new String("Hello")', itExpected: '"truthy"' },
  { actual: new String(''), expected: 'truthy', result: true, itActual: 'new String("")', itExpected: '"truthy"' },
  { actual: 'Hello', expected: 'truthy', result: true, itActual: '"Hello"', itExpected: '"truthy"' },
  { actual: `Hello`, expected: 'truthy', result: true, itActual: '`Hello`', itExpected: '"truthy"' },
  { actual: '', expected: 'truthy', result: false, itActual: '""', itExpected: '"truthy"' },
  { actual: Number, expected: 'truthy', result: true, itActual: 'Number', itExpected: '"truthy"' },
  { actual: new Number(10), expected: 'truthy', result: true, itActual: 'new Number(10)', itExpected: '"truthy"' },
  { actual: new Number(0), expected: 'truthy', result: true, itActual: 'new Number(0)', itExpected: '"truthy"' },
  { actual: 10, expected: 'truthy', result: true, itActual: '10', itExpected: '"truthy"' },
  { actual: 0, expected: 'truthy', result: false, itActual: '0', itExpected: '"truthy"' },
  { actual: Boolean, expected: 'truthy', result: true, itActual: 'Boolean', itExpected: '"truthy"' },
  { actual: new Boolean(0), expected: 'truthy', result: true, itActual: 'new Boolean(0)', itExpected: '"truthy"' },
  { actual: false, expected: 'truthy', result: false, itActual: 'false', itExpected: '"truthy"' },
  { actual: true, expected: 'truthy', result: true, itActual: 'true', itExpected: '"truthy"' },
  { actual: RegExp, expected: 'truthy', result: true, itActual: 'RegExp', itExpected: '"truthy"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'truthy', result: true, itActual: 'new RegExp("Hello","gim")', itExpected: '"truthy"' },
  { actual: /hello/, expected: 'truthy', result: true, itActual: '/hello/', itExpected: '"truthy"' },
  { actual: isNaN, expected: 'truthy', result: true, itActual: 'isNaN', itExpected: '"truthy"' },
  { actual: isNaN('hello'), expected: 'truthy', result: true, itActual: 'isNaN("hello")', itExpected: '"truthy"' },
  { actual: isFinite, expected: 'truthy', result: true, itActual: 'isFinite', itExpected: '"truthy"' },
  { actual: isFinite(10), expected: 'truthy', result: true, itActual: 'isFinite(10)', itExpected: '"truthy"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'truthy', result: true, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"truthy"' },
  { actual: Object, expected: 'truthy', result: true, itActual: 'Object', itExpected: '"truthy"' },
  { actual: {}, expected: 'truthy', result: true, itActual: '{}', itExpected: '"truthy"' },
  { actual: Error, expected: 'truthy', result: true, itActual: 'Error', itExpected: '"truthy"' },
  { actual: TypeError, expected: 'truthy', result: true, itActual: 'TypeError', itExpected: '"truthy"' },
  { actual: new Error('error'), expected: 'truthy', result: true, itActual: 'new Error("error")', itExpected: '"truthy"' },
  { actual: new TypeError('error'), expected: 'truthy', result: true, itActual: 'new TypeError("error")', itExpected: '"truthy"' },
  { actual: undefined, expected: 'truthy', result: false, itActual: 'undefined', itExpected: '"truthy"' },
  { actual: null, expected: 'truthy', result: false, itActual: 'null', itExpected: '"truthy"' },
  { actual: Infinity, expected: 'truthy', result: true, itActual: 'Infinity', itExpected: '"truthy"' },
  { actual: NaN, expected: 'truthy', result: false, itActual: 'NaN', itExpected: '"truthy"' },
  { actual: JSON, expected: 'truthy', result: true, itActual: 'JSON', itExpected: '"truthy"' },
  { actual: Promise, expected: 'truthy', result: true, itActual: 'Promise', itExpected: '"truthy"' },
  { actual: new Promise(() => { }), expected: 'truthy', result: true, itActual: 'new Promise(()=>{})', itExpected: '"truthy"' },
  { actual: {}.name, expected: 'truthy', result: false, itActual: '{}.name', itExpected: '"truthy"' },
  { actual: RangeError, expected: 'truthy', result: true, itActual: 'RangeError', itExpected: '"truthy"' },
  { actual: ReferenceError, expected: 'truthy', result: true, itActual: 'ReferenceError', itExpected: '"truthy"' },
  { actual: new RangeError('error'), expected: 'truthy', result: true, itActual: 'new RangeError("error")', itExpected: '"truthy"' },
  { actual: new ReferenceError('error'), expected: 'truthy', result: true, itActual: 'new ReferenceError("error")', itExpected: '"truthy"' },
  { actual: Name, expected: 'truthy', result: true, itActual: 'Name', itExpected: '"truthy"' },
  { actual: new Name(), expected: 'truthy', result: true, itActual: 'new Name()', itExpected: '"truthy"' },
  { actual: new instance(), expected: 'truthy', result: true, itActual: 'new instance()', itExpected: '"truthy"' },
  { actual: new truthy(), expected: 'truthy', result: true, itActual: 'new truthy()', itExpected: '"truthy"' },
  { actual: new falsy(), expected: 'truthy', result: true, itActual: 'new falsy()', itExpected: '"truthy"' },
  { actual: new any(), expected: 'truthy', result: true, itActual: 'new any()', itExpected: '"truthy"' },
  { actual: new objectable(), expected: 'truthy', result: true, itActual: 'new objectable()', itExpected: '"truthy"' },

  { actual: Date, expected: 'tru', result: false, itActual: 'Date', itExpected: '"tru"' },
  { actual: new Date(), expected: 'tru', result: false, itActual: 'new Date()', itExpected: '"tru"' },
  { actual: Function, expected: 'tru', result: false, itActual: 'Function', itExpected: '"tru"' },
  { actual: function () { }, expected: 'tru', result: false, itActual: 'function(){}', itExpected: '"tru"' },
  { actual: new Function('return "hello"'), expected: 'tru', result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '"tru"' },
  { actual: (function () { return arguments; })(), expected: 'tru', result: false, itActual: '(function(){return arguments;})()', itExpected: '"tru"' },
  { actual: () => { }, expected: 'tru', result: false, itActual: '()=>{}', itExpected: '"tru"' },
  { actual: String, expected: 'tru', result: false, itActual: 'String', itExpected: '"tru"' },
  { actual: new String('Hello'), expected: 'tru', result: false, itActual: 'new String("Hello")', itExpected: '"tru"' },
  { actual: new String(''), expected: 'tru', result: false, itActual: 'new String("")', itExpected: '"tru"' },
  { actual: 'Hello', expected: 'tru', result: false, itActual: '"Hello"', itExpected: '"tru"' },
  { actual: `Hello`, expected: 'tru', result: false, itActual: '`Hello`', itExpected: '"tru"' },
  { actual: '', expected: 'tru', result: false, itActual: '""', itExpected: '"tru"' },
  { actual: Number, expected: 'tru', result: false, itActual: 'Number', itExpected: '"tru"' },
  { actual: new Number(10), expected: 'tru', result: false, itActual: 'new Number(10)', itExpected: '"tru"' },
  { actual: new Number(0), expected: 'tru', result: false, itActual: 'new Number(0)', itExpected: '"tru"' },
  { actual: 10, expected: 'tru', result: false, itActual: '10', itExpected: '"tru"' },
  { actual: 0, expected: 'tru', result: false, itActual: '0', itExpected: '"tru"' },
  { actual: Boolean, expected: 'tru', result: false, itActual: 'Boolean', itExpected: '"tru"' },
  { actual: new Boolean(0), expected: 'tru', result: false, itActual: 'new Boolean(0)', itExpected: '"tru"' },
  { actual: false, expected: 'tru', result: false, itActual: 'false', itExpected: '"tru"' },
  { actual: true, expected: 'tru', result: false, itActual: 'true', itExpected: '"tru"' },
  { actual: RegExp, expected: 'tru', result: false, itActual: 'RegExp', itExpected: '"tru"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'tru', result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '"tru"' },
  { actual: /hello/, expected: 'tru', result: false, itActual: '/hello/', itExpected: '"tru"' },
  { actual: isNaN, expected: 'tru', result: false, itActual: 'isNaN', itExpected: '"tru"' },
  { actual: isNaN('hello'), expected: 'tru', result: false, itActual: 'isNaN("hello")', itExpected: '"tru"' },
  { actual: isFinite, expected: 'tru', result: false, itActual: 'isFinite', itExpected: '"tru"' },
  { actual: isFinite(10), expected: 'tru', result: false, itActual: 'isFinite(10)', itExpected: '"tru"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'tru', result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"tru"' },
  { actual: Object, expected: 'tru', result: false, itActual: 'Object', itExpected: '"tru"' },
  { actual: {}, expected: 'tru', result: false, itActual: '{}', itExpected: '"tru"' },
  { actual: Error, expected: 'tru', result: false, itActual: 'Error', itExpected: '"tru"' },
  { actual: TypeError, expected: 'tru', result: false, itActual: 'TypeError', itExpected: '"tru"' },
  { actual: new Error('error'), expected: 'tru', result: false, itActual: 'new Error("error")', itExpected: '"tru"' },
  { actual: new TypeError('error'), expected: 'tru', result: false, itActual: 'new TypeError("error")', itExpected: '"tru"' },
  { actual: undefined, expected: 'tru', result: false, itActual: 'undefined', itExpected: '"tru"' },
  { actual: null, expected: 'tru', result: false, itActual: 'null', itExpected: '"tru"' },
  { actual: Infinity, expected: 'tru', result: false, itActual: 'Infinity', itExpected: '"tru"' },
  { actual: NaN, expected: 'tru', result: false, itActual: 'NaN', itExpected: '"tru"' },
  { actual: JSON, expected: 'tru', result: false, itActual: 'JSON', itExpected: '"tru"' },
  { actual: Promise, expected: 'tru', result: false, itActual: 'Promise', itExpected: '"tru"' },
  { actual: new Promise(() => { }), expected: 'tru', result: false, itActual: 'new Promise(()=>{})', itExpected: '"tru"' },
  { actual: {}.name, expected: 'tru', result: false, itActual: '{}.name', itExpected: '"tru"' },
  { actual: RangeError, expected: 'tru', result: false, itActual: 'RangeError', itExpected: '"tru"' },
  { actual: ReferenceError, expected: 'tru', result: false, itActual: 'ReferenceError', itExpected: '"tru"' },
  { actual: new RangeError('error'), expected: 'tru', result: false, itActual: 'new RangeError("error")', itExpected: '"tru"' },
  { actual: new ReferenceError('error'), expected: 'tru', result: false, itActual: 'new ReferenceError("error")', itExpected: '"tru"' },
  { actual: Name, expected: 'tru', result: false, itActual: 'Name', itExpected: '"tru"' },
  { actual: new Name(), expected: 'tru', result: false, itActual: 'new Name()', itExpected: '"tru"' },
  { actual: new instance(), expected: 'tru', result: false, itActual: 'new instance()', itExpected: '"tru"' },
  { actual: new truthy(), expected: 'tru', result: false, itActual: 'new truthy()', itExpected: '"tru"' },
  { actual: new falsy(), expected: 'tru', result: false, itActual: 'new falsy()', itExpected: '"tru"' },
  { actual: new any(), expected: 'tru', result: false, itActual: 'new any()', itExpected: '"tru"' },
  { actual: new objectable(), expected: 'tru', result: false, itActual: 'new objectable()', itExpected: '"tru"' },

  { actual: Date, expected: 'TrUtHy', result: true, itActual: 'Date', itExpected: '"TrUtHy"' },
  { actual: new Date(), expected: 'TrUtHy', result: true, itActual: 'new Date()', itExpected: '"TrUtHy"' },
  { actual: Function, expected: 'TrUtHy', result: true, itActual: 'Function', itExpected: '"TrUtHy"' },
  { actual: function () { }, expected: 'TrUtHy', result: true, itActual: 'function(){}', itExpected: '"TrUtHy"' },
  { actual: new Function('return "hello"'), expected: 'TrUtHy', result: true, itActual: 'new Function(\'return "hello"\')', itExpected: '"TrUtHy"' },
  { actual: (function () { return arguments; })(), expected: 'TrUtHy', result: true, itActual: '(function(){return arguments;})()', itExpected: '"TrUtHy"' },
  { actual: () => { }, expected: 'TrUtHy', result: true, itActual: '()=>{}', itExpected: '"TrUtHy"' },
  { actual: String, expected: 'TrUtHy', result: true, itActual: 'String', itExpected: '"TrUtHy"' },
  { actual: new String('Hello'), expected: 'TrUtHy', result: true, itActual: 'new String("Hello")', itExpected: '"TrUtHy"' },
  { actual: new String(''), expected: 'TrUtHy', result: true, itActual: 'new String("")', itExpected: '"TrUtHy"' },
  { actual: 'Hello', expected: 'TrUtHy', result: true, itActual: '"Hello"', itExpected: '"TrUtHy"' },
  { actual: `Hello`, expected: 'TrUtHy', result: true, itActual: '`Hello`', itExpected: '"TrUtHy"' },
  { actual: '', expected: 'TrUtHy', result: false, itActual: '""', itExpected: '"TrUtHy"' },
  { actual: Number, expected: 'TrUtHy', result: true, itActual: 'Number', itExpected: '"TrUtHy"' },
  { actual: new Number(10), expected: 'TrUtHy', result: true, itActual: 'new Number(10)', itExpected: '"TrUtHy"' },
  { actual: new Number(0), expected: 'TrUtHy', result: true, itActual: 'new Number(0)', itExpected: '"TrUtHy"' },
  { actual: 10, expected: 'TrUtHy', result: true, itActual: '10', itExpected: '"TrUtHy"' },
  { actual: 0, expected: 'TrUtHy', result: false, itActual: '0', itExpected: '"TrUtHy"' },
  { actual: Boolean, expected: 'TrUtHy', result: true, itActual: 'Boolean', itExpected: '"TrUtHy"' },
  { actual: new Boolean(0), expected: 'TrUtHy', result: true, itActual: 'new Boolean(0)', itExpected: '"TrUtHy"' },
  { actual: false, expected: 'TrUtHy', result: false, itActual: 'false', itExpected: '"TrUtHy"' },
  { actual: true, expected: 'TrUtHy', result: true, itActual: 'true', itExpected: '"TrUtHy"' },
  { actual: RegExp, expected: 'TrUtHy', result: true, itActual: 'RegExp', itExpected: '"TrUtHy"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'TrUtHy', result: true, itActual: 'new RegExp("Hello","gim")', itExpected: '"TrUtHy"' },
  { actual: /hello/, expected: 'TrUtHy', result: true, itActual: '/hello/', itExpected: '"TrUtHy"' },
  { actual: isNaN, expected: 'TrUtHy', result: true, itActual: 'isNaN', itExpected: '"TrUtHy"' },
  { actual: isNaN('hello'), expected: 'TrUtHy', result: true, itActual: 'isNaN("hello")', itExpected: '"TrUtHy"' },
  { actual: isFinite, expected: 'TrUtHy', result: true, itActual: 'isFinite', itExpected: '"TrUtHy"' },
  { actual: isFinite(10), expected: 'TrUtHy', result: true, itActual: 'isFinite(10)', itExpected: '"TrUtHy"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'TrUtHy', result: true, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"TrUtHy"' },
  { actual: Object, expected: 'TrUtHy', result: true, itActual: 'Object', itExpected: '"TrUtHy"' },
  { actual: {}, expected: 'TrUtHy', result: true, itActual: '{}', itExpected: '"TrUtHy"' },
  { actual: Error, expected: 'TrUtHy', result: true, itActual: 'Error', itExpected: '"TrUtHy"' },
  { actual: TypeError, expected: 'TrUtHy', result: true, itActual: 'TypeError', itExpected: '"TrUtHy"' },
  { actual: new Error('error'), expected: 'TrUtHy', result: true, itActual: 'new Error("error")', itExpected: '"TrUtHy"' },
  { actual: new TypeError('error'), expected: 'TrUtHy', result: true, itActual: 'new TypeError("error")', itExpected: '"TrUtHy"' },
  { actual: undefined, expected: 'TrUtHy', result: false, itActual: 'undefined', itExpected: '"TrUtHy"' },
  { actual: null, expected: 'TrUtHy', result: false, itActual: 'null', itExpected: '"TrUtHy"' },
  { actual: Infinity, expected: 'TrUtHy', result: true, itActual: 'Infinity', itExpected: '"TrUtHy"' },
  { actual: NaN, expected: 'TrUtHy', result: false, itActual: 'NaN', itExpected: '"TrUtHy"' },
  { actual: JSON, expected: 'TrUtHy', result: true, itActual: 'JSON', itExpected: '"TrUtHy"' },
  { actual: Promise, expected: 'TrUtHy', result: true, itActual: 'Promise', itExpected: '"TrUtHy"' },
  { actual: new Promise(() => { }), expected: 'TrUtHy', result: true, itActual: 'new Promise(()=>{})', itExpected: '"TrUtHy"' },
  { actual: {}.name, expected: 'TrUtHy', result: false, itActual: '{}.name', itExpected: '"TrUtHy"' },
  { actual: RangeError, expected: 'TrUtHy', result: true, itActual: 'RangeError', itExpected: '"TrUtHy"' },
  { actual: ReferenceError, expected: 'TrUtHy', result: true, itActual: 'ReferenceError', itExpected: '"TrUtHy"' },
  { actual: new RangeError('error'), expected: 'TrUtHy', result: true, itActual: 'new RangeError("error")', itExpected: '"TrUtHy"' },
  { actual: new ReferenceError('error'), expected: 'TrUtHy', result: true, itActual: 'new ReferenceError("error")', itExpected: '"TrUtHy"' },
  { actual: Name, expected: 'TrUtHy', result: true, itActual: 'Name', itExpected: '"TrUtHy"' },
  { actual: new Name(), expected: 'TrUtHy', result: true, itActual: 'new Name()', itExpected: '"TrUtHy"' },
  { actual: new instance(), expected: 'TrUtHy', result: true, itActual: 'new instance()', itExpected: '"TrUtHy"' },
  { actual: new truthy(), expected: 'TrUtHy', result: true, itActual: 'new truthy()', itExpected: '"TrUtHy"' },
  { actual: new falsy(), expected: 'TrUtHy', result: true, itActual: 'new falsy()', itExpected: '"TrUtHy"' },
  { actual: new any(), expected: 'TrUtHy', result: true, itActual: 'new any()', itExpected: '"TrUtHy"' },
  { actual: new objectable(), expected: 'TrUtHy', result: true, itActual: 'new objectable()', itExpected: '"TrUtHy"' },

  { actual: Date, expected: 'TrU', result: false, itActual: 'Date', itExpected: '"TrU"' },
  { actual: new Date(), expected: 'TrU', result: false, itActual: 'new Date()', itExpected: '"TrU"' },
  { actual: Function, expected: 'TrU', result: false, itActual: 'Function', itExpected: '"TrU"' },
  { actual: function () { }, expected: 'TrU', result: false, itActual: 'function(){}', itExpected: '"TrU"' },
  { actual: new Function('return "hello"'), expected: 'TrU', result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '"TrU"' },
  { actual: (function () { return arguments; })(), expected: 'TrU', result: false, itActual: '(function(){return arguments;})()', itExpected: '"TrU"' },
  { actual: () => { }, expected: 'TrU', result: false, itActual: '()=>{}', itExpected: '"TrU"' },
  { actual: String, expected: 'TrU', result: false, itActual: 'String', itExpected: '"TrU"' },
  { actual: new String('Hello'), expected: 'TrU', result: false, itActual: 'new String("Hello")', itExpected: '"TrU"' },
  { actual: new String(''), expected: 'TrU', result: false, itActual: 'new String("")', itExpected: '"TrU"' },
  { actual: 'Hello', expected: 'TrU', result: false, itActual: '"Hello"', itExpected: '"TrU"' },
  { actual: `Hello`, expected: 'TrU', result: false, itActual: '`Hello`', itExpected: '"TrU"' },
  { actual: '', expected: 'TrU', result: false, itActual: '""', itExpected: '"TrU"' },
  { actual: Number, expected: 'TrU', result: false, itActual: 'Number', itExpected: '"TrU"' },
  { actual: new Number(10), expected: 'TrU', result: false, itActual: 'new Number(10)', itExpected: '"TrU"' },
  { actual: new Number(0), expected: 'TrU', result: false, itActual: 'new Number(0)', itExpected: '"TrU"' },
  { actual: 10, expected: 'TrU', result: false, itActual: '10', itExpected: '"TrU"' },
  { actual: 0, expected: 'TrU', result: false, itActual: '0', itExpected: '"TrU"' },
  { actual: Boolean, expected: 'TrU', result: false, itActual: 'Boolean', itExpected: '"TrU"' },
  { actual: new Boolean(0), expected: 'TrU', result: false, itActual: 'new Boolean(0)', itExpected: '"TrU"' },
  { actual: false, expected: 'TrU', result: false, itActual: 'false', itExpected: '"TrU"' },
  { actual: true, expected: 'TrU', result: false, itActual: 'true', itExpected: '"TrU"' },
  { actual: RegExp, expected: 'TrU', result: false, itActual: 'RegExp', itExpected: '"TrU"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'TrU', result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '"TrU"' },
  { actual: /hello/, expected: 'TrU', result: false, itActual: '/hello/', itExpected: '"TrU"' },
  { actual: isNaN, expected: 'TrU', result: false, itActual: 'isNaN', itExpected: '"TrU"' },
  { actual: isNaN('hello'), expected: 'TrU', result: false, itActual: 'isNaN("hello")', itExpected: '"TrU"' },
  { actual: isFinite, expected: 'TrU', result: false, itActual: 'isFinite', itExpected: '"TrU"' },
  { actual: isFinite(10), expected: 'TrU', result: false, itActual: 'isFinite(10)', itExpected: '"TrU"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'TrU', result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"TrU"' },
  { actual: Object, expected: 'TrU', result: false, itActual: 'Object', itExpected: '"TrU"' },
  { actual: {}, expected: 'TrU', result: false, itActual: '{}', itExpected: '"TrU"' },
  { actual: Error, expected: 'TrU', result: false, itActual: 'Error', itExpected: '"TrU"' },
  { actual: TypeError, expected: 'TrU', result: false, itActual: 'TypeError', itExpected: '"TrU"' },
  { actual: new Error('error'), expected: 'TrU', result: false, itActual: 'new Error("error")', itExpected: '"TrU"' },
  { actual: new TypeError('error'), expected: 'TrU', result: false, itActual: 'new TypeError("error")', itExpected: '"TrU"' },
  { actual: undefined, expected: 'TrU', result: false, itActual: 'undefined', itExpected: '"TrU"' },
  { actual: null, expected: 'TrU', result: false, itActual: 'null', itExpected: '"TrU"' },
  { actual: Infinity, expected: 'TrU', result: false, itActual: 'Infinity', itExpected: '"TrU"' },
  { actual: NaN, expected: 'TrU', result: false, itActual: 'NaN', itExpected: '"TrU"' },
  { actual: JSON, expected: 'TrU', result: false, itActual: 'JSON', itExpected: '"TrU"' },
  { actual: Promise, expected: 'TrU', result: false, itActual: 'Promise', itExpected: '"TrU"' },
  { actual: new Promise(() => { }), expected: 'TrU', result: false, itActual: 'new Promise(()=>{})', itExpected: '"TrU"' },
  { actual: {}.name, expected: 'TrU', result: false, itActual: '{}.name', itExpected: '"TrU"' },
  { actual: RangeError, expected: 'TrU', result: false, itActual: 'RangeError', itExpected: '"TrU"' },
  { actual: ReferenceError, expected: 'TrU', result: false, itActual: 'ReferenceError', itExpected: '"TrU"' },
  { actual: new RangeError('error'), expected: 'TrU', result: false, itActual: 'new RangeError("error")', itExpected: '"TrU"' },
  { actual: new ReferenceError('error'), expected: 'TrU', result: false, itActual: 'new ReferenceError("error")', itExpected: '"TrU"' },
  { actual: Name, expected: 'TrU', result: false, itActual: 'Name', itExpected: '"TrU"' },
  { actual: new Name(), expected: 'TrU', result: false, itActual: 'new Name()', itExpected: '"TrU"' },
  { actual: new instance(), expected: 'TrU', result: false, itActual: 'new instance()', itExpected: '"TrU"' },
  { actual: new truthy(), expected: 'TrU', result: false, itActual: 'new truthy()', itExpected: '"TrU"' },
  { actual: new falsy(), expected: 'TrU', result: false, itActual: 'new falsy()', itExpected: '"TrU"' },
  { actual: new any(), expected: 'TrU', result: false, itActual: 'new any()', itExpected: '"TrU"' },
  { actual: new objectable(), expected: 'TrU', result: false, itActual: 'new objectable()', itExpected: '"TrU"' },

  { actual: Date, expected: 'falsy', result: false, itActual: 'Date', itExpected: '"falsy"' },
  { actual: new Date(), expected: 'falsy', result: false, itActual: 'new Date()', itExpected: '"falsy"' },
  { actual: Function, expected: 'falsy', result: false, itActual: 'Function', itExpected: '"falsy"' },
  { actual: function () { }, expected: 'falsy', result: false, itActual: 'function(){}', itExpected: '"falsy"' },
  { actual: new Function('return "hello"'), expected: 'falsy', result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '"falsy"' },
  { actual: (function () { return arguments; })(), expected: 'falsy', result: false, itActual: '(function(){return arguments;})()', itExpected: '"falsy"' },
  { actual: () => { }, expected: 'falsy', result: false, itActual: '()=>{}', itExpected: '"falsy"' },
  { actual: String, expected: 'falsy', result: false, itActual: 'String', itExpected: '"falsy"' },
  { actual: new String('Hello'), expected: 'falsy', result: false, itActual: 'new String("Hello")', itExpected: '"falsy"' },
  { actual: new String(''), expected: 'falsy', result: false, itActual: 'new String("")', itExpected: '"falsy"' },
  { actual: 'Hello', expected: 'falsy', result: false, itActual: '"Hello"', itExpected: '"falsy"' },
  { actual: `Hello`, expected: 'falsy', result: false, itActual: '`Hello`', itExpected: '"falsy"' },
  { actual: '', expected: 'falsy', result: true, itActual: '""', itExpected: '"falsy"' },
  { actual: Number, expected: 'falsy', result: false, itActual: 'Number', itExpected: '"falsy"' },
  { actual: new Number(10), expected: 'falsy', result: false, itActual: 'new Number(10)', itExpected: '"falsy"' },
  { actual: new Number(0), expected: 'falsy', result: false, itActual: 'new Number(0)', itExpected: '"falsy"' },
  { actual: 10, expected: 'falsy', result: false, itActual: '10', itExpected: '"falsy"' },
  { actual: 0, expected: 'falsy', result: true, itActual: '0', itExpected: '"falsy"' },
  { actual: Boolean, expected: 'falsy', result: false, itActual: 'Boolean', itExpected: '"falsy"' },
  { actual: new Boolean(0), expected: 'falsy', result: false, itActual: 'new Boolean(0)', itExpected: '"falsy"' },
  { actual: false, expected: 'falsy', result: true, itActual: 'false', itExpected: '"falsy"' },
  { actual: true, expected: 'falsy', result: false, itActual: 'true', itExpected: '"falsy"' },
  { actual: RegExp, expected: 'falsy', result: false, itActual: 'RegExp', itExpected: '"falsy"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'falsy', result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '"falsy"' },
  { actual: /hello/, expected: 'falsy', result: false, itActual: '/hello/', itExpected: '"falsy"' },
  { actual: isNaN, expected: 'falsy', result: false, itActual: 'isNaN', itExpected: '"falsy"' },
  { actual: isNaN('hello'), expected: 'falsy', result: false, itActual: 'isNaN("hello")', itExpected: '"falsy"' },
  { actual: isFinite, expected: 'falsy', result: false, itActual: 'isFinite', itExpected: '"falsy"' },
  { actual: isFinite(10), expected: 'falsy', result: false, itActual: 'isFinite(10)', itExpected: '"falsy"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'falsy', result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"falsy"' },
  { actual: Object, expected: 'falsy', result: false, itActual: 'Object', itExpected: '"falsy"' },
  { actual: {}, expected: 'falsy', result: false, itActual: '{}', itExpected: '"falsy"' },
  { actual: Error, expected: 'falsy', result: false, itActual: 'Error', itExpected: '"falsy"' },
  { actual: TypeError, expected: 'falsy', result: false, itActual: 'TypeError', itExpected: '"falsy"' },
  { actual: new Error('error'), expected: 'falsy', result: false, itActual: 'new Error("error")', itExpected: '"falsy"' },
  { actual: new TypeError('error'), expected: 'falsy', result: false, itActual: 'new TypeError("error")', itExpected: '"falsy"' },
  { actual: undefined, expected: 'falsy', result: true, itActual: 'undefined', itExpected: '"falsy"' },
  { actual: null, expected: 'falsy', result: true, itActual: 'null', itExpected: '"falsy"' },
  { actual: Infinity, expected: 'falsy', result: false, itActual: 'Infinity', itExpected: '"falsy"' },
  { actual: NaN, expected: 'falsy', result: true, itActual: 'NaN', itExpected: '"falsy"' },
  { actual: JSON, expected: 'falsy', result: false, itActual: 'JSON', itExpected: '"falsy"' },
  { actual: Promise, expected: 'falsy', result: false, itActual: 'Promise', itExpected: '"falsy"' },
  { actual: new Promise(() => { }), expected: 'falsy', result: false, itActual: 'new Promise(()=>{})', itExpected: '"falsy"' },
  { actual: {}.name, expected: 'falsy', result: true, itActual: '{}.name', itExpected: '"falsy"' },
  { actual: RangeError, expected: 'falsy', result: false, itActual: 'RangeError', itExpected: '"falsy"' },
  { actual: ReferenceError, expected: 'falsy', result: false, itActual: 'ReferenceError', itExpected: '"falsy"' },
  { actual: new RangeError('error'), expected: 'falsy', result: false, itActual: 'new RangeError("error")', itExpected: '"falsy"' },
  { actual: new ReferenceError('error'), expected: 'falsy', result: false, itActual: 'new ReferenceError("error")', itExpected: '"falsy"' },
  { actual: Name, expected: 'falsy', result: false, itActual: 'Name', itExpected: '"falsy"' },
  { actual: new Name(), expected: 'falsy', result: false, itActual: 'new Name()', itExpected: '"falsy"' },
  { actual: new instance(), expected: 'falsy', result: false, itActual: 'new instance()', itExpected: '"falsy"' },
  { actual: new truthy(), expected: 'falsy', result: false, itActual: 'new truthy()', itExpected: '"falsy"' },
  { actual: new falsy(), expected: 'falsy', result: true, itActual: 'new falsy()', itExpected: '"falsy"' },
  { actual: new any(), expected: 'falsy', result: false, itActual: 'new any()', itExpected: '"falsy"' },
  { actual: new objectable(), expected: 'falsy', result: false, itActual: 'new objectable()', itExpected: '"falsy"' },

  { actual: Date, expected: 'fal', result: false, itActual: 'Date', itExpected: '"fal"' },
  { actual: new Date(), expected: 'fal', result: false, itActual: 'new Date()', itExpected: '"fal"' },
  { actual: Function, expected: 'fal', result: false, itActual: 'Function', itExpected: '"fal"' },
  { actual: function () { }, expected: 'fal', result: false, itActual: 'function(){}', itExpected: '"fal"' },
  { actual: new Function('return "hello"'), expected: 'fal', result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '"fal"' },
  { actual: (function () { return arguments; })(), expected: 'fal', result: false, itActual: '(function(){return arguments;})()', itExpected: '"fal"' },
  { actual: () => { }, expected: 'fal', result: false, itActual: '()=>{}', itExpected: '"fal"' },
  { actual: String, expected: 'fal', result: false, itActual: 'String', itExpected: '"fal"' },
  { actual: new String('Hello'), expected: 'fal', result: false, itActual: 'new String("Hello")', itExpected: '"fal"' },
  { actual: new String(''), expected: 'fal', result: false, itActual: 'new String("")', itExpected: '"fal"' },
  { actual: 'Hello', expected: 'fal', result: false, itActual: '"Hello"', itExpected: '"fal"' },
  { actual: `Hello`, expected: 'fal', result: false, itActual: '`Hello`', itExpected: '"fal"' },
  { actual: '', expected: 'fal', result: false, itActual: '""', itExpected: '"fal"' },
  { actual: Number, expected: 'fal', result: false, itActual: 'Number', itExpected: '"fal"' },
  { actual: new Number(10), expected: 'fal', result: false, itActual: 'new Number(10)', itExpected: '"fal"' },
  { actual: new Number(0), expected: 'fal', result: false, itActual: 'new Number(0)', itExpected: '"fal"' },
  { actual: 10, expected: 'fal', result: false, itActual: '10', itExpected: '"fal"' },
  { actual: 0, expected: 'fal', result: false, itActual: '0', itExpected: '"fal"' },
  { actual: Boolean, expected: 'fal', result: false, itActual: 'Boolean', itExpected: '"fal"' },
  { actual: new Boolean(0), expected: 'fal', result: false, itActual: 'new Boolean(0)', itExpected: '"fal"' },
  { actual: false, expected: 'fal', result: false, itActual: 'false', itExpected: '"fal"' },
  { actual: true, expected: 'fal', result: false, itActual: 'true', itExpected: '"fal"' },
  { actual: RegExp, expected: 'fal', result: false, itActual: 'RegExp', itExpected: '"fal"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'fal', result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '"fal"' },
  { actual: /hello/, expected: 'fal', result: false, itActual: '/hello/', itExpected: '"fal"' },
  { actual: isNaN, expected: 'fal', result: false, itActual: 'isNaN', itExpected: '"fal"' },
  { actual: isNaN('hello'), expected: 'fal', result: false, itActual: 'isNaN("hello")', itExpected: '"fal"' },
  { actual: isFinite, expected: 'fal', result: false, itActual: 'isFinite', itExpected: '"fal"' },
  { actual: isFinite(10), expected: 'fal', result: false, itActual: 'isFinite(10)', itExpected: '"fal"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'fal', result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"fal"' },
  { actual: Object, expected: 'fal', result: false, itActual: 'Object', itExpected: '"fal"' },
  { actual: {}, expected: 'fal', result: false, itActual: '{}', itExpected: '"fal"' },
  { actual: Error, expected: 'fal', result: false, itActual: 'Error', itExpected: '"fal"' },
  { actual: TypeError, expected: 'fal', result: false, itActual: 'TypeError', itExpected: '"fal"' },
  { actual: new Error('error'), expected: 'fal', result: false, itActual: 'new Error("error")', itExpected: '"fal"' },
  { actual: new TypeError('error'), expected: 'fal', result: false, itActual: 'new TypeError("error")', itExpected: '"fal"' },
  { actual: undefined, expected: 'fal', result: false, itActual: 'undefined', itExpected: '"fal"' },
  { actual: null, expected: 'fal', result: false, itActual: 'null', itExpected: '"fal"' },
  { actual: Infinity, expected: 'fal', result: false, itActual: 'Infinity', itExpected: '"fal"' },
  { actual: NaN, expected: 'fal', result: false, itActual: 'NaN', itExpected: '"fal"' },
  { actual: JSON, expected: 'fal', result: false, itActual: 'JSON', itExpected: '"fal"' },
  { actual: Promise, expected: 'fal', result: false, itActual: 'Promise', itExpected: '"fal"' },
  { actual: new Promise(() => { }), expected: 'fal', result: false, itActual: 'new Promise(()=>{})', itExpected: '"fal"' },
  { actual: {}.name, expected: 'fal', result: false, itActual: '{}.name', itExpected: '"fal"' },
  { actual: RangeError, expected: 'fal', result: false, itActual: 'RangeError', itExpected: '"fal"' },
  { actual: ReferenceError, expected: 'fal', result: false, itActual: 'ReferenceError', itExpected: '"fal"' },
  { actual: new RangeError('error'), expected: 'fal', result: false, itActual: 'new RangeError("error")', itExpected: '"fal"' },
  { actual: new ReferenceError('error'), expected: 'fal', result: false, itActual: 'new ReferenceError("error")', itExpected: '"fal"' },
  { actual: Name, expected: 'fal', result: false, itActual: 'Name', itExpected: '"fal"' },
  { actual: new Name(), expected: 'fal', result: false, itActual: 'new Name()', itExpected: '"fal"' },
  { actual: new instance(), expected: 'fal', result: false, itActual: 'new instance()', itExpected: '"fal"' },
  { actual: new truthy(), expected: 'fal', result: false, itActual: 'new truthy()', itExpected: '"fal"' },
  { actual: new falsy(), expected: 'fal', result: false, itActual: 'new falsy()', itExpected: '"fal"' },
  { actual: new any(), expected: 'fal', result: false, itActual: 'new any()', itExpected: '"fal"' },
  { actual: new objectable(), expected: 'fal', result: false, itActual: 'new objectable()', itExpected: '"fal"' },

  { actual: Date, expected: 'FaLsY', result: false, itActual: 'Date', itExpected: '"FaLsY"' },
  { actual: new Date(), expected: 'FaLsY', result: false, itActual: 'new Date()', itExpected: '"FaLsY"' },
  { actual: Function, expected: 'FaLsY', result: false, itActual: 'Function', itExpected: '"FaLsY"' },
  { actual: function () { }, expected: 'FaLsY', result: false, itActual: 'function(){}', itExpected: '"FaLsY"' },
  { actual: new Function('return "hello"'), expected: 'FaLsY', result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '"FaLsY"' },
  { actual: (function () { return arguments; })(), expected: 'FaLsY', result: false, itActual: '(function(){return arguments;})()', itExpected: '"FaLsY"' },
  { actual: () => { }, expected: 'FaLsY', result: false, itActual: '()=>{}', itExpected: '"FaLsY"' },
  { actual: String, expected: 'FaLsY', result: false, itActual: 'String', itExpected: '"FaLsY"' },
  { actual: new String('Hello'), expected: 'FaLsY', result: false, itActual: 'new String("Hello")', itExpected: '"FaLsY"' },
  { actual: new String(''), expected: 'FaLsY', result: false, itActual: 'new String("")', itExpected: '"FaLsY"' },
  { actual: 'Hello', expected: 'FaLsY', result: false, itActual: '"Hello"', itExpected: '"FaLsY"' },
  { actual: `Hello`, expected: 'FaLsY', result: false, itActual: '`Hello`', itExpected: '"FaLsY"' },
  { actual: '', expected: 'FaLsY', result: true, itActual: '""', itExpected: '"FaLsY"' },
  { actual: Number, expected: 'FaLsY', result: false, itActual: 'Number', itExpected: '"FaLsY"' },
  { actual: new Number(10), expected: 'FaLsY', result: false, itActual: 'new Number(10)', itExpected: '"FaLsY"' },
  { actual: new Number(0), expected: 'FaLsY', result: false, itActual: 'new Number(0)', itExpected: '"FaLsY"' },
  { actual: 10, expected: 'FaLsY', result: false, itActual: '10', itExpected: '"FaLsY"' },
  { actual: 0, expected: 'FaLsY', result: true, itActual: '0', itExpected: '"FaLsY"' },
  { actual: Boolean, expected: 'FaLsY', result: false, itActual: 'Boolean', itExpected: '"FaLsY"' },
  { actual: new Boolean(0), expected: 'FaLsY', result: false, itActual: 'new Boolean(0)', itExpected: '"FaLsY"' },
  { actual: false, expected: 'FaLsY', result: true, itActual: 'false', itExpected: '"FaLsY"' },
  { actual: true, expected: 'FaLsY', result: false, itActual: 'true', itExpected: '"FaLsY"' },
  { actual: RegExp, expected: 'FaLsY', result: false, itActual: 'RegExp', itExpected: '"FaLsY"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'FaLsY', result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '"FaLsY"' },
  { actual: /hello/, expected: 'FaLsY', result: false, itActual: '/hello/', itExpected: '"FaLsY"' },
  { actual: isNaN, expected: 'FaLsY', result: false, itActual: 'isNaN', itExpected: '"FaLsY"' },
  { actual: isNaN('hello'), expected: 'FaLsY', result: false, itActual: 'isNaN("hello")', itExpected: '"FaLsY"' },
  { actual: isFinite, expected: 'FaLsY', result: false, itActual: 'isFinite', itExpected: '"FaLsY"' },
  { actual: isFinite(10), expected: 'FaLsY', result: false, itActual: 'isFinite(10)', itExpected: '"FaLsY"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'FaLsY', result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"FaLsY"' },
  { actual: Object, expected: 'FaLsY', result: false, itActual: 'Object', itExpected: '"FaLsY"' },
  { actual: {}, expected: 'FaLsY', result: false, itActual: '{}', itExpected: '"FaLsY"' },
  { actual: Error, expected: 'FaLsY', result: false, itActual: 'Error', itExpected: '"FaLsY"' },
  { actual: TypeError, expected: 'FaLsY', result: false, itActual: 'TypeError', itExpected: '"FaLsY"' },
  { actual: new Error('error'), expected: 'FaLsY', result: false, itActual: 'new Error("error")', itExpected: '"FaLsY"' },
  { actual: new TypeError('error'), expected: 'FaLsY', result: false, itActual: 'new TypeError("error")', itExpected: '"FaLsY"' },
  { actual: undefined, expected: 'FaLsY', result: true, itActual: 'undefined', itExpected: '"FaLsY"' },
  { actual: null, expected: 'FaLsY', result: true, itActual: 'null', itExpected: '"FaLsY"' },
  { actual: Infinity, expected: 'FaLsY', result: false, itActual: 'Infinity', itExpected: '"FaLsY"' },
  { actual: NaN, expected: 'FaLsY', result: true, itActual: 'NaN', itExpected: '"FaLsY"' },
  { actual: JSON, expected: 'FaLsY', result: false, itActual: 'JSON', itExpected: '"FaLsY"' },
  { actual: Promise, expected: 'FaLsY', result: false, itActual: 'Promise', itExpected: '"FaLsY"' },
  { actual: new Promise(() => { }), expected: 'FaLsY', result: false, itActual: 'new Promise(()=>{})', itExpected: '"FaLsY"' },
  { actual: {}.name, expected: 'FaLsY', result: true, itActual: '{}.name', itExpected: '"FaLsY"' },
  { actual: RangeError, expected: 'FaLsY', result: false, itActual: 'RangeError', itExpected: '"FaLsY"' },
  { actual: ReferenceError, expected: 'FaLsY', result: false, itActual: 'ReferenceError', itExpected: '"FaLsY"' },
  { actual: new RangeError('error'), expected: 'FaLsY', result: false, itActual: 'new RangeError("error")', itExpected: '"FaLsY"' },
  { actual: new ReferenceError('error'), expected: 'FaLsY', result: false, itActual: 'new ReferenceError("error")', itExpected: '"FaLsY"' },
  { actual: Name, expected: 'FaLsY', result: false, itActual: 'Name', itExpected: '"FaLsY"' },
  { actual: new Name(), expected: 'FaLsY', result: false, itActual: 'new Name()', itExpected: '"FaLsY"' },
  { actual: new instance(), expected: 'FaLsY', result: false, itActual: 'new instance()', itExpected: '"FaLsY"' },
  { actual: new truthy(), expected: 'FaLsY', result: false, itActual: 'new truthy()', itExpected: '"FaLsY"' },
  { actual: new falsy(), expected: 'FaLsY', result: true, itActual: 'new falsy()', itExpected: '"FaLsY"' },
  { actual: new any(), expected: 'FaLsY', result: false, itActual: 'new any()', itExpected: '"FaLsY"' },
  { actual: new objectable(), expected: 'FaLsY', result: false, itActual: 'new objectable()', itExpected: '"FaLsY"' },

  { actual: Date, expected: 'FaL', result: false, itActual: 'Date', itExpected: '"FaL"' },
  { actual: new Date(), expected: 'FaL', result: false, itActual: 'new Date()', itExpected: '"FaL"' },
  { actual: Function, expected: 'FaL', result: false, itActual: 'Function', itExpected: '"FaL"' },
  { actual: function () { }, expected: 'FaL', result: false, itActual: 'function(){}', itExpected: '"FaL"' },
  { actual: new Function('return "hello"'), expected: 'FaL', result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '"FaL"' },
  { actual: (function () { return arguments; })(), expected: 'FaL', result: false, itActual: '(function(){return arguments;})()', itExpected: '"FaL"' },
  { actual: () => { }, expected: 'FaL', result: false, itActual: '()=>{}', itExpected: '"FaL"' },
  { actual: String, expected: 'FaL', result: false, itActual: 'String', itExpected: '"FaL"' },
  { actual: new String('Hello'), expected: 'FaL', result: false, itActual: 'new String("Hello")', itExpected: '"FaL"' },
  { actual: new String(''), expected: 'FaL', result: false, itActual: 'new String("")', itExpected: '"FaL"' },
  { actual: 'Hello', expected: 'FaL', result: false, itActual: '"Hello"', itExpected: '"FaL"' },
  { actual: `Hello`, expected: 'FaL', result: false, itActual: '`Hello`', itExpected: '"FaL"' },
  { actual: '', expected: 'FaL', result: false, itActual: '""', itExpected: '"FaL"' },
  { actual: Number, expected: 'FaL', result: false, itActual: 'Number', itExpected: '"FaL"' },
  { actual: new Number(10), expected: 'FaL', result: false, itActual: 'new Number(10)', itExpected: '"FaL"' },
  { actual: new Number(0), expected: 'FaL', result: false, itActual: 'new Number(0)', itExpected: '"FaL"' },
  { actual: 10, expected: 'FaL', result: false, itActual: '10', itExpected: '"FaL"' },
  { actual: 0, expected: 'FaL', result: false, itActual: '0', itExpected: '"FaL"' },
  { actual: Boolean, expected: 'FaL', result: false, itActual: 'Boolean', itExpected: '"FaL"' },
  { actual: new Boolean(0), expected: 'FaL', result: false, itActual: 'new Boolean(0)', itExpected: '"FaL"' },
  { actual: false, expected: 'FaL', result: false, itActual: 'false', itExpected: '"FaL"' },
  { actual: true, expected: 'FaL', result: false, itActual: 'true', itExpected: '"FaL"' },
  { actual: RegExp, expected: 'FaL', result: false, itActual: 'RegExp', itExpected: '"FaL"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'FaL', result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '"FaL"' },
  { actual: /hello/, expected: 'FaL', result: false, itActual: '/hello/', itExpected: '"FaL"' },
  { actual: isNaN, expected: 'FaL', result: false, itActual: 'isNaN', itExpected: '"FaL"' },
  { actual: isNaN('hello'), expected: 'FaL', result: false, itActual: 'isNaN("hello")', itExpected: '"FaL"' },
  { actual: isFinite, expected: 'FaL', result: false, itActual: 'isFinite', itExpected: '"FaL"' },
  { actual: isFinite(10), expected: 'FaL', result: false, itActual: 'isFinite(10)', itExpected: '"FaL"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'FaL', result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"FaL"' },
  { actual: Object, expected: 'FaL', result: false, itActual: 'Object', itExpected: '"FaL"' },
  { actual: {}, expected: 'FaL', result: false, itActual: '{}', itExpected: '"FaL"' },
  { actual: Error, expected: 'FaL', result: false, itActual: 'Error', itExpected: '"FaL"' },
  { actual: TypeError, expected: 'FaL', result: false, itActual: 'TypeError', itExpected: '"FaL"' },
  { actual: new Error('error'), expected: 'FaL', result: false, itActual: 'new Error("error")', itExpected: '"FaL"' },
  { actual: new TypeError('error'), expected: 'FaL', result: false, itActual: 'new TypeError("error")', itExpected: '"FaL"' },
  { actual: undefined, expected: 'FaL', result: false, itActual: 'undefined', itExpected: '"FaL"' },
  { actual: null, expected: 'FaL', result: false, itActual: 'null', itExpected: '"FaL"' },
  { actual: Infinity, expected: 'FaL', result: false, itActual: 'Infinity', itExpected: '"FaL"' },
  { actual: NaN, expected: 'FaL', result: false, itActual: 'NaN', itExpected: '"FaL"' },
  { actual: JSON, expected: 'FaL', result: false, itActual: 'JSON', itExpected: '"FaL"' },
  { actual: Promise, expected: 'FaL', result: false, itActual: 'Promise', itExpected: '"FaL"' },
  { actual: new Promise(() => { }), expected: 'FaL', result: false, itActual: 'new Promise(()=>{})', itExpected: '"FaL"' },
  { actual: {}.name, expected: 'FaL', result: false, itActual: '{}.name', itExpected: '"FaL"' },
  { actual: RangeError, expected: 'FaL', result: false, itActual: 'RangeError', itExpected: '"FaL"' },
  { actual: ReferenceError, expected: 'FaL', result: false, itActual: 'ReferenceError', itExpected: '"FaL"' },
  { actual: new RangeError('error'), expected: 'FaL', result: false, itActual: 'new RangeError("error")', itExpected: '"FaL"' },
  { actual: new ReferenceError('error'), expected: 'FaL', result: false, itActual: 'new ReferenceError("error")', itExpected: '"FaL"' },
  { actual: Name, expected: 'FaL', result: false, itActual: 'Name', itExpected: '"FaL"' },
  { actual: new Name(), expected: 'FaL', result: false, itActual: 'new Name()', itExpected: '"FaL"' },
  { actual: new instance(), expected: 'FaL', result: false, itActual: 'new instance()', itExpected: '"FaL"' },
  { actual: new truthy(), expected: 'FaL', result: false, itActual: 'new truthy()', itExpected: '"FaL"' },
  { actual: new falsy(), expected: 'FaL', result: false, itActual: 'new falsy()', itExpected: '"FaL"' },
  { actual: new any(), expected: 'FaL', result: false, itActual: 'new any()', itExpected: '"FaL"' },
  { actual: new objectable(), expected: 'FaL', result: false, itActual: 'new objectable()', itExpected: '"FaL"' },

  { actual: Date, expected: 'instance', result: false, itActual: 'Date', itExpected: '"instance"' },
  { actual: new Date(), expected: 'instance', result: false, itActual: 'new Date()', itExpected: '"instance"' },
  { actual: Function, expected: 'instance', result: false, itActual: 'Function', itExpected: '"instance"' },
  { actual: function () { }, expected: 'instance', result: false, itActual: 'function(){}', itExpected: '"instance"' },
  { actual: new Function('return "hello"'), expected: 'instance', result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '"instance"' },
  { actual: (function () { return arguments; })(), expected: 'instance', result: false, itActual: '(function(){return arguments;})()', itExpected: '"instance"' },
  { actual: () => { }, expected: 'instance', result: false, itActual: '()=>{}', itExpected: '"instance"' },
  { actual: String, expected: 'instance', result: false, itActual: 'String', itExpected: '"instance"' },
  { actual: new String('Hello'), expected: 'instance', result: false, itActual: 'new String("Hello")', itExpected: '"instance"' },
  { actual: new String(''), expected: 'instance', result: false, itActual: 'new String("")', itExpected: '"instance"' },
  { actual: 'Hello', expected: 'instance', result: false, itActual: '"Hello"', itExpected: '"instance"' },
  { actual: `Hello`, expected: 'instance', result: false, itActual: '`Hello`', itExpected: '"instance"' },
  { actual: '', expected: 'instance', result: false, itActual: '""', itExpected: '"instance"' },
  { actual: Number, expected: 'instance', result: false, itActual: 'Number', itExpected: '"instance"' },
  { actual: new Number(10), expected: 'instance', result: false, itActual: 'new Number(10)', itExpected: '"instance"' },
  { actual: new Number(0), expected: 'instance', result: false, itActual: 'new Number(0)', itExpected: '"instance"' },
  { actual: 10, expected: 'instance', result: false, itActual: '10', itExpected: '"instance"' },
  { actual: 0, expected: 'instance', result: false, itActual: '0', itExpected: '"instance"' },
  { actual: Boolean, expected: 'instance', result: false, itActual: 'Boolean', itExpected: '"instance"' },
  { actual: new Boolean(0), expected: 'instance', result: false, itActual: 'new Boolean(0)', itExpected: '"instance"' },
  { actual: false, expected: 'instance', result: false, itActual: 'false', itExpected: '"instance"' },
  { actual: true, expected: 'instance', result: false, itActual: 'true', itExpected: '"instance"' },
  { actual: RegExp, expected: 'instance', result: false, itActual: 'RegExp', itExpected: '"instance"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'instance', result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '"instance"' },
  { actual: /hello/, expected: 'instance', result: false, itActual: '/hello/', itExpected: '"instance"' },
  { actual: isNaN, expected: 'instance', result: false, itActual: 'isNaN', itExpected: '"instance"' },
  { actual: isNaN('hello'), expected: 'instance', result: false, itActual: 'isNaN("hello")', itExpected: '"instance"' },
  { actual: isFinite, expected: 'instance', result: false, itActual: 'isFinite', itExpected: '"instance"' },
  { actual: isFinite(10), expected: 'instance', result: false, itActual: 'isFinite(10)', itExpected: '"instance"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'instance', result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"instance"' },
  { actual: Object, expected: 'instance', result: false, itActual: 'Object', itExpected: '"instance"' },
  { actual: {}, expected: 'instance', result: false, itActual: '{}', itExpected: '"instance"' },
  { actual: Error, expected: 'instance', result: false, itActual: 'Error', itExpected: '"instance"' },
  { actual: TypeError, expected: 'instance', result: false, itActual: 'TypeError', itExpected: '"instance"' },
  { actual: new Error('error'), expected: 'instance', result: false, itActual: 'new Error("error")', itExpected: '"instance"' },
  { actual: new TypeError('error'), expected: 'instance', result: false, itActual: 'new TypeError("error")', itExpected: '"instance"' },
  { actual: undefined, expected: 'instance', result: false, itActual: 'undefined', itExpected: '"instance"' },
  { actual: null, expected: 'instance', result: false, itActual: 'null', itExpected: '"instance"' },
  { actual: Infinity, expected: 'instance', result: false, itActual: 'Infinity', itExpected: '"instance"' },
  { actual: NaN, expected: 'instance', result: false, itActual: 'NaN', itExpected: '"instance"' },
  { actual: JSON, expected: 'instance', result: false, itActual: 'JSON', itExpected: '"instance"' },
  { actual: Promise, expected: 'instance', result: false, itActual: 'Promise', itExpected: '"instance"' },
  { actual: new Promise(() => { }), expected: 'instance', result: false, itActual: 'new Promise(()=>{})', itExpected: '"instance"' },
  { actual: {}.name, expected: 'instance', result: false, itActual: '{}.name', itExpected: '"instance"' },
  { actual: RangeError, expected: 'instance', result: false, itActual: 'RangeError', itExpected: '"instance"' },
  { actual: ReferenceError, expected: 'instance', result: false, itActual: 'ReferenceError', itExpected: '"instance"' },
  { actual: new RangeError('error'), expected: 'instance', result: false, itActual: 'new RangeError("error")', itExpected: '"instance"' },
  { actual: new ReferenceError('error'), expected: 'instance', result: false, itActual: 'new ReferenceError("error")', itExpected: '"instance"' },
  { actual: Name, expected: 'instance', result: false, itActual: 'Name', itExpected: '"instance"' },
  { actual: new Name(), expected: 'instance', result: true, itActual: 'new Name()', itExpected: '"instance"' },
  { actual: new instance(), expected: 'instance', result: true, itActual: 'new instance()', itExpected: '"instance"' },
  { actual: new truthy(), expected: 'instance', result: true, itActual: 'new truthy()', itExpected: '"instance"' },
  { actual: new falsy(), expected: 'instance', result: true, itActual: 'new falsy()', itExpected: '"instance"' },
  { actual: new any(), expected: 'instance', result: true, itActual: 'new any()', itExpected: '"instance"' },
  { actual: new objectable(), expected: 'instance', result: true, itActual: 'new objectable()', itExpected: '"instance"' },

  { actual: Date, expected: 'inst', result: false, itActual: 'Date', itExpected: '"inst"' },
  { actual: new Date(), expected: 'inst', result: false, itActual: 'new Date()', itExpected: '"inst"' },
  { actual: Function, expected: 'inst', result: false, itActual: 'Function', itExpected: '"inst"' },
  { actual: function () { }, expected: 'inst', result: false, itActual: 'function(){}', itExpected: '"inst"' },
  { actual: new Function('return "hello"'), expected: 'inst', result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '"inst"' },
  { actual: (function () { return arguments; })(), expected: 'inst', result: false, itActual: '(function(){return arguments;})()', itExpected: '"inst"' },
  { actual: () => { }, expected: 'inst', result: false, itActual: '()=>{}', itExpected: '"inst"' },
  { actual: String, expected: 'inst', result: false, itActual: 'String', itExpected: '"inst"' },
  { actual: new String('Hello'), expected: 'inst', result: false, itActual: 'new String("Hello")', itExpected: '"inst"' },
  { actual: new String(''), expected: 'inst', result: false, itActual: 'new String("")', itExpected: '"inst"' },
  { actual: 'Hello', expected: 'inst', result: false, itActual: '"Hello"', itExpected: '"inst"' },
  { actual: `Hello`, expected: 'inst', result: false, itActual: '`Hello`', itExpected: '"inst"' },
  { actual: '', expected: 'inst', result: false, itActual: '""', itExpected: '"inst"' },
  { actual: Number, expected: 'inst', result: false, itActual: 'Number', itExpected: '"inst"' },
  { actual: new Number(10), expected: 'inst', result: false, itActual: 'new Number(10)', itExpected: '"inst"' },
  { actual: new Number(0), expected: 'inst', result: false, itActual: 'new Number(0)', itExpected: '"inst"' },
  { actual: 10, expected: 'inst', result: false, itActual: '10', itExpected: '"inst"' },
  { actual: 0, expected: 'inst', result: false, itActual: '0', itExpected: '"inst"' },
  { actual: Boolean, expected: 'inst', result: false, itActual: 'Boolean', itExpected: '"inst"' },
  { actual: new Boolean(0), expected: 'inst', result: false, itActual: 'new Boolean(0)', itExpected: '"inst"' },
  { actual: false, expected: 'inst', result: false, itActual: 'false', itExpected: '"inst"' },
  { actual: true, expected: 'inst', result: false, itActual: 'true', itExpected: '"inst"' },
  { actual: RegExp, expected: 'inst', result: false, itActual: 'RegExp', itExpected: '"inst"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'inst', result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '"inst"' },
  { actual: /hello/, expected: 'inst', result: false, itActual: '/hello/', itExpected: '"inst"' },
  { actual: isNaN, expected: 'inst', result: false, itActual: 'isNaN', itExpected: '"inst"' },
  { actual: isNaN('hello'), expected: 'inst', result: false, itActual: 'isNaN("hello")', itExpected: '"inst"' },
  { actual: isFinite, expected: 'inst', result: false, itActual: 'isFinite', itExpected: '"inst"' },
  { actual: isFinite(10), expected: 'inst', result: false, itActual: 'isFinite(10)', itExpected: '"inst"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'inst', result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"inst"' },
  { actual: Object, expected: 'inst', result: false, itActual: 'Object', itExpected: '"inst"' },
  { actual: {}, expected: 'inst', result: false, itActual: '{}', itExpected: '"inst"' },
  { actual: Error, expected: 'inst', result: false, itActual: 'Error', itExpected: '"inst"' },
  { actual: TypeError, expected: 'inst', result: false, itActual: 'TypeError', itExpected: '"inst"' },
  { actual: new Error('error'), expected: 'inst', result: false, itActual: 'new Error("error")', itExpected: '"inst"' },
  { actual: new TypeError('error'), expected: 'inst', result: false, itActual: 'new TypeError("error")', itExpected: '"inst"' },
  { actual: undefined, expected: 'inst', result: false, itActual: 'undefined', itExpected: '"inst"' },
  { actual: null, expected: 'inst', result: false, itActual: 'null', itExpected: '"inst"' },
  { actual: Infinity, expected: 'inst', result: false, itActual: 'Infinity', itExpected: '"inst"' },
  { actual: NaN, expected: 'inst', result: false, itActual: 'NaN', itExpected: '"inst"' },
  { actual: JSON, expected: 'inst', result: false, itActual: 'JSON', itExpected: '"inst"' },
  { actual: Promise, expected: 'inst', result: false, itActual: 'Promise', itExpected: '"inst"' },
  { actual: new Promise(() => { }), expected: 'inst', result: false, itActual: 'new Promise(()=>{})', itExpected: '"inst"' },
  { actual: {}.name, expected: 'inst', result: false, itActual: '{}.name', itExpected: '"inst"' },
  { actual: RangeError, expected: 'inst', result: false, itActual: 'RangeError', itExpected: '"inst"' },
  { actual: ReferenceError, expected: 'inst', result: false, itActual: 'ReferenceError', itExpected: '"inst"' },
  { actual: new RangeError('error'), expected: 'inst', result: false, itActual: 'new RangeError("error")', itExpected: '"inst"' },
  { actual: new ReferenceError('error'), expected: 'inst', result: false, itActual: 'new ReferenceError("error")', itExpected: '"inst"' },
  { actual: Name, expected: 'inst', result: false, itActual: 'Name', itExpected: '"inst"' },
  { actual: new Name(), expected: 'inst', result: false, itActual: 'new Name()', itExpected: '"inst"' },
  { actual: new instance(), expected: 'inst', result: false, itActual: 'new instance()', itExpected: '"inst"' },
  { actual: new truthy(), expected: 'inst', result: false, itActual: 'new truthy()', itExpected: '"inst"' },
  { actual: new falsy(), expected: 'inst', result: false, itActual: 'new falsy()', itExpected: '"inst"' },
  { actual: new any(), expected: 'inst', result: false, itActual: 'new any()', itExpected: '"inst"' },
  { actual: new objectable(), expected: 'inst', result: false, itActual: 'new objectable()', itExpected: '"inst"' },

  { actual: Date, expected: 'InStaNce', result: false, itActual: 'Date', itExpected: '"InStaNce"' },
  { actual: new Date(), expected: 'InStaNce', result: false, itActual: 'new Date()', itExpected: '"InStaNce"' },
  { actual: Function, expected: 'InStaNce', result: false, itActual: 'Function', itExpected: '"InStaNce"' },
  { actual: function () { }, expected: 'InStaNce', result: false, itActual: 'function(){}', itExpected: '"InStaNce"' },
  { actual: new Function('return "hello"'), expected: 'InStaNce', result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '"InStaNce"' },
  { actual: (function () { return arguments; })(), expected: 'InStaNce', result: false, itActual: '(function(){return arguments;})()', itExpected: '"InStaNce"' },
  { actual: () => { }, expected: 'InStaNce', result: false, itActual: '()=>{}', itExpected: '"InStaNce"' },
  { actual: String, expected: 'InStaNce', result: false, itActual: 'String', itExpected: '"InStaNce"' },
  { actual: new String('Hello'), expected: 'InStaNce', result: false, itActual: 'new String("Hello")', itExpected: '"InStaNce"' },
  { actual: new String(''), expected: 'InStaNce', result: false, itActual: 'new String("")', itExpected: '"InStaNce"' },
  { actual: 'Hello', expected: 'InStaNce', result: false, itActual: '"Hello"', itExpected: '"InStaNce"' },
  { actual: `Hello`, expected: 'InStaNce', result: false, itActual: '`Hello`', itExpected: '"InStaNce"' },
  { actual: '', expected: 'InStaNce', result: false, itActual: '""', itExpected: '"InStaNce"' },
  { actual: Number, expected: 'InStaNce', result: false, itActual: 'Number', itExpected: '"InStaNce"' },
  { actual: new Number(10), expected: 'InStaNce', result: false, itActual: 'new Number(10)', itExpected: '"InStaNce"' },
  { actual: new Number(0), expected: 'InStaNce', result: false, itActual: 'new Number(0)', itExpected: '"InStaNce"' },
  { actual: 10, expected: 'InStaNce', result: false, itActual: '10', itExpected: '"InStaNce"' },
  { actual: 0, expected: 'InStaNce', result: false, itActual: '0', itExpected: '"InStaNce"' },
  { actual: Boolean, expected: 'InStaNce', result: false, itActual: 'Boolean', itExpected: '"InStaNce"' },
  { actual: new Boolean(0), expected: 'InStaNce', result: false, itActual: 'new Boolean(0)', itExpected: '"InStaNce"' },
  { actual: false, expected: 'InStaNce', result: false, itActual: 'false', itExpected: '"InStaNce"' },
  { actual: true, expected: 'InStaNce', result: false, itActual: 'true', itExpected: '"InStaNce"' },
  { actual: RegExp, expected: 'InStaNce', result: false, itActual: 'RegExp', itExpected: '"InStaNce"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'InStaNce', result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '"InStaNce"' },
  { actual: /hello/, expected: 'InStaNce', result: false, itActual: '/hello/', itExpected: '"InStaNce"' },
  { actual: isNaN, expected: 'InStaNce', result: false, itActual: 'isNaN', itExpected: '"InStaNce"' },
  { actual: isNaN('hello'), expected: 'InStaNce', result: false, itActual: 'isNaN("hello")', itExpected: '"InStaNce"' },
  { actual: isFinite, expected: 'InStaNce', result: false, itActual: 'isFinite', itExpected: '"InStaNce"' },
  { actual: isFinite(10), expected: 'InStaNce', result: false, itActual: 'isFinite(10)', itExpected: '"InStaNce"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'InStaNce', result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"InStaNce"' },
  { actual: Object, expected: 'InStaNce', result: false, itActual: 'Object', itExpected: '"InStaNce"' },
  { actual: {}, expected: 'InStaNce', result: false, itActual: '{}', itExpected: '"InStaNce"' },
  { actual: Error, expected: 'InStaNce', result: false, itActual: 'Error', itExpected: '"InStaNce"' },
  { actual: TypeError, expected: 'InStaNce', result: false, itActual: 'TypeError', itExpected: '"InStaNce"' },
  { actual: new Error('error'), expected: 'InStaNce', result: false, itActual: 'new Error("error")', itExpected: '"InStaNce"' },
  { actual: new TypeError('error'), expected: 'InStaNce', result: false, itActual: 'new TypeError("error")', itExpected: '"InStaNce"' },
  { actual: undefined, expected: 'InStaNce', result: false, itActual: 'undefined', itExpected: '"InStaNce"' },
  { actual: null, expected: 'InStaNce', result: false, itActual: 'null', itExpected: '"InStaNce"' },
  { actual: Infinity, expected: 'InStaNce', result: false, itActual: 'Infinity', itExpected: '"InStaNce"' },
  { actual: NaN, expected: 'InStaNce', result: false, itActual: 'NaN', itExpected: '"InStaNce"' },
  { actual: JSON, expected: 'InStaNce', result: false, itActual: 'JSON', itExpected: '"InStaNce"' },
  { actual: Promise, expected: 'InStaNce', result: false, itActual: 'Promise', itExpected: '"InStaNce"' },
  { actual: new Promise(() => { }), expected: 'InStaNce', result: false, itActual: 'new Promise(()=>{})', itExpected: '"InStaNce"' },
  { actual: {}.name, expected: 'InStaNce', result: false, itActual: '{}.name', itExpected: '"InStaNce"' },
  { actual: RangeError, expected: 'InStaNce', result: false, itActual: 'RangeError', itExpected: '"InStaNce"' },
  { actual: ReferenceError, expected: 'InStaNce', result: false, itActual: 'ReferenceError', itExpected: '"InStaNce"' },
  { actual: new RangeError('error'), expected: 'InStaNce', result: false, itActual: 'new RangeError("error")', itExpected: '"InStaNce"' },
  { actual: new ReferenceError('error'), expected: 'InStaNce', result: false, itActual: 'new ReferenceError("error")', itExpected: '"InStaNce"' },
  { actual: Name, expected: 'InStaNce', result: false, itActual: 'Name', itExpected: '"InStaNce"' },
  { actual: new Name(), expected: 'InStaNce', result: true, itActual: 'new Name()', itExpected: '"InStaNce"' },
  { actual: new instance(), expected: 'InStaNce', result: true, itActual: 'new instance()', itExpected: '"InStaNce"' },
  { actual: new truthy(), expected: 'InStaNce', result: true, itActual: 'new truthy()', itExpected: '"InStaNce"' },
  { actual: new falsy(), expected: 'InStaNce', result: true, itActual: 'new falsy()', itExpected: '"InStaNce"' },
  { actual: new any(), expected: 'InStaNce', result: true, itActual: 'new any()', itExpected: '"InStaNce"' },
  { actual: new objectable(), expected: 'InStaNce', result: true, itActual: 'new objectable()', itExpected: '"InStaNce"' },

  { actual: Date, expected: 'InSt', result: false, itActual: 'Date', itExpected: '"InSt"' },
  { actual: new Date(), expected: 'InSt', result: false, itActual: 'new Date()', itExpected: '"InSt"' },
  { actual: Function, expected: 'InSt', result: false, itActual: 'Function', itExpected: '"InSt"' },
  { actual: function () { }, expected: 'InSt', result: false, itActual: 'function(){}', itExpected: '"InSt"' },
  { actual: new Function('return "hello"'), expected: 'InSt', result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '"InSt"' },
  { actual: (function () { return arguments; })(), expected: 'InSt', result: false, itActual: '(function(){return arguments;})()', itExpected: '"InSt"' },
  { actual: () => { }, expected: 'InSt', result: false, itActual: '()=>{}', itExpected: '"InSt"' },
  { actual: String, expected: 'InSt', result: false, itActual: 'String', itExpected: '"InSt"' },
  { actual: new String('Hello'), expected: 'InSt', result: false, itActual: 'new String("Hello")', itExpected: '"InSt"' },
  { actual: new String(''), expected: 'InSt', result: false, itActual: 'new String("")', itExpected: '"InSt"' },
  { actual: 'Hello', expected: 'InSt', result: false, itActual: '"Hello"', itExpected: '"InSt"' },
  { actual: `Hello`, expected: 'InSt', result: false, itActual: '`Hello`', itExpected: '"InSt"' },
  { actual: '', expected: 'InSt', result: false, itActual: '""', itExpected: '"InSt"' },
  { actual: Number, expected: 'InSt', result: false, itActual: 'Number', itExpected: '"InSt"' },
  { actual: new Number(10), expected: 'InSt', result: false, itActual: 'new Number(10)', itExpected: '"InSt"' },
  { actual: new Number(0), expected: 'InSt', result: false, itActual: 'new Number(0)', itExpected: '"InSt"' },
  { actual: 10, expected: 'InSt', result: false, itActual: '10', itExpected: '"InSt"' },
  { actual: 0, expected: 'InSt', result: false, itActual: '0', itExpected: '"InSt"' },
  { actual: Boolean, expected: 'InSt', result: false, itActual: 'Boolean', itExpected: '"InSt"' },
  { actual: new Boolean(0), expected: 'InSt', result: false, itActual: 'new Boolean(0)', itExpected: '"InSt"' },
  { actual: false, expected: 'InSt', result: false, itActual: 'false', itExpected: '"InSt"' },
  { actual: true, expected: 'InSt', result: false, itActual: 'true', itExpected: '"InSt"' },
  { actual: RegExp, expected: 'InSt', result: false, itActual: 'RegExp', itExpected: '"InSt"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'InSt', result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '"InSt"' },
  { actual: /hello/, expected: 'InSt', result: false, itActual: '/hello/', itExpected: '"InSt"' },
  { actual: isNaN, expected: 'InSt', result: false, itActual: 'isNaN', itExpected: '"InSt"' },
  { actual: isNaN('hello'), expected: 'InSt', result: false, itActual: 'isNaN("hello")', itExpected: '"InSt"' },
  { actual: isFinite, expected: 'InSt', result: false, itActual: 'isFinite', itExpected: '"InSt"' },
  { actual: isFinite(10), expected: 'InSt', result: false, itActual: 'isFinite(10)', itExpected: '"InSt"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'InSt', result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"InSt"' },
  { actual: Object, expected: 'InSt', result: false, itActual: 'Object', itExpected: '"InSt"' },
  { actual: {}, expected: 'InSt', result: false, itActual: '{}', itExpected: '"InSt"' },
  { actual: Error, expected: 'InSt', result: false, itActual: 'Error', itExpected: '"InSt"' },
  { actual: TypeError, expected: 'InSt', result: false, itActual: 'TypeError', itExpected: '"InSt"' },
  { actual: new Error('error'), expected: 'InSt', result: false, itActual: 'new Error("error")', itExpected: '"InSt"' },
  { actual: new TypeError('error'), expected: 'InSt', result: false, itActual: 'new TypeError("error")', itExpected: '"InSt"' },
  { actual: undefined, expected: 'InSt', result: false, itActual: 'undefined', itExpected: '"InSt"' },
  { actual: null, expected: 'InSt', result: false, itActual: 'null', itExpected: '"InSt"' },
  { actual: Infinity, expected: 'InSt', result: false, itActual: 'Infinity', itExpected: '"InSt"' },
  { actual: NaN, expected: 'InSt', result: false, itActual: 'NaN', itExpected: '"InSt"' },
  { actual: JSON, expected: 'InSt', result: false, itActual: 'JSON', itExpected: '"InSt"' },
  { actual: Promise, expected: 'InSt', result: false, itActual: 'Promise', itExpected: '"InSt"' },
  { actual: new Promise(() => { }), expected: 'InSt', result: false, itActual: 'new Promise(()=>{})', itExpected: '"InSt"' },
  { actual: {}.name, expected: 'InSt', result: false, itActual: '{}.name', itExpected: '"InSt"' },
  { actual: RangeError, expected: 'InSt', result: false, itActual: 'RangeError', itExpected: '"InSt"' },
  { actual: ReferenceError, expected: 'InSt', result: false, itActual: 'ReferenceError', itExpected: '"InSt"' },
  { actual: new RangeError('error'), expected: 'InSt', result: false, itActual: 'new RangeError("error")', itExpected: '"InSt"' },
  { actual: new ReferenceError('error'), expected: 'InSt', result: false, itActual: 'new ReferenceError("error")', itExpected: '"InSt"' },
  { actual: Name, expected: 'InSt', result: false, itActual: 'Name', itExpected: '"InSt"' },
  { actual: new Name(), expected: 'InSt', result: false, itActual: 'new Name()', itExpected: '"InSt"' },
  { actual: new instance(), expected: 'InSt', result: false, itActual: 'new instance()', itExpected: '"InSt"' },
  { actual: new truthy(), expected: 'InSt', result: false, itActual: 'new truthy()', itExpected: '"InSt"' },
  { actual: new falsy(), expected: 'InSt', result: false, itActual: 'new falsy()', itExpected: '"InSt"' },
  { actual: new any(), expected: 'InSt', result: false, itActual: 'new any()', itExpected: '"InSt"' },
  { actual: new objectable(), expected: 'InSt', result: false, itActual: 'new objectable()', itExpected: '"InSt"' },

  { actual: Date, expected: 'objectable', result: true, itActual: 'Date', itExpected: '"objectable"' },
  { actual: new Date(), expected: 'objectable', result: true, itActual: 'new Date()', itExpected: '"objectable"' },
  { actual: Function, expected: 'objectable', result: true, itActual: 'Function', itExpected: '"objectable"' },
  { actual: function () { }, expected: 'objectable', result: true, itActual: 'function(){}', itExpected: '"objectable"' },
  { actual: new Function('return "hello"'), expected: 'objectable', result: true, itActual: 'new Function(\'return "hello"\')', itExpected: '"objectable"' },
  { actual: (function () { return arguments; })(), expected: 'objectable', result: true, itActual: '(function(){return arguments;})()', itExpected: '"objectable"' },
  { actual: () => { }, expected: 'objectable', result: true, itActual: '()=>{}', itExpected: '"objectable"' },
  { actual: String, expected: 'objectable', result: true, itActual: 'String', itExpected: '"objectable"' },
  { actual: new String('Hello'), expected: 'objectable', result: true, itActual: 'new String("Hello")', itExpected: '"objectable"' },
  { actual: new String(''), expected: 'objectable', result: true, itActual: 'new String("")', itExpected: '"objectable"' },
  { actual: 'Hello', expected: 'objectable', result: false, itActual: '"Hello"', itExpected: '"objectable"' },
  { actual: `Hello`, expected: 'objectable', result: false, itActual: '`Hello`', itExpected: '"objectable"' },
  { actual: '', expected: 'objectable', result: false, itActual: '""', itExpected: '"objectable"' },
  { actual: Number, expected: 'objectable', result: true, itActual: 'Number', itExpected: '"objectable"' },
  { actual: new Number(10), expected: 'objectable', result: true, itActual: 'new Number(10)', itExpected: '"objectable"' },
  { actual: new Number(0), expected: 'objectable', result: true, itActual: 'new Number(0)', itExpected: '"objectable"' },
  { actual: 10, expected: 'objectable', result: false, itActual: '10', itExpected: '"objectable"' },
  { actual: 0, expected: 'objectable', result: false, itActual: '0', itExpected: '"objectable"' },
  { actual: Boolean, expected: 'objectable', result: true, itActual: 'Boolean', itExpected: '"objectable"' },
  { actual: new Boolean(0), expected: 'objectable', result: true, itActual: 'new Boolean(0)', itExpected: '"objectable"' },
  { actual: false, expected: 'objectable', result: false, itActual: 'false', itExpected: '"objectable"' },
  { actual: true, expected: 'objectable', result: false, itActual: 'true', itExpected: '"objectable"' },
  { actual: RegExp, expected: 'objectable', result: true, itActual: 'RegExp', itExpected: '"objectable"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'objectable', result: true, itActual: 'new RegExp("Hello","gim")', itExpected: '"objectable"' },
  { actual: /hello/, expected: 'objectable', result: true, itActual: '/hello/', itExpected: '"objectable"' },
  { actual: isNaN, expected: 'objectable', result: true, itActual: 'isNaN', itExpected: '"objectable"' },
  { actual: isNaN('hello'), expected: 'objectable', result: false, itActual: 'isNaN("hello")', itExpected: '"objectable"' },
  { actual: isFinite, expected: 'objectable', result: true, itActual: 'isFinite', itExpected: '"objectable"' },
  { actual: isFinite(10), expected: 'objectable', result: false, itActual: 'isFinite(10)', itExpected: '"objectable"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'objectable', result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"objectable"' },
  { actual: Object, expected: 'objectable', result: true, itActual: 'Object', itExpected: '"objectable"' },
  { actual: {}, expected: 'objectable', result: true, itActual: '{}', itExpected: '"objectable"' },
  { actual: Error, expected: 'objectable', result: true, itActual: 'Error', itExpected: '"objectable"' },
  { actual: TypeError, expected: 'objectable', result: true, itActual: 'TypeError', itExpected: '"objectable"' },
  { actual: new Error('error'), expected: 'objectable', result: true, itActual: 'new Error("error")', itExpected: '"objectable"' },
  { actual: new TypeError('error'), expected: 'objectable', result: true, itActual: 'new TypeError("error")', itExpected: '"objectable"' },
  { actual: undefined, expected: 'objectable', result: false, itActual: 'undefined', itExpected: '"objectable"' },
  { actual: null, expected: 'objectable', result: false, itActual: 'null', itExpected: '"objectable"' },
  { actual: Infinity, expected: 'objectable', result: false, itActual: 'Infinity', itExpected: '"objectable"' },
  { actual: NaN, expected: 'objectable', result: false, itActual: 'NaN', itExpected: '"objectable"' },
  { actual: JSON, expected: 'objectable', result: true, itActual: 'JSON', itExpected: '"objectable"' },
  { actual: Promise, expected: 'objectable', result: true, itActual: 'Promise', itExpected: '"objectable"' },
  { actual: new Promise(() => { }), expected: 'objectable', result: true, itActual: 'new Promise(()=>{})', itExpected: '"objectable"' },
  { actual: {}.name, expected: 'objectable', result: false, itActual: '{}.name', itExpected: '"objectable"' },
  { actual: RangeError, expected: 'objectable', result: true, itActual: 'RangeError', itExpected: '"objectable"' },
  { actual: ReferenceError, expected: 'objectable', result: true, itActual: 'ReferenceError', itExpected: '"objectable"' },
  { actual: new RangeError('error'), expected: 'objectable', result: true, itActual: 'new RangeError("error")', itExpected: '"objectable"' },
  { actual: new ReferenceError('error'), expected: 'objectable', result: true, itActual: 'new ReferenceError("error")', itExpected: '"objectable"' },
  { actual: Name, expected: 'objectable', result: true, itActual: 'Name', itExpected: '"objectable"' },
  { actual: new Name(), expected: 'objectable', result: true, itActual: 'new Name()', itExpected: '"objectable"' },
  { actual: new instance(), expected: 'objectable', result: true, itActual: 'new instance()', itExpected: '"objectable"' },
  { actual: new truthy(), expected: 'objectable', result: true, itActual: 'new truthy()', itExpected: '"objectable"' },
  { actual: new falsy(), expected: 'objectable', result: true, itActual: 'new falsy()', itExpected: '"objectable"' },
  { actual: new any(), expected: 'objectable', result: true, itActual: 'new any()', itExpected: '"objectable"' },
  { actual: new objectable(), expected: 'objectable', result: true, itActual: 'new objectable()', itExpected: '"objectable"' },

  { actual: Date, expected: 'obj', result: false, itActual: 'Date', itExpected: '"obj"' },
  { actual: new Date(), expected: 'obj', result: false, itActual: 'new Date()', itExpected: '"obj"' },
  { actual: Function, expected: 'obj', result: false, itActual: 'Function', itExpected: '"obj"' },
  { actual: function () { }, expected: 'obj', result: false, itActual: 'function(){}', itExpected: '"obj"' },
  { actual: new Function('return "hello"'), expected: 'obj', result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '"obj"' },
  { actual: (function () { return arguments; })(), expected: 'obj', result: false, itActual: '(function(){return arguments;})()', itExpected: '"obj"' },
  { actual: () => { }, expected: 'obj', result: false, itActual: '()=>{}', itExpected: '"obj"' },
  { actual: String, expected: 'obj', result: false, itActual: 'String', itExpected: '"obj"' },
  { actual: new String('Hello'), expected: 'obj', result: false, itActual: 'new String("Hello")', itExpected: '"obj"' },
  { actual: new String(''), expected: 'obj', result: false, itActual: 'new String("")', itExpected: '"obj"' },
  { actual: 'Hello', expected: 'obj', result: false, itActual: '"Hello"', itExpected: '"obj"' },
  { actual: `Hello`, expected: 'obj', result: false, itActual: '`Hello`', itExpected: '"obj"' },
  { actual: '', expected: 'obj', result: false, itActual: '""', itExpected: '"obj"' },
  { actual: Number, expected: 'obj', result: false, itActual: 'Number', itExpected: '"obj"' },
  { actual: new Number(10), expected: 'obj', result: false, itActual: 'new Number(10)', itExpected: '"obj"' },
  { actual: new Number(0), expected: 'obj', result: false, itActual: 'new Number(0)', itExpected: '"obj"' },
  { actual: 10, expected: 'obj', result: false, itActual: '10', itExpected: '"obj"' },
  { actual: 0, expected: 'obj', result: false, itActual: '0', itExpected: '"obj"' },
  { actual: Boolean, expected: 'obj', result: false, itActual: 'Boolean', itExpected: '"obj"' },
  { actual: new Boolean(0), expected: 'obj', result: false, itActual: 'new Boolean(0)', itExpected: '"obj"' },
  { actual: false, expected: 'obj', result: false, itActual: 'false', itExpected: '"obj"' },
  { actual: true, expected: 'obj', result: false, itActual: 'true', itExpected: '"obj"' },
  { actual: RegExp, expected: 'obj', result: false, itActual: 'RegExp', itExpected: '"obj"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'obj', result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '"obj"' },
  { actual: /hello/, expected: 'obj', result: false, itActual: '/hello/', itExpected: '"obj"' },
  { actual: isNaN, expected: 'obj', result: false, itActual: 'isNaN', itExpected: '"obj"' },
  { actual: isNaN('hello'), expected: 'obj', result: false, itActual: 'isNaN("hello")', itExpected: '"obj"' },
  { actual: isFinite, expected: 'obj', result: false, itActual: 'isFinite', itExpected: '"obj"' },
  { actual: isFinite(10), expected: 'obj', result: false, itActual: 'isFinite(10)', itExpected: '"obj"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'obj', result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"obj"' },
  { actual: Object, expected: 'obj', result: false, itActual: 'Object', itExpected: '"obj"' },
  { actual: {}, expected: 'obj', result: false, itActual: '{}', itExpected: '"obj"' },
  { actual: Error, expected: 'obj', result: false, itActual: 'Error', itExpected: '"obj"' },
  { actual: TypeError, expected: 'obj', result: false, itActual: 'TypeError', itExpected: '"obj"' },
  { actual: new Error('error'), expected: 'obj', result: false, itActual: 'new Error("error")', itExpected: '"obj"' },
  { actual: new TypeError('error'), expected: 'obj', result: false, itActual: 'new TypeError("error")', itExpected: '"obj"' },
  { actual: undefined, expected: 'obj', result: false, itActual: 'undefined', itExpected: '"obj"' },
  { actual: null, expected: 'obj', result: false, itActual: 'null', itExpected: '"obj"' },
  { actual: Infinity, expected: 'obj', result: false, itActual: 'Infinity', itExpected: '"obj"' },
  { actual: NaN, expected: 'obj', result: false, itActual: 'NaN', itExpected: '"obj"' },
  { actual: JSON, expected: 'obj', result: false, itActual: 'JSON', itExpected: '"obj"' },
  { actual: Promise, expected: 'obj', result: false, itActual: 'Promise', itExpected: '"obj"' },
  { actual: new Promise(() => { }), expected: 'obj', result: false, itActual: 'new Promise(()=>{})', itExpected: '"obj"' },
  { actual: {}.name, expected: 'obj', result: false, itActual: '{}.name', itExpected: '"obj"' },
  { actual: RangeError, expected: 'obj', result: false, itActual: 'RangeError', itExpected: '"obj"' },
  { actual: ReferenceError, expected: 'obj', result: false, itActual: 'ReferenceError', itExpected: '"obj"' },
  { actual: new RangeError('error'), expected: 'obj', result: false, itActual: 'new RangeError("error")', itExpected: '"obj"' },
  { actual: new ReferenceError('error'), expected: 'obj', result: false, itActual: 'new ReferenceError("error")', itExpected: '"obj"' },
  { actual: Name, expected: 'obj', result: false, itActual: 'Name', itExpected: '"obj"' },
  { actual: new Name(), expected: 'obj', result: false, itActual: 'new Name()', itExpected: '"obj"' },
  { actual: new instance(), expected: 'obj', result: false, itActual: 'new instance()', itExpected: '"obj"' },
  { actual: new truthy(), expected: 'obj', result: false, itActual: 'new truthy()', itExpected: '"obj"' },
  { actual: new falsy(), expected: 'obj', result: false, itActual: 'new falsy()', itExpected: '"obj"' },
  { actual: new any(), expected: 'obj', result: false, itActual: 'new any()', itExpected: '"obj"' },
  { actual: new objectable(), expected: 'obj', result: false, itActual: 'new objectable()', itExpected: '"obj"' },

  { actual: Date, expected: 'oBjEcTaBlE', result: true, itActual: 'Date', itExpected: '"oBjEcTaBlE"' },
  { actual: new Date(), expected: 'oBjEcTaBlE', result: true, itActual: 'new Date()', itExpected: '"oBjEcTaBlE"' },
  { actual: Function, expected: 'oBjEcTaBlE', result: true, itActual: 'Function', itExpected: '"oBjEcTaBlE"' },
  { actual: function () { }, expected: 'oBjEcTaBlE', result: true, itActual: 'function(){}', itExpected: '"oBjEcTaBlE"' },
  { actual: new Function('return "hello"'), expected: 'oBjEcTaBlE', result: true, itActual: 'new Function(\'return "hello"\')', itExpected: '"oBjEcTaBlE"' },
  { actual: (function () { return arguments; })(), expected: 'oBjEcTaBlE', result: true, itActual: '(function(){return arguments;})()', itExpected: '"oBjEcTaBlE"' },
  { actual: () => { }, expected: 'oBjEcTaBlE', result: true, itActual: '()=>{}', itExpected: '"oBjEcTaBlE"' },
  { actual: String, expected: 'oBjEcTaBlE', result: true, itActual: 'String', itExpected: '"oBjEcTaBlE"' },
  { actual: new String('Hello'), expected: 'oBjEcTaBlE', result: true, itActual: 'new String("Hello")', itExpected: '"oBjEcTaBlE"' },
  { actual: new String(''), expected: 'oBjEcTaBlE', result: true, itActual: 'new String("")', itExpected: '"oBjEcTaBlE"' },
  { actual: 'Hello', expected: 'oBjEcTaBlE', result: false, itActual: '"Hello"', itExpected: '"oBjEcTaBlE"' },
  { actual: `Hello`, expected: 'oBjEcTaBlE', result: false, itActual: '`Hello`', itExpected: '"oBjEcTaBlE"' },
  { actual: '', expected: 'oBjEcTaBlE', result: false, itActual: '""', itExpected: '"oBjEcTaBlE"' },
  { actual: Number, expected: 'oBjEcTaBlE', result: true, itActual: 'Number', itExpected: '"oBjEcTaBlE"' },
  { actual: new Number(10), expected: 'oBjEcTaBlE', result: true, itActual: 'new Number(10)', itExpected: '"oBjEcTaBlE"' },
  { actual: new Number(0), expected: 'oBjEcTaBlE', result: true, itActual: 'new Number(0)', itExpected: '"oBjEcTaBlE"' },
  { actual: 10, expected: 'oBjEcTaBlE', result: false, itActual: '10', itExpected: '"oBjEcTaBlE"' },
  { actual: 0, expected: 'oBjEcTaBlE', result: false, itActual: '0', itExpected: '"oBjEcTaBlE"' },
  { actual: Boolean, expected: 'oBjEcTaBlE', result: true, itActual: 'Boolean', itExpected: '"oBjEcTaBlE"' },
  { actual: new Boolean(0), expected: 'oBjEcTaBlE', result: true, itActual: 'new Boolean(0)', itExpected: '"oBjEcTaBlE"' },
  { actual: false, expected: 'oBjEcTaBlE', result: false, itActual: 'false', itExpected: '"oBjEcTaBlE"' },
  { actual: true, expected: 'oBjEcTaBlE', result: false, itActual: 'true', itExpected: '"oBjEcTaBlE"' },
  { actual: RegExp, expected: 'oBjEcTaBlE', result: true, itActual: 'RegExp', itExpected: '"oBjEcTaBlE"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'oBjEcTaBlE', result: true, itActual: 'new RegExp("Hello","gim")', itExpected: '"oBjEcTaBlE"' },
  { actual: /hello/, expected: 'oBjEcTaBlE', result: true, itActual: '/hello/', itExpected: '"oBjEcTaBlE"' },
  { actual: isNaN, expected: 'oBjEcTaBlE', result: true, itActual: 'isNaN', itExpected: '"oBjEcTaBlE"' },
  { actual: isNaN('hello'), expected: 'oBjEcTaBlE', result: false, itActual: 'isNaN("hello")', itExpected: '"oBjEcTaBlE"' },
  { actual: isFinite, expected: 'oBjEcTaBlE', result: true, itActual: 'isFinite', itExpected: '"oBjEcTaBlE"' },
  { actual: isFinite(10), expected: 'oBjEcTaBlE', result: false, itActual: 'isFinite(10)', itExpected: '"oBjEcTaBlE"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'oBjEcTaBlE', result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"oBjEcTaBlE"' },
  { actual: Object, expected: 'oBjEcTaBlE', result: true, itActual: 'Object', itExpected: '"oBjEcTaBlE"' },
  { actual: {}, expected: 'oBjEcTaBlE', result: true, itActual: '{}', itExpected: '"oBjEcTaBlE"' },
  { actual: Error, expected: 'oBjEcTaBlE', result: true, itActual: 'Error', itExpected: '"oBjEcTaBlE"' },
  { actual: TypeError, expected: 'oBjEcTaBlE', result: true, itActual: 'TypeError', itExpected: '"oBjEcTaBlE"' },
  { actual: new Error('error'), expected: 'oBjEcTaBlE', result: true, itActual: 'new Error("error")', itExpected: '"oBjEcTaBlE"' },
  { actual: new TypeError('error'), expected: 'oBjEcTaBlE', result: true, itActual: 'new TypeError("error")', itExpected: '"oBjEcTaBlE"' },
  { actual: undefined, expected: 'oBjEcTaBlE', result: false, itActual: 'undefined', itExpected: '"oBjEcTaBlE"' },
  { actual: null, expected: 'oBjEcTaBlE', result: false, itActual: 'null', itExpected: '"oBjEcTaBlE"' },
  { actual: Infinity, expected: 'oBjEcTaBlE', result: false, itActual: 'Infinity', itExpected: '"oBjEcTaBlE"' },
  { actual: NaN, expected: 'oBjEcTaBlE', result: false, itActual: 'NaN', itExpected: '"oBjEcTaBlE"' },
  { actual: JSON, expected: 'oBjEcTaBlE', result: true, itActual: 'JSON', itExpected: '"oBjEcTaBlE"' },
  { actual: Promise, expected: 'oBjEcTaBlE', result: true, itActual: 'Promise', itExpected: '"oBjEcTaBlE"' },
  { actual: new Promise(() => { }), expected: 'oBjEcTaBlE', result: true, itActual: 'new Promise(()=>{})', itExpected: '"oBjEcTaBlE"' },
  { actual: {}.name, expected: 'oBjEcTaBlE', result: false, itActual: '{}.name', itExpected: '"oBjEcTaBlE"' },
  { actual: RangeError, expected: 'oBjEcTaBlE', result: true, itActual: 'RangeError', itExpected: '"oBjEcTaBlE"' },
  { actual: ReferenceError, expected: 'oBjEcTaBlE', result: true, itActual: 'ReferenceError', itExpected: '"oBjEcTaBlE"' },
  { actual: new RangeError('error'), expected: 'oBjEcTaBlE', result: true, itActual: 'new RangeError("error")', itExpected: '"oBjEcTaBlE"' },
  { actual: new ReferenceError('error'), expected: 'oBjEcTaBlE', result: true, itActual: 'new ReferenceError("error")', itExpected: '"oBjEcTaBlE"' },
  { actual: Name, expected: 'oBjEcTaBlE', result: true, itActual: 'Name', itExpected: '"oBjEcTaBlE"' },
  { actual: new Name(), expected: 'oBjEcTaBlE', result: true, itActual: 'new Name()', itExpected: '"oBjEcTaBlE"' },
  { actual: new instance(), expected: 'oBjEcTaBlE', result: true, itActual: 'new instance()', itExpected: '"oBjEcTaBlE"' },
  { actual: new truthy(), expected: 'oBjEcTaBlE', result: true, itActual: 'new truthy()', itExpected: '"oBjEcTaBlE"' },
  { actual: new falsy(), expected: 'oBjEcTaBlE', result: true, itActual: 'new falsy()', itExpected: '"oBjEcTaBlE"' },
  { actual: new any(), expected: 'oBjEcTaBlE', result: true, itActual: 'new any()', itExpected: '"oBjEcTaBlE"' },
  { actual: new objectable(), expected: 'oBjEcTaBlE', result: true, itActual: 'new objectable()', itExpected: '"oBjEcTaBlE"' },

  { actual: Date, expected: 'oBj', result: false, itActual: 'Date', itExpected: '"oBj"' },
  { actual: new Date(), expected: 'oBj', result: false, itActual: 'new Date()', itExpected: '"oBj"' },
  { actual: Function, expected: 'oBj', result: false, itActual: 'Function', itExpected: '"oBj"' },
  { actual: function () { }, expected: 'oBj', result: false, itActual: 'function(){}', itExpected: '"oBj"' },
  { actual: new Function('return "hello"'), expected: 'oBj', result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '"oBj"' },
  { actual: (function () { return arguments; })(), expected: 'oBj', result: false, itActual: '(function(){return arguments;})()', itExpected: '"oBj"' },
  { actual: () => { }, expected: 'oBj', result: false, itActual: '()=>{}', itExpected: '"oBj"' },
  { actual: String, expected: 'oBj', result: false, itActual: 'String', itExpected: '"oBj"' },
  { actual: new String('Hello'), expected: 'oBj', result: false, itActual: 'new String("Hello")', itExpected: '"oBj"' },
  { actual: new String(''), expected: 'oBj', result: false, itActual: 'new String("")', itExpected: '"oBj"' },
  { actual: 'Hello', expected: 'oBj', result: false, itActual: '"Hello"', itExpected: '"oBj"' },
  { actual: `Hello`, expected: 'oBj', result: false, itActual: '`Hello`', itExpected: '"oBj"' },
  { actual: '', expected: 'oBj', result: false, itActual: '""', itExpected: '"oBj"' },
  { actual: Number, expected: 'oBj', result: false, itActual: 'Number', itExpected: '"oBj"' },
  { actual: new Number(10), expected: 'oBj', result: false, itActual: 'new Number(10)', itExpected: '"oBj"' },
  { actual: new Number(0), expected: 'oBj', result: false, itActual: 'new Number(0)', itExpected: '"oBj"' },
  { actual: 10, expected: 'oBj', result: false, itActual: '10', itExpected: '"oBj"' },
  { actual: 0, expected: 'oBj', result: false, itActual: '0', itExpected: '"oBj"' },
  { actual: Boolean, expected: 'oBj', result: false, itActual: 'Boolean', itExpected: '"oBj"' },
  { actual: new Boolean(0), expected: 'oBj', result: false, itActual: 'new Boolean(0)', itExpected: '"oBj"' },
  { actual: false, expected: 'oBj', result: false, itActual: 'false', itExpected: '"oBj"' },
  { actual: true, expected: 'oBj', result: false, itActual: 'true', itExpected: '"oBj"' },
  { actual: RegExp, expected: 'oBj', result: false, itActual: 'RegExp', itExpected: '"oBj"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'oBj', result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '"oBj"' },
  { actual: /hello/, expected: 'oBj', result: false, itActual: '/hello/', itExpected: '"oBj"' },
  { actual: isNaN, expected: 'oBj', result: false, itActual: 'isNaN', itExpected: '"oBj"' },
  { actual: isNaN('hello'), expected: 'oBj', result: false, itActual: 'isNaN("hello")', itExpected: '"oBj"' },
  { actual: isFinite, expected: 'oBj', result: false, itActual: 'isFinite', itExpected: '"oBj"' },
  { actual: isFinite(10), expected: 'oBj', result: false, itActual: 'isFinite(10)', itExpected: '"oBj"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'oBj', result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"oBj"' },
  { actual: Object, expected: 'oBj', result: false, itActual: 'Object', itExpected: '"oBj"' },
  { actual: {}, expected: 'oBj', result: false, itActual: '{}', itExpected: '"oBj"' },
  { actual: Error, expected: 'oBj', result: false, itActual: 'Error', itExpected: '"oBj"' },
  { actual: TypeError, expected: 'oBj', result: false, itActual: 'TypeError', itExpected: '"oBj"' },
  { actual: new Error('error'), expected: 'oBj', result: false, itActual: 'new Error("error")', itExpected: '"oBj"' },
  { actual: new TypeError('error'), expected: 'oBj', result: false, itActual: 'new TypeError("error")', itExpected: '"oBj"' },
  { actual: undefined, expected: 'oBj', result: false, itActual: 'undefined', itExpected: '"oBj"' },
  { actual: null, expected: 'oBj', result: false, itActual: 'null', itExpected: '"oBj"' },
  { actual: Infinity, expected: 'oBj', result: false, itActual: 'Infinity', itExpected: '"oBj"' },
  { actual: NaN, expected: 'oBj', result: false, itActual: 'NaN', itExpected: '"oBj"' },
  { actual: JSON, expected: 'oBj', result: false, itActual: 'JSON', itExpected: '"oBj"' },
  { actual: Promise, expected: 'oBj', result: false, itActual: 'Promise', itExpected: '"oBj"' },
  { actual: new Promise(() => { }), expected: 'oBj', result: false, itActual: 'new Promise(()=>{})', itExpected: '"oBj"' },
  { actual: {}.name, expected: 'oBj', result: false, itActual: '{}.name', itExpected: '"oBj"' },
  { actual: RangeError, expected: 'oBj', result: false, itActual: 'RangeError', itExpected: '"oBj"' },
  { actual: ReferenceError, expected: 'oBj', result: false, itActual: 'ReferenceError', itExpected: '"oBj"' },
  { actual: new RangeError('error'), expected: 'oBj', result: false, itActual: 'new RangeError("error")', itExpected: '"oBj"' },
  { actual: new ReferenceError('error'), expected: 'oBj', result: false, itActual: 'new ReferenceError("error")', itExpected: '"oBj"' },
  { actual: Name, expected: 'oBj', result: false, itActual: 'Name', itExpected: '"oBj"' },
  { actual: new Name(), expected: 'oBj', result: false, itActual: 'new Name()', itExpected: '"oBj"' },
  { actual: new instance(), expected: 'oBj', result: false, itActual: 'new instance()', itExpected: '"oBj"' },
  { actual: new truthy(), expected: 'oBj', result: false, itActual: 'new truthy()', itExpected: '"oBj"' },
  { actual: new falsy(), expected: 'oBj', result: false, itActual: 'new falsy()', itExpected: '"oBj"' },
  { actual: new any(), expected: 'oBj', result: false, itActual: 'new any()', itExpected: '"oBj"' },
  { actual: new objectable(), expected: 'oBj', result: false, itActual: 'new objectable()', itExpected: '"oBj"' },

  { actual: Date, expected: 'null', result: false, itActual: 'Date', itExpected: '"null"' },
  { actual: new Date(), expected: 'null', result: false, itActual: 'new Date()', itExpected: '"null"' },
  { actual: Function, expected: 'null', result: false, itActual: 'Function', itExpected: '"null"' },
  { actual: function () { }, expected: 'null', result: false, itActual: 'function(){}', itExpected: '"null"' },
  { actual: new Function('return "hello"'), expected: 'null', result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '"null"' },
  { actual: (function () { return arguments; })(), expected: 'null', result: false, itActual: '(function(){return arguments;})()', itExpected: '"null"' },
  { actual: () => { }, expected: 'null', result: false, itActual: '()=>{}', itExpected: '"null"' },
  { actual: String, expected: 'null', result: false, itActual: 'String', itExpected: '"null"' },
  { actual: new String('Hello'), expected: 'null', result: false, itActual: 'new String("Hello")', itExpected: '"null"' },
  { actual: new String(''), expected: 'null', result: false, itActual: 'new String("")', itExpected: '"null"' },
  { actual: 'Hello', expected: 'null', result: false, itActual: '"Hello"', itExpected: '"null"' },
  { actual: `Hello`, expected: 'null', result: false, itActual: '`Hello`', itExpected: '"null"' },
  { actual: '', expected: 'null', result: false, itActual: '""', itExpected: '"null"' },
  { actual: Number, expected: 'null', result: false, itActual: 'Number', itExpected: '"null"' },
  { actual: new Number(10), expected: 'null', result: false, itActual: 'new Number(10)', itExpected: '"null"' },
  { actual: new Number(0), expected: 'null', result: false, itActual: 'new Number(0)', itExpected: '"null"' },
  { actual: 10, expected: 'null', result: false, itActual: '10', itExpected: '"null"' },
  { actual: 0, expected: 'null', result: false, itActual: '0', itExpected: '"null"' },
  { actual: Boolean, expected: 'null', result: false, itActual: 'Boolean', itExpected: '"null"' },
  { actual: new Boolean(0), expected: 'null', result: false, itActual: 'new Boolean(0)', itExpected: '"null"' },
  { actual: false, expected: 'null', result: false, itActual: 'false', itExpected: '"null"' },
  { actual: true, expected: 'null', result: false, itActual: 'true', itExpected: '"null"' },
  { actual: RegExp, expected: 'null', result: false, itActual: 'RegExp', itExpected: '"null"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'null', result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '"null"' },
  { actual: /hello/, expected: 'null', result: false, itActual: '/hello/', itExpected: '"null"' },
  { actual: isNaN, expected: 'null', result: false, itActual: 'isNaN', itExpected: '"null"' },
  { actual: isNaN('hello'), expected: 'null', result: false, itActual: 'isNaN("hello")', itExpected: '"null"' },
  { actual: isFinite, expected: 'null', result: false, itActual: 'isFinite', itExpected: '"null"' },
  { actual: isFinite(10), expected: 'null', result: false, itActual: 'isFinite(10)', itExpected: '"null"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'null', result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"null"' },
  { actual: Object, expected: 'null', result: false, itActual: 'Object', itExpected: '"null"' },
  { actual: {}, expected: 'null', result: false, itActual: '{}', itExpected: '"null"' },
  { actual: Error, expected: 'null', result: false, itActual: 'Error', itExpected: '"null"' },
  { actual: TypeError, expected: 'null', result: false, itActual: 'TypeError', itExpected: '"null"' },
  { actual: new Error('error'), expected: 'null', result: false, itActual: 'new Error("error")', itExpected: '"null"' },
  { actual: new TypeError('error'), expected: 'null', result: false, itActual: 'new TypeError("error")', itExpected: '"null"' },
  { actual: undefined, expected: 'null', result: false, itActual: 'undefined', itExpected: '"null"' },
  { actual: null, expected: 'null', result: true, itActual: 'null', itExpected: '"null"' },
  { actual: Infinity, expected: 'null', result: false, itActual: 'Infinity', itExpected: '"null"' },
  { actual: NaN, expected: 'null', result: false, itActual: 'NaN', itExpected: '"null"' },
  { actual: JSON, expected: 'null', result: false, itActual: 'JSON', itExpected: '"null"' },
  { actual: Promise, expected: 'null', result: false, itActual: 'Promise', itExpected: '"null"' },
  { actual: new Promise(() => { }), expected: 'null', result: false, itActual: 'new Promise(()=>{})', itExpected: '"null"' },
  { actual: {}.name, expected: 'null', result: false, itActual: '{}.name', itExpected: '"null"' },
  { actual: RangeError, expected: 'null', result: false, itActual: 'RangeError', itExpected: '"null"' },
  { actual: ReferenceError, expected: 'null', result: false, itActual: 'ReferenceError', itExpected: '"null"' },
  { actual: new RangeError('error'), expected: 'null', result: false, itActual: 'new RangeError("error")', itExpected: '"null"' },
  { actual: new ReferenceError('error'), expected: 'null', result: false, itActual: 'new ReferenceError("error")', itExpected: '"null"' },
  { actual: Name, expected: 'null', result: false, itActual: 'Name', itExpected: '"null"' },
  { actual: new Name(), expected: 'null', result: false, itActual: 'new Name()', itExpected: '"null"' },
  { actual: new instance(), expected: 'null', result: false, itActual: 'new instance()', itExpected: '"null"' },
  { actual: new truthy(), expected: 'null', result: false, itActual: 'new truthy()', itExpected: '"null"' },
  { actual: new falsy(), expected: 'null', result: false, itActual: 'new falsy()', itExpected: '"null"' },
  { actual: new any(), expected: 'null', result: false, itActual: 'new any()', itExpected: '"null"' },
  { actual: new objectable(), expected: 'null', result: false, itActual: 'new objectable()', itExpected: '"null"' },

  { actual: Date, expected: 'nu', result: false, itActual: 'Date', itExpected: '"nu"' },
  { actual: new Date(), expected: 'nu', result: false, itActual: 'new Date()', itExpected: '"nu"' },
  { actual: Function, expected: 'nu', result: false, itActual: 'Function', itExpected: '"nu"' },
  { actual: function () { }, expected: 'nu', result: false, itActual: 'function(){}', itExpected: '"nu"' },
  { actual: new Function('return "hello"'), expected: 'nu', result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '"nu"' },
  { actual: (function () { return arguments; })(), expected: 'nu', result: false, itActual: '(function(){return arguments;})()', itExpected: '"nu"' },
  { actual: () => { }, expected: 'nu', result: false, itActual: '()=>{}', itExpected: '"nu"' },
  { actual: String, expected: 'nu', result: false, itActual: 'String', itExpected: '"nu"' },
  { actual: new String('Hello'), expected: 'nu', result: false, itActual: 'new String("Hello")', itExpected: '"nu"' },
  { actual: new String(''), expected: 'nu', result: false, itActual: 'new String("")', itExpected: '"nu"' },
  { actual: 'Hello', expected: 'nu', result: false, itActual: '"Hello"', itExpected: '"nu"' },
  { actual: `Hello`, expected: 'nu', result: false, itActual: '`Hello`', itExpected: '"nu"' },
  { actual: '', expected: 'nu', result: false, itActual: '""', itExpected: '"nu"' },
  { actual: Number, expected: 'nu', result: false, itActual: 'Number', itExpected: '"nu"' },
  { actual: new Number(10), expected: 'nu', result: false, itActual: 'new Number(10)', itExpected: '"nu"' },
  { actual: new Number(0), expected: 'nu', result: false, itActual: 'new Number(0)', itExpected: '"nu"' },
  { actual: 10, expected: 'nu', result: false, itActual: '10', itExpected: '"nu"' },
  { actual: 0, expected: 'nu', result: false, itActual: '0', itExpected: '"nu"' },
  { actual: Boolean, expected: 'nu', result: false, itActual: 'Boolean', itExpected: '"nu"' },
  { actual: new Boolean(0), expected: 'nu', result: false, itActual: 'new Boolean(0)', itExpected: '"nu"' },
  { actual: false, expected: 'nu', result: false, itActual: 'false', itExpected: '"nu"' },
  { actual: true, expected: 'nu', result: false, itActual: 'true', itExpected: '"nu"' },
  { actual: RegExp, expected: 'nu', result: false, itActual: 'RegExp', itExpected: '"nu"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'nu', result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '"nu"' },
  { actual: /hello/, expected: 'nu', result: false, itActual: '/hello/', itExpected: '"nu"' },
  { actual: isNaN, expected: 'nu', result: false, itActual: 'isNaN', itExpected: '"nu"' },
  { actual: isNaN('hello'), expected: 'nu', result: false, itActual: 'isNaN("hello")', itExpected: '"nu"' },
  { actual: isFinite, expected: 'nu', result: false, itActual: 'isFinite', itExpected: '"nu"' },
  { actual: isFinite(10), expected: 'nu', result: false, itActual: 'isFinite(10)', itExpected: '"nu"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'nu', result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"nu"' },
  { actual: Object, expected: 'nu', result: false, itActual: 'Object', itExpected: '"nu"' },
  { actual: {}, expected: 'nu', result: false, itActual: '{}', itExpected: '"nu"' },
  { actual: Error, expected: 'nu', result: false, itActual: 'Error', itExpected: '"nu"' },
  { actual: TypeError, expected: 'nu', result: false, itActual: 'TypeError', itExpected: '"nu"' },
  { actual: new Error('error'), expected: 'nu', result: false, itActual: 'new Error("error")', itExpected: '"nu"' },
  { actual: new TypeError('error'), expected: 'nu', result: false, itActual: 'new TypeError("error")', itExpected: '"nu"' },
  { actual: undefined, expected: 'nu', result: false, itActual: 'undefined', itExpected: '"nu"' },
  { actual: null, expected: 'nu', result: false, itActual: 'null', itExpected: '"nu"' },
  { actual: Infinity, expected: 'nu', result: false, itActual: 'Infinity', itExpected: '"nu"' },
  { actual: NaN, expected: 'nu', result: false, itActual: 'NaN', itExpected: '"nu"' },
  { actual: JSON, expected: 'nu', result: false, itActual: 'JSON', itExpected: '"nu"' },
  { actual: Promise, expected: 'nu', result: false, itActual: 'Promise', itExpected: '"nu"' },
  { actual: new Promise(() => { }), expected: 'nu', result: false, itActual: 'new Promise(()=>{})', itExpected: '"nu"' },
  { actual: {}.name, expected: 'nu', result: false, itActual: '{}.name', itExpected: '"nu"' },
  { actual: RangeError, expected: 'nu', result: false, itActual: 'RangeError', itExpected: '"nu"' },
  { actual: ReferenceError, expected: 'nu', result: false, itActual: 'ReferenceError', itExpected: '"nu"' },
  { actual: new RangeError('error'), expected: 'nu', result: false, itActual: 'new RangeError("error")', itExpected: '"nu"' },
  { actual: new ReferenceError('error'), expected: 'nu', result: false, itActual: 'new ReferenceError("error")', itExpected: '"nu"' },
  { actual: Name, expected: 'nu', result: false, itActual: 'Name', itExpected: '"nu"' },
  { actual: new Name(), expected: 'nu', result: false, itActual: 'new Name()', itExpected: '"nu"' },
  { actual: new instance(), expected: 'nu', result: false, itActual: 'new instance()', itExpected: '"nu"' },
  { actual: new truthy(), expected: 'nu', result: false, itActual: 'new truthy()', itExpected: '"nu"' },
  { actual: new falsy(), expected: 'nu', result: false, itActual: 'new falsy()', itExpected: '"nu"' },
  { actual: new any(), expected: 'nu', result: false, itActual: 'new any()', itExpected: '"nu"' },
  { actual: new objectable(), expected: 'nu', result: false, itActual: 'new objectable()', itExpected: '"nu"' },

  { actual: Date, expected: 'undefined', result: false, itActual: 'Date', itExpected: '"undefined"' },
  { actual: new Date(), expected: 'undefined', result: false, itActual: 'new Date()', itExpected: '"undefined"' },
  { actual: Function, expected: 'undefined', result: false, itActual: 'Function', itExpected: '"undefined"' },
  { actual: function () { }, expected: 'undefined', result: false, itActual: 'function(){}', itExpected: '"undefined"' },
  { actual: new Function('return "hello"'), expected: 'undefined', result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '"undefined"' },
  { actual: (function () { return arguments; })(), expected: 'undefined', result: false, itActual: '(function(){return arguments;})()', itExpected: '"undefined"' },
  { actual: () => { }, expected: 'undefined', result: false, itActual: '()=>{}', itExpected: '"undefined"' },
  { actual: String, expected: 'undefined', result: false, itActual: 'String', itExpected: '"undefined"' },
  { actual: new String('Hello'), expected: 'undefined', result: false, itActual: 'new String("Hello")', itExpected: '"undefined"' },
  { actual: new String(''), expected: 'undefined', result: false, itActual: 'new String("")', itExpected: '"undefined"' },
  { actual: 'Hello', expected: 'undefined', result: false, itActual: '"Hello"', itExpected: '"undefined"' },
  { actual: `Hello`, expected: 'undefined', result: false, itActual: '`Hello`', itExpected: '"undefined"' },
  { actual: '', expected: 'undefined', result: false, itActual: '""', itExpected: '"undefined"' },
  { actual: Number, expected: 'undefined', result: false, itActual: 'Number', itExpected: '"undefined"' },
  { actual: new Number(10), expected: 'undefined', result: false, itActual: 'new Number(10)', itExpected: '"undefined"' },
  { actual: new Number(0), expected: 'undefined', result: false, itActual: 'new Number(0)', itExpected: '"undefined"' },
  { actual: 10, expected: 'undefined', result: false, itActual: '10', itExpected: '"undefined"' },
  { actual: 0, expected: 'undefined', result: false, itActual: '0', itExpected: '"undefined"' },
  { actual: Boolean, expected: 'undefined', result: false, itActual: 'Boolean', itExpected: '"undefined"' },
  { actual: new Boolean(0), expected: 'undefined', result: false, itActual: 'new Boolean(0)', itExpected: '"undefined"' },
  { actual: false, expected: 'undefined', result: false, itActual: 'false', itExpected: '"undefined"' },
  { actual: true, expected: 'undefined', result: false, itActual: 'true', itExpected: '"undefined"' },
  { actual: RegExp, expected: 'undefined', result: false, itActual: 'RegExp', itExpected: '"undefined"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'undefined', result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '"undefined"' },
  { actual: /hello/, expected: 'undefined', result: false, itActual: '/hello/', itExpected: '"undefined"' },
  { actual: isNaN, expected: 'undefined', result: false, itActual: 'isNaN', itExpected: '"undefined"' },
  { actual: isNaN('hello'), expected: 'undefined', result: false, itActual: 'isNaN("hello")', itExpected: '"undefined"' },
  { actual: isFinite, expected: 'undefined', result: false, itActual: 'isFinite', itExpected: '"undefined"' },
  { actual: isFinite(10), expected: 'undefined', result: false, itActual: 'isFinite(10)', itExpected: '"undefined"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'undefined', result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"undefined"' },
  { actual: Object, expected: 'undefined', result: false, itActual: 'Object', itExpected: '"undefined"' },
  { actual: {}, expected: 'undefined', result: false, itActual: '{}', itExpected: '"undefined"' },
  { actual: Error, expected: 'undefined', result: false, itActual: 'Error', itExpected: '"undefined"' },
  { actual: TypeError, expected: 'undefined', result: false, itActual: 'TypeError', itExpected: '"undefined"' },
  { actual: new Error('error'), expected: 'undefined', result: false, itActual: 'new Error("error")', itExpected: '"undefined"' },
  { actual: new TypeError('error'), expected: 'undefined', result: false, itActual: 'new TypeError("error")', itExpected: '"undefined"' },
  { actual: undefined, expected: 'undefined', result: true, itActual: 'undefined', itExpected: '"undefined"' },
  { actual: null, expected: 'undefined', result: false, itActual: 'null', itExpected: '"undefined"' },
  { actual: Infinity, expected: 'undefined', result: false, itActual: 'Infinity', itExpected: '"undefined"' },
  { actual: NaN, expected: 'undefined', result: false, itActual: 'NaN', itExpected: '"undefined"' },
  { actual: JSON, expected: 'undefined', result: false, itActual: 'JSON', itExpected: '"undefined"' },
  { actual: Promise, expected: 'undefined', result: false, itActual: 'Promise', itExpected: '"undefined"' },
  { actual: new Promise(() => { }), expected: 'undefined', result: false, itActual: 'new Promise(()=>{})', itExpected: '"undefined"' },
  { actual: {}.name, expected: 'undefined', result: true, itActual: '{}.name', itExpected: '"undefined"' },
  { actual: RangeError, expected: 'undefined', result: false, itActual: 'RangeError', itExpected: '"undefined"' },
  { actual: ReferenceError, expected: 'undefined', result: false, itActual: 'ReferenceError', itExpected: '"undefined"' },
  { actual: new RangeError('error'), expected: 'undefined', result: false, itActual: 'new RangeError("error")', itExpected: '"undefined"' },
  { actual: new ReferenceError('error'), expected: 'undefined', result: false, itActual: 'new ReferenceError("error")', itExpected: '"undefined"' },
  { actual: Name, expected: 'undefined', result: false, itActual: 'Name', itExpected: '"undefined"' },
  { actual: new Name(), expected: 'undefined', result: false, itActual: 'new Name()', itExpected: '"undefined"' },
  { actual: new instance(), expected: 'undefined', result: false, itActual: 'new instance()', itExpected: '"undefined"' },
  { actual: new truthy(), expected: 'undefined', result: false, itActual: 'new truthy()', itExpected: '"undefined"' },
  { actual: new falsy(), expected: 'undefined', result: false, itActual: 'new falsy()', itExpected: '"undefined"' },
  { actual: new any(), expected: 'undefined', result: false, itActual: 'new any()', itExpected: '"undefined"' },
  { actual: new objectable(), expected: 'undefined', result: false, itActual: 'new objectable()', itExpected: '"undefined"' },

  { actual: Date, expected: 'und', result: false, itActual: 'Date', itExpected: '"und"' },
  { actual: new Date(), expected: 'und', result: false, itActual: 'new Date()', itExpected: '"und"' },
  { actual: Function, expected: 'und', result: false, itActual: 'Function', itExpected: '"und"' },
  { actual: function () { }, expected: 'und', result: false, itActual: 'function(){}', itExpected: '"und"' },
  { actual: new Function('return "hello"'), expected: 'und', result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '"und"' },
  { actual: (function () { return arguments; })(), expected: 'und', result: false, itActual: '(function(){return arguments;})()', itExpected: '"und"' },
  { actual: () => { }, expected: 'und', result: false, itActual: '()=>{}', itExpected: '"und"' },
  { actual: String, expected: 'und', result: false, itActual: 'String', itExpected: '"und"' },
  { actual: new String('Hello'), expected: 'und', result: false, itActual: 'new String("Hello")', itExpected: '"und"' },
  { actual: new String(''), expected: 'und', result: false, itActual: 'new String("")', itExpected: '"und"' },
  { actual: 'Hello', expected: 'und', result: false, itActual: '"Hello"', itExpected: '"und"' },
  { actual: `Hello`, expected: 'und', result: false, itActual: '`Hello`', itExpected: '"und"' },
  { actual: '', expected: 'und', result: false, itActual: '""', itExpected: '"und"' },
  { actual: Number, expected: 'und', result: false, itActual: 'Number', itExpected: '"und"' },
  { actual: new Number(10), expected: 'und', result: false, itActual: 'new Number(10)', itExpected: '"und"' },
  { actual: new Number(0), expected: 'und', result: false, itActual: 'new Number(0)', itExpected: '"und"' },
  { actual: 10, expected: 'und', result: false, itActual: '10', itExpected: '"und"' },
  { actual: 0, expected: 'und', result: false, itActual: '0', itExpected: '"und"' },
  { actual: Boolean, expected: 'und', result: false, itActual: 'Boolean', itExpected: '"und"' },
  { actual: new Boolean(0), expected: 'und', result: false, itActual: 'new Boolean(0)', itExpected: '"und"' },
  { actual: false, expected: 'und', result: false, itActual: 'false', itExpected: '"und"' },
  { actual: true, expected: 'und', result: false, itActual: 'true', itExpected: '"und"' },
  { actual: RegExp, expected: 'und', result: false, itActual: 'RegExp', itExpected: '"und"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'und', result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '"und"' },
  { actual: /hello/, expected: 'und', result: false, itActual: '/hello/', itExpected: '"und"' },
  { actual: isNaN, expected: 'und', result: false, itActual: 'isNaN', itExpected: '"und"' },
  { actual: isNaN('hello'), expected: 'und', result: false, itActual: 'isNaN("hello")', itExpected: '"und"' },
  { actual: isFinite, expected: 'und', result: false, itActual: 'isFinite', itExpected: '"und"' },
  { actual: isFinite(10), expected: 'und', result: false, itActual: 'isFinite(10)', itExpected: '"und"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'und', result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"und"' },
  { actual: Object, expected: 'und', result: false, itActual: 'Object', itExpected: '"und"' },
  { actual: {}, expected: 'und', result: false, itActual: '{}', itExpected: '"und"' },
  { actual: Error, expected: 'und', result: false, itActual: 'Error', itExpected: '"und"' },
  { actual: TypeError, expected: 'und', result: false, itActual: 'TypeError', itExpected: '"und"' },
  { actual: new Error('error'), expected: 'und', result: false, itActual: 'new Error("error")', itExpected: '"und"' },
  { actual: new TypeError('error'), expected: 'und', result: false, itActual: 'new TypeError("error")', itExpected: '"und"' },
  { actual: undefined, expected: 'und', result: false, itActual: 'undefined', itExpected: '"und"' },
  { actual: null, expected: 'und', result: false, itActual: 'null', itExpected: '"und"' },
  { actual: Infinity, expected: 'und', result: false, itActual: 'Infinity', itExpected: '"und"' },
  { actual: NaN, expected: 'und', result: false, itActual: 'NaN', itExpected: '"und"' },
  { actual: JSON, expected: 'und', result: false, itActual: 'JSON', itExpected: '"und"' },
  { actual: Promise, expected: 'und', result: false, itActual: 'Promise', itExpected: '"und"' },
  { actual: new Promise(() => { }), expected: 'und', result: false, itActual: 'new Promise(()=>{})', itExpected: '"und"' },
  { actual: {}.name, expected: 'und', result: false, itActual: '{}.name', itExpected: '"und"' },
  { actual: RangeError, expected: 'und', result: false, itActual: 'RangeError', itExpected: '"und"' },
  { actual: ReferenceError, expected: 'und', result: false, itActual: 'ReferenceError', itExpected: '"und"' },
  { actual: new RangeError('error'), expected: 'und', result: false, itActual: 'new RangeError("error")', itExpected: '"und"' },
  { actual: new ReferenceError('error'), expected: 'und', result: false, itActual: 'new ReferenceError("error")', itExpected: '"und"' },
  { actual: Name, expected: 'und', result: false, itActual: 'Name', itExpected: '"und"' },
  { actual: new Name(), expected: 'und', result: false, itActual: 'new Name()', itExpected: '"und"' },
  { actual: new instance(), expected: 'und', result: false, itActual: 'new instance()', itExpected: '"und"' },
  { actual: new truthy(), expected: 'und', result: false, itActual: 'new truthy()', itExpected: '"und"' },
  { actual: new falsy(), expected: 'und', result: false, itActual: 'new falsy()', itExpected: '"und"' },
  { actual: new any(), expected: 'und', result: false, itActual: 'new any()', itExpected: '"und"' },
  { actual: new objectable(), expected: 'und', result: false, itActual: 'new objectable()', itExpected: '"und"' },

  { actual: Date, expected: 'date|array', result: false, itActual: 'Date', itExpected: '"date|array"' },
  { actual: new Date(), expected: 'function|array', result: false, itActual: 'new Date()', itExpected: '"function|array"' },
  { actual: Function, expected: 'object|array', result: false, itActual: 'Function', itExpected: '"object|array"' },
  { actual: function () { }, expected: 'object|array', result: false, itActual: 'function(){}', itExpected: '"object|array"' },
  { actual: new Function('return "hello"'), expected: 'object|array', result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '"object|array"' },
  { actual: (function () { return arguments; })(), expected: 'function|array', result: false, itActual: '(function(){return arguments;})()', itExpected: '"function|array"' },
  { actual: () => { }, expected: 'object|array', result: false, itActual: '()=>{}', itExpected: '"object|array"' },
  { actual: String, expected: 'object|array', result: false, itActual: 'String', itExpected: '"object|array"' },
  { actual: new String('Hello'), expected: 'object|array', result: false, itActual: 'new String("Hello")', itExpected: '"object|array"' },
  { actual: new String(''), expected: 'object|array', result: false, itActual: 'new String("")', itExpected: '"object|array"' },
  { actual: 'Hello', expected: 'object|array', result: false, itActual: '"Hello"', itExpected: '"object|array"' },
  { actual: `Hello`, expected: 'object|array', result: false, itActual: '`Hello`', itExpected: '"object|array"' },
  { actual: '', expected: 'object|array', result: false, itActual: '""', itExpected: '"object|array"' },
  { actual: Number, expected: 'number|array', result: false, itActual: 'Number', itExpected: '"number|array"' },
  { actual: new Number(10), expected: 'object|array', result: false, itActual: 'new Number(10)', itExpected: '"object|array"' },
  { actual: new Number(0), expected: 'object|array', result: false, itActual: 'new Number(0)', itExpected: '"object|array"' },
  { actual: 10, expected: 'object|array', result: false, itActual: '10', itExpected: '"object|array"' },
  { actual: 0, expected: 'object|array', result: false, itActual: '0', itExpected: '"object|array"' },
  { actual: Boolean, expected: 'boolean|array', result: false, itActual: 'Boolean', itExpected: '"boolean|array"' },
  { actual: new Boolean(0), expected: 'object|array', result: false, itActual: 'new Boolean(0)', itExpected: '"object|array"' },
  { actual: false, expected: 'object|array', result: false, itActual: 'false', itExpected: '"object|array"' },
  { actual: true, expected: 'object|array', result: false, itActual: 'true', itExpected: '"object|array"' },
  { actual: RegExp, expected: 'object|array', result: false, itActual: 'RegExp', itExpected: '"object|array"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'object|array', result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '"object|array"' },
  { actual: /hello/, expected: 'object|array', result: false, itActual: '/hello/', itExpected: '"object|array"' },
  { actual: isNaN, expected: 'object|array', result: false, itActual: 'isNaN', itExpected: '"object|array"' },
  { actual: isNaN('hello'), expected: 'object|array', result: false, itActual: 'isNaN("hello")', itExpected: '"object|array"' },
  { actual: isFinite, expected: 'object|array', result: false, itActual: 'isFinite', itExpected: '"object|array"' },
  { actual: isFinite(10), expected: 'object|array', result: false, itActual: 'isFinite(10)', itExpected: '"object|array"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'object|array', result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"object|array"' },
  { actual: Object, expected: 'object|array', result: false, itActual: 'Object', itExpected: '"object|array"' },
  { actual: {}, expected: 'function|array', result: false, itActual: '{}', itExpected: '"function|array"' },
  { actual: Error, expected: 'object|array', result: false, itActual: 'Error', itExpected: '"object|array"' },
  { actual: TypeError, expected: 'object|array', result: false, itActual: 'TypeError', itExpected: '"object|array"' },
  { actual: new Error('error'), expected: 'object|array', result: false, itActual: 'new Error("error")', itExpected: '"object|array"' },
  { actual: new TypeError('error'), expected: 'object|array|error', result: false, itActual: 'new TypeError("error")', itExpected: '"object|array|error"' },
  { actual: undefined, expected: 'object|array', result: false, itActual: 'undefined', itExpected: '"object|array"' },
  { actual: null, expected: 'object|array', result: false, itActual: 'null', itExpected: '"object|array"' },
  { actual: Infinity, expected: 'object|array', result: false, itActual: 'Infinity', itExpected: '"object|array"' },
  { actual: NaN, expected: 'object|array', result: false, itActual: 'NaN', itExpected: '"object|array"' },
  { actual: JSON, expected: 'function|array', result: false, itActual: 'JSON', itExpected: '"function|array"' },
  { actual: Promise, expected: 'object|array', result: false, itActual: 'Promise', itExpected: '"object|array"' },
  { actual: new Promise(() => { }), expected: 'object|array', result: false, itActual: 'new Promise(()=>{})', itExpected: '"object|array"' },
  { actual: {}.name, expected: 'object|array', result: false, itActual: '{}.name', itExpected: '"object|array"' },
  { actual: RangeError, expected: 'object|array', result: false, itActual: 'RangeError', itExpected: '"object|array"' },
  { actual: ReferenceError, expected: 'object|array', result: false, itActual: 'ReferenceError', itExpected: '"object|array"' },
  { actual: new RangeError('error'), expected: 'object|array|error', result: false, itActual: 'new RangeError("error")', itExpected: '"object|array|error"' },
  { actual: new ReferenceError('error'), expected: 'object|array|error', result: false, itActual: 'new ReferenceError("error")', itExpected: '"object|array|error"' },
  { actual: Name, expected: 'object|array', result: false, itActual: 'Name', itExpected: '"object|array"' },
  { actual: new Name(), expected: 'object|array', result: false, itActual: 'new Name()', itExpected: '"object|array"' },
  { actual: new instance(), expected: 'object|array', result: false, itActual: 'new instance()', itExpected: '"object|array"' },
  { actual: new truthy(), expected: 'object|array', result: false, itActual: 'new truthy()', itExpected: '"object|array"' },
  { actual: new falsy(), expected: 'object|array', result: false, itActual: 'new falsy()', itExpected: '"object|array"' },
  { actual: new any(), expected: 'object|array', result: false, itActual: 'new any()', itExpected: '"object|array"' },
  { actual: new objectable(), expected: 'object|array', result: false, itActual: 'new objectable()', itExpected: '"object|array"' },

  { actual: Date, expected: 'array|any', result: true, itActual: 'Date', itExpected: '"array|any"' },
  { actual: new Date(), expected: 'array|any', result: true, itActual: 'new Date()', itExpected: '"array|any"' },
  { actual: Function, expected: 'array|any', result: true, itActual: 'Function', itExpected: '"array|any"' },
  { actual: function () { }, expected: 'array|any', result: true, itActual: 'function(){}', itExpected: '"array|any"' },
  { actual: new Function('return "hello"'), expected: 'array|any', result: true, itActual: 'new Function(\'return "hello"\')', itExpected: '"array|any"' },
  { actual: (function () { return arguments; })(), expected: 'function|any', result: true, itActual: '(function(){return arguments;})()', itExpected: '"function|any"' },
  { actual: () => { }, expected: 'array|any', result: true, itActual: '()=>{}', itExpected: '"array|any"' },
  { actual: String, expected: 'array|any', result: true, itActual: 'String', itExpected: '"array|any"' },
  { actual: new String('Hello'), expected: 'array|any', result: true, itActual: 'new String("Hello")', itExpected: '"array|any"' },
  { actual: new String(''), expected: 'array|any', result: true, itActual: 'new String("")', itExpected: '"array|any"' },
  { actual: 'Hello', expected: 'array|any', result: true, itActual: '"Hello"', itExpected: '"array|any"' },
  { actual: `Hello`, expected: 'array|any', result: true, itActual: '`Hello`', itExpected: '"array|any"' },
  { actual: '', expected: 'array|any', result: true, itActual: '""', itExpected: '"array|any"' },
  { actual: Number, expected: 'array|any', result: true, itActual: 'Number', itExpected: '"array|any"' },
  { actual: new Number(10), expected: 'array|any', result: true, itActual: 'new Number(10)', itExpected: '"array|any"' },
  { actual: new Number(0), expected: 'array|any', result: true, itActual: 'new Number(0)', itExpected: '"array|any"' },
  { actual: 10, expected: 'array|any', result: true, itActual: '10', itExpected: '"array|any"' },
  { actual: 0, expected: 'array|any', result: true, itActual: '0', itExpected: '"array|any"' },
  { actual: Boolean, expected: 'array|any', result: true, itActual: 'Boolean', itExpected: '"array|any"' },
  { actual: new Boolean(0), expected: 'object|any', result: true, itActual: 'new Boolean(0)', itExpected: '"object|any"' },
  { actual: false, expected: 'object|any', result: true, itActual: 'false', itExpected: '"object|any"' },
  { actual: true, expected: 'object|any', result: true, itActual: 'true', itExpected: '"object|any"' },
  { actual: RegExp, expected: 'object|any', result: true, itActual: 'RegExp', itExpected: '"object|any"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'object|any', result: true, itActual: 'new RegExp("Hello","gim")', itExpected: '"object|any"' },
  { actual: /hello/, expected: 'object|any', result: true, itActual: '/hello/', itExpected: '"object|any"' },
  { actual: isNaN, expected: 'object|any', result: true, itActual: 'isNaN', itExpected: '"object|any"' },
  { actual: isNaN('hello'), expected: 'object|any', result: true, itActual: 'isNaN("hello")', itExpected: '"object|any"' },
  { actual: isFinite, expected: 'object|any', result: true, itActual: 'isFinite', itExpected: '"object|any"' },
  { actual: isFinite(10), expected: 'object|any', result: true, itActual: 'isFinite(10)', itExpected: '"object|any"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'object|any', result: true, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"object|any"' },
  { actual: Object, expected: 'object|any', result: true, itActual: 'Object', itExpected: '"object|any"' },
  { actual: {}, expected: 'function|any', result: true, itActual: '{}', itExpected: '"function|any"' },
  { actual: Error, expected: 'object|any', result: true, itActual: 'Error', itExpected: '"object|any"' },
  { actual: TypeError, expected: 'object|any', result: true, itActual: 'TypeError', itExpected: '"object|any"' },
  { actual: new Error('error'), expected: 'object|any', result: true, itActual: 'new Error("error")', itExpected: '"object|any"' },
  { actual: new TypeError('error'), expected: 'object|any', result: true, itActual: 'new TypeError("error")', itExpected: '"object|any"' },
  { actual: undefined, expected: 'object|any', result: true, itActual: 'undefined', itExpected: '"object|any"' },
  { actual: null, expected: 'object|any', result: true, itActual: 'null', itExpected: '"object|any"' },
  { actual: Infinity, expected: 'object|any', result: true, itActual: 'Infinity', itExpected: '"object|any"' },
  { actual: NaN, expected: 'object|any', result: true, itActual: 'NaN', itExpected: '"object|any"' },
  { actual: JSON, expected: 'function|any', result: true, itActual: 'JSON', itExpected: '"function|any"' },
  { actual: Promise, expected: 'object|any', result: true, itActual: 'Promise', itExpected: '"object|any"' },
  { actual: new Promise(() => { }), expected: 'object|any', result: true, itActual: 'new Promise(()=>{})', itExpected: '"object|any"' },
  { actual: {}.name, expected: 'object|any', result: true, itActual: '{}.name', itExpected: '"object|any"' },
  { actual: RangeError, expected: 'object|any', result: true, itActual: 'RangeError', itExpected: '"object|any"' },
  { actual: ReferenceError, expected: 'object|any', result: true, itActual: 'ReferenceError', itExpected: '"object|any"' },
  { actual: new RangeError('error'), expected: 'object|any', result: true, itActual: 'new RangeError("error")', itExpected: '"object|any"' },
  { actual: new ReferenceError('error'), expected: 'object|any', result: true, itActual: 'new ReferenceError("error")', itExpected: '"object|any"' },
  { actual: Name, expected: 'object|any', result: true, itActual: 'Name', itExpected: '"object|any"' },
  { actual: new Name(), expected: 'object|any', result: true, itActual: 'new Name()', itExpected: '"object|any"' },
  { actual: new instance(), expected: 'object|any', result: true, itActual: 'new instance()', itExpected: '"object|any"' },
  { actual: new truthy(), expected: 'object|any', result: true, itActual: 'new truthy()', itExpected: '"object|any"' },
  { actual: new falsy(), expected: 'object|any', result: true, itActual: 'new falsy()', itExpected: '"object|any"' },
  { actual: new any(), expected: 'object|any', result: true, itActual: 'new any()', itExpected: '"object|any"' },
  { actual: new objectable(), expected: 'object|any', result: true, itActual: 'new objectable()', itExpected: '"object|any"' },

  { actual: Date, expected: 'array|string|number|object|function', result: true, itActual: 'Date', itExpected: '"array|string|number|object|function"' },
  { actual: new Date(), expected: 'array|string|number|object|date', result: true, itActual: 'new Date()', itExpected: '"array|string|number|object|date"' },
  { actual: Function, expected: 'array|string|number|object|function', result: true, itActual: 'Function', itExpected: '"array|string|number|object|function"' },
  { actual: function () { }, expected: 'array|string|number|object|function', result: true, itActual: 'function(){}', itExpected: '"array|string|number|object|function"' },
  { actual: new Function('return "hello"'), expected: 'array|string|number|object|function', result: true, itActual: 'new Function(\'return "hello"\')', itExpected: '"array|string|number|object|function"' },
  { actual: (function () { return arguments; })(), expected: 'array|string|number|function|arguments', result: true, itActual: '(function(){return arguments;})()', itExpected: '"array|string|number|function|arguments"' },
  { actual: () => { }, expected: 'array|string|number|object|function', result: true, itActual: '()=>{}', itExpected: '"array|string|number|object|function"' },
  { actual: String, expected: 'array|string|number|object|function', result: true, itActual: 'String', itExpected: '"array|string|number|object|function"' },
  { actual: new String('Hello'), expected: 'array|date|number|object|string', result: true, itActual: 'new String("Hello")', itExpected: '"array|date|number|object|string"' },
  { actual: new String(''), expected: 'array|date|number|object|string', result: true, itActual: 'new String("")', itExpected: '"array|date|number|object|string"' },
  { actual: 'Hello', expected: 'array|date|number|object|string', result: true, itActual: '"Hello"', itExpected: '"array|date|number|object|string"' },
  { actual: `Hello`, expected: 'array|date|number|object|string', result: true, itActual: '`Hello`', itExpected: '"array|date|number|object|string"' },
  { actual: '', expected: 'array|date|number|object|string', result: true, itActual: '""', itExpected: '"array|date|number|object|string"' },
  { actual: Number, expected: 'array|date|number|object|function', result: true, itActual: 'Number', itExpected: '"array|date|number|object|function"' },
  { actual: new Number(10), expected: 'array|date|object|function|number', result: true, itActual: 'new Number(10)', itExpected: '"array|date|object|function|number"' },
  { actual: new Number(0), expected: 'array|date|object|function|number', result: true, itActual: 'new Number(0)', itExpected: '"array|date|object|function|number"' },
  { actual: 10, expected: 'array|date|object|function|number', result: true, itActual: '10', itExpected: '"array|date|object|function|number"' },
  { actual: 0, expected: 'array|date|object|function|number', result: true, itActual: '0', itExpected: '"array|date|object|function|number"' },
  { actual: Boolean, expected: 'array|string|number|object|function', result: true, itActual: 'Boolean', itExpected: '"array|string|number|object|function"' },
  { actual: new Boolean(0), expected: 'array|string|number|object|boolean', result: true, itActual: 'new Boolean(0)', itExpected: '"array|string|number|object|boolean"' },
  { actual: false, expected: 'array|string|number|object|boolean', result: true, itActual: 'false', itExpected: '"array|string|number|object|boolean"' },
  { actual: true, expected: 'array|string|number|object|boolean', result: true, itActual: 'true', itExpected: '"array|string|number|object|boolean"' },
  { actual: RegExp, expected: 'array|string|number|object|function', result: true, itActual: 'RegExp', itExpected: '"array|string|number|object|boolean"' },
  { actual: new RegExp('Hello', 'gim'), expected: 'array|string|number|object|regexp', result: true, itActual: 'new RegExp("Hello","gim")', itExpected: '"array|string|number|object|regexp"' },
  { actual: /hello/, expected: 'array|string|number|object|regexp', result: true, itActual: '/hello/', itExpected: '"array|string|number|object|regexp"' },
  { actual: isNaN, expected: 'array|string|number|object|function', result: true, itActual: 'isNaN', itExpected: '"array|string|number|object|function"' },
  { actual: isNaN('hello'), expected: 'array|string|number|object|boolean', result: true, itActual: 'isNaN("hello")', itExpected: '"array|string|number|object|boolean"' },
  { actual: isFinite, expected: 'array|string|number|object|function', result: true, itActual: 'isFinite', itExpected: '"array|string|number|object|function"' },
  { actual: isFinite(10), expected: 'array|string|number|object|boolean', result: true, itActual: 'isFinite(10)', itExpected: '"array|string|number|object|boolean"' },
  { actual: Number.NEGATIVE_INFINITY, expected: 'array|string|boolean|object|number', result: true, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '"array|string|boolean|object|number"' },
  { actual: Object, expected: 'array|string|boolean|object|function', result: true, itActual: 'Object', itExpected: '"array|string|boolean|object|function"' },
  { actual: {}, expected: 'array|string|boolean|function|object', result: true, itActual: '{}', itExpected: '"array|string|boolean|function|object"' },
  { actual: Error, expected: 'array|string|boolean|object|function', result: true, itActual: 'Error', itExpected: '"array|string|boolean|object|function"' },
  { actual: TypeError, expected: 'array|string|boolean|object|function', result: true, itActual: 'TypeError', itExpected: '"array|string|boolean|object|function"' },
  { actual: new Error('error'), expected: 'array|string|boolean|object|error', result: true, itActual: 'new Error("error")', itExpected: '"array|string|boolean|object|error"' },
  { actual: new TypeError('error'), expected: 'array|string|boolean|object|error|typeerror', result: true, itActual: 'new TypeError("error")', itExpected: '"array|string|boolean|object|error|typeerror"' },
  { actual: undefined, expected: 'array|string|boolean|object|undefined', result: true, itActual: 'undefined', itExpected: '"array|string|boolean|object|undefined"' },
  { actual: null, expected: 'array|string|boolean|object|null', result: true, itActual: 'null', itExpected: '"array|string|boolean|object|null"' },
  { actual: Infinity, expected: 'array|string|boolean|object|number', result: true, itActual: 'Infinity', itExpected: '"array|string|boolean|object|number"' },
  { actual: NaN, expected: 'array|string|boolean|object|number', result: true, itActual: 'NaN', itExpected: '"array|string|boolean|object|number"' },
  { actual: JSON, expected: 'array|string|boolean|function|object', result: true, itActual: 'JSON', itExpected: '"array|string|boolean|function|object"' },
  { actual: Promise, expected: 'array|string|boolean|object|function', result: true, itActual: 'Promise', itExpected: '"array|string|boolean|object|function"' },
  { actual: new Promise(() => { }), expected: 'array|string|boolean|object|promise', result: true, itActual: 'new Promise(()=>{})', itExpected: '"array|string|boolean|object|promise"' },
  { actual: {}.name, expected: 'array|string|boolean|object|undefined', result: true, itActual: '{}.name', itExpected: '"array|string|boolean|object|undefined"' },
  { actual: RangeError, expected: 'array|string|boolean|object|function', result: true, itActual: 'RangeError', itExpected: '"array|string|boolean|object|function"' },
  { actual: ReferenceError, expected: 'array|string|boolean|object|function', result: true, itActual: 'ReferenceError', itExpected: '"array|string|boolean|object|function"' },
  { actual: new RangeError('error'), expected: 'array|string|boolean|object|error|rangeerror', result: true, itActual: 'new RangeError("error")', itExpected: '"array|string|boolean|object|error|rangeerror"' },
  { actual: new ReferenceError('error'), expected: 'array|string|boolean|object|error|referenceerror', result: true, itActual: 'new ReferenceError("error")', itExpected: '"array|string|boolean|object|error|referenceerror"' },
  { actual: Name, expected: 'array|string|boolean|object|function', result: true, itActual: 'Name', itExpected: '"array|string|boolean|object|function"' },
  { actual: new Name(), expected: 'array|string|boolean|object|name', result: true, itActual: 'new Name()', itExpected: '"array|string|boolean|object|name"' },
  { actual: new instance(), expected: 'array|string|boolean|object|instance', result: true, itActual: 'new instance()', itExpected: '"array|string|boolean|object|instance"' },
  { actual: new truthy(), expected: 'array|string|boolean|object|truthy', result: true, itActual: 'new truthy()', itExpected: '"array|string|boolean|object|truthy"' },
  { actual: new falsy(), expected: 'array|string|boolean|object|falsy', result: true, itActual: 'new falsy()', itExpected: '"array|string|boolean|object|falsy"' },
  { actual: new any(), expected: 'array|string|boolean|object|any', result: true, itActual: 'new any()', itExpected: '"array|string|boolean|object|any"' },
  { actual: new objectable(), expected: 'array|string|boolean|object|objectable', result: true, itActual: 'new objectable()', itExpected: '"array|string|boolean|object|objectable"' },

  { actual: Date, expected: /Fun/, result: true, itActual: 'Date', itExpected: '/Fun/' },
  { actual: new Date(), expected: /Dat/, result: true, itActual: 'new Date()', itExpected: '/Dat/' },
  { actual: Function, expected: /Fun/, result: true, itActual: 'Function', itExpected: '/Fun/' },
  { actual: function () { }, expected: /Fun/, result: true, itActual: 'function(){}', itExpected: '/Fun/' },
  { actual: new Function('return "hello"'), expected: /Fun/, result: true, itActual: 'new Function(\'return "hello"\')', itExpected: '/Fun/' },
  { actual: (function () { return arguments; })(), expected: /arg/, result: false, itActual: '(function(){return arguments;})()', itExpected: '/arg/' },
  { actual: (function () { return arguments; })(), expected: /ARG/, result: false, itActual: '(function(){return arguments;})()', itExpected: '/arg/' },
  { actual: (function () { return arguments; })(), expected: /ARG/i, result: false, itActual: '(function(){return arguments;})()', itExpected: '/arg/' },
  { actual: (function () { return arguments; })(), expected: /Obj/, result: true, itActual: '(function(){return arguments;})()', itExpected: '/Obj/' },
  { actual: () => { }, expected: /Fun/, result: true, itActual: '()=>{}', itExpected: '/Fun/' },
  { actual: String, expected: /Fun/, result: true, itActual: 'String', itExpected: '/Fun/' },
  { actual: new String('Hello'), expected: /Str/, result: true, itActual: 'new String("Hello")', itExpected: '/Str/' },
  { actual: new String(''), expected: /Str/, result: true, itActual: 'new String("")', itExpected: '/Str/' },
  { actual: 'Hello', expected: /Str/, result: true, itActual: '"Hello"', itExpected: '/Str/' },
  { actual: `Hello`, expected: /Str/, result: true, itActual: '`Hello`', itExpected: '/Str/' },
  { actual: '', expected: /Str/, result: true, itActual: '""', itExpected: '/Str/' },
  { actual: Number, expected: /Fun/, result: true, itActual: 'Number', itExpected: '/Fun/' },
  { actual: new Number(10), expected: /Num/, result: true, itActual: 'new Number(10)', itExpected: '/Num/' },
  { actual: new Number(0), expected: /Num/, result: true, itActual: 'new Number(0)', itExpected: '/Num/' },
  { actual: 10, expected: /Num/, result: true, itActual: '10', itExpected: '/Num/' },
  { actual: 0, expected: /Num/, result: true, itActual: '0', itExpected: '/Num/' },
  { actual: Boolean, expected: /Fun/, result: true, itActual: 'Boolean', itExpected: '/Fun/' },
  { actual: new Boolean(0), expected: /Boo/, result: true, itActual: 'new Boolean(0)', itExpected: '/Boo/' },
  { actual: false, expected: /Boo/, result: true, itActual: 'false', itExpected: '/Boo/' },
  { actual: true, expected: /Boo/, result: true, itActual: 'true', itExpected: '/Boo/' },
  { actual: RegExp, expected: /Fun/, result: true, itActual: 'RegExp', itExpected: '/Fun/' },
  { actual: new RegExp('Hello', 'gim'), expected: /Reg/, result: true, itActual: 'new RegExp("Hello","gim")', itExpected: '/Reg/' },
  { actual: /hello/, expected: /Reg/, result: true, itActual: '/hello/', itExpected: '/Reg/' },
  { actual: isNaN, expected: /Fun/, result: true, itActual: 'isNaN', itExpected: '/Fun/' },
  { actual: isNaN('hello'), expected: /Boo/, result: true, itActual: 'isNaN("hello")', itExpected: '/Boo/' },
  { actual: isFinite, expected: /Fun/, result: true, itActual: 'isFinite', itExpected: '/Fun/' },
  { actual: isFinite(10), expected: /Boo/, result: true, itActual: 'isFinite(10)', itExpected: '/Boo/' },
  { actual: Number.NEGATIVE_INFINITY, expected: /Num/, result: true, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/Num/' },
  { actual: Object, expected: /Fun/, result: true, itActual: 'Object', itExpected: '/Fun/' },
  { actual: {}, expected: /Obj/, result: true, itActual: '{}', itExpected: '/Obj/' },
  { actual: Error, expected: /Fun/, result: true, itActual: 'Error', itExpected: '/Fun/' },
  { actual: TypeError, expected: /Fun/, result: true, itActual: 'TypeError', itExpected: '/Fun/' },
  { actual: new Error('error'), expected: /Err/, result: true, itActual: 'new Error("error")', itExpected: '/Err/' },
  { actual: new TypeError('error'), expected: /Err/, result: true, itActual: 'new TypeError("error")', itExpected: '/Err/' },
  { actual: new TypeError('error'), expected: /TypeErr/, result: true, itActual: 'new TypeError("error")', itExpected: '/TypeErr/' },
  { actual: new TypeError('error'), expected: /Type/, result: true, itActual: 'new TypeError("error")', itExpected: '/Type/' },
  { actual: undefined, expected: /und/, result: true, itActual: 'undefined', itExpected: '/und/' },
  { actual: null, expected: /nu/, result: true, itActual: 'null', itExpected: '/nu/' },
  { actual: Infinity, expected: /Num/, result: true, itActual: 'Infinity', itExpected: '/Num/' },
  { actual: NaN, expected: /Num/, result: true, itActual: 'NaN', itExpected: '/Num/' },
  { actual: JSON, expected: /Obj/, result: true, itActual: 'JSON', itExpected: '/Obj/' },
  { actual: Promise, expected: /Fun/, result: true, itActual: 'Promise', itExpected: '/Fun/' },
  { actual: new Promise(() => { }), expected: /Pro/, result: true, itActual: 'new Promise(()=>{})', itExpected: '/Pro/' },
  { actual: {}.name, expected: /und/, result: true, itActual: '{}.name', itExpected: '/und/' },
  { actual: RangeError, expected: /Fun/, result: true, itActual: 'RangeError', itExpected: '/Fun/' },
  { actual: ReferenceError, expected: /Fun/, result: true, itActual: 'ReferenceError', itExpected: '/Fun/' },
  { actual: new RangeError('error'), expected: /Err/, result: true, itActual: 'new RangeError("error")', itExpected: '/Err/' },
  { actual: new RangeError('error'), expected: /RangeErr/, result: true, itActual: 'new RangeError("error")', itExpected: '/RangeErr/' },
  { actual: new RangeError('error'), expected: /Range/, result: true, itActual: 'new RangeError("error")', itExpected: '/Range/' },
  { actual: new ReferenceError('error'), expected: /Err/, result: true, itActual: 'new ReferenceError("error")', itExpected: '/Err/' },
  { actual: new ReferenceError('error'), expected: /ReferenceErr/, result: true, itActual: 'new ReferenceError("error")', itExpected: '/ReferenceErr/' },
  { actual: new ReferenceError('error'), expected: /Ref/, result: true, itActual: 'new ReferenceError("error")', itExpected: '/Ref/' },
  { actual: Name, expected: /Fun/, result: true, itActual: 'Name', itExpected: '/Fun/' },
  { actual: new Name(), expected: /Nam/, result: true, itActual: 'new Name()', itExpected: '/Nam/' },
  { actual: new instance(), expected: /inst/, result: true, itActual: 'new instance()', itExpected: '/inst/' },
  { actual: new truthy(), expected: /tru/, result: true, itActual: 'new truthy()', itExpected: '/tru/' },
  { actual: new falsy(), expected: /fal/, result: true, itActual: 'new falsy()', itExpected: '/fal/' },
  { actual: new any(), expected: /an/, result: true, itActual: 'new any()', itExpected: '/an/' },
  { actual: new objectable(), expected: /obj/, result: true, itActual: 'new objectable()', itExpected: '/obj/' },

  { actual: Date, expected: /abc/i, result: false, itActual: 'Date', itExpected: '/abc/i' },
  { actual: new Date(), expected: /abc/i, result: false, itActual: 'new Date()', itExpected: '/abc/i' },
  { actual: Function, expected: /abc/i, result: false, itActual: 'Function', itExpected: '/abc/i' },
  { actual: function () { }, expected: /abc/i, result: false, itActual: 'function(){}', itExpected: '/abc/i' },
  { actual: new Function('return "hello"'), expected: /abc/i, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/abc/i' },
  { actual: (function () { return arguments; })(), expected: /abc/i, result: false, itActual: '(function(){return arguments;})()', itExpected: '/abc/i' },
  { actual: () => { }, expected: /abc/i, result: false, itActual: '()=>{}', itExpected: '/abc/i' },
  { actual: String, expected: /abc/i, result: false, itActual: 'String', itExpected: '/abc/i' },
  { actual: new String('Hello'), expected: /abc/i, result: false, itActual: 'new String("Hello")', itExpected: '/abc/i' },
  { actual: new String(''), expected: /abc/i, result: false, itActual: 'new String("")', itExpected: '/abc/i' },
  { actual: 'Hello', expected: /abc/i, result: false, itActual: '"Hello"', itExpected: '/abc/i' },
  { actual: `Hello`, expected: /abc/i, result: false, itActual: '`Hello`', itExpected: '/abc/i' },
  { actual: '', expected: /abc/i, result: false, itActual: '""', itExpected: '/abc/i' },
  { actual: Number, expected: /abc/i, result: false, itActual: 'Number', itExpected: '/abc/i' },
  { actual: new Number(10), expected: /abc/i, result: false, itActual: 'new Number(10)', itExpected: '/abc/i' },
  { actual: new Number(0), expected: /abc/i, result: false, itActual: 'new Number(0)', itExpected: '/abc/i' },
  { actual: 10, expected: /abc/i, result: false, itActual: '10', itExpected: '/abc/i' },
  { actual: 0, expected: /abc/i, result: false, itActual: '0', itExpected: '/abc/i' },
  { actual: Boolean, expected: /abc/i, result: false, itActual: 'Boolean', itExpected: '/abc/i' },
  { actual: new Boolean(0), expected: /abc/i, result: false, itActual: 'new Boolean(0)', itExpected: '/abc/i' },
  { actual: false, expected: /abc/i, result: false, itActual: 'false', itExpected: '/abc/i' },
  { actual: true, expected: /abc/i, result: false, itActual: 'true', itExpected: '/abc/i' },
  { actual: RegExp, expected: /abc/i, result: false, itActual: 'RegExp', itExpected: '/abc/i' },
  { actual: new RegExp('Hello', 'gim'), expected: /abc/i, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/abc/i' },
  { actual: /hello/, expected: /abc/i, result: false, itActual: '/hello/', itExpected: '/abc/i' },
  { actual: isNaN, expected: /abc/i, result: false, itActual: 'isNaN', itExpected: '/abc/i' },
  { actual: isNaN('hello'), expected: /abc/i, result: false, itActual: 'isNaN("hello")', itExpected: '/abc/i' },
  { actual: isFinite, expected: /abc/i, result: false, itActual: 'isFinite', itExpected: '/abc/i' },
  { actual: isFinite(10), expected: /abc/i, result: false, itActual: 'isFinite(10)', itExpected: '/abc/i' },
  { actual: Number.NEGATIVE_INFINITY, expected: /abc/i, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/abc/i' },
  { actual: Object, expected: /abc/i, result: false, itActual: 'Object', itExpected: '/abc/i' },
  { actual: {}, expected: /abc/i, result: false, itActual: '{}', itExpected: '/abc/i' },
  { actual: Error, expected: /abc/i, result: false, itActual: 'Error', itExpected: '/abc/i' },
  { actual: TypeError, expected: /abc/i, result: false, itActual: 'TypeError', itExpected: '/abc/i' },
  { actual: new Error('error'), expected: /abc/i, result: false, itActual: 'new Error("error")', itExpected: '/abc/i' },
  { actual: new TypeError('error'), expected: /abc/i, result: false, itActual: 'new TypeError("error")', itExpected: '/abc/i' },
  { actual: undefined, expected: /abc/i, result: false, itActual: 'undefined', itExpected: '/abc/i' },
  { actual: null, expected: /abc/i, result: false, itActual: 'null', itExpected: '/abc/i' },
  { actual: Infinity, expected: /abc/i, result: false, itActual: 'Infinity', itExpected: '/abc/i' },
  { actual: NaN, expected: /abc/i, result: false, itActual: 'NaN', itExpected: '/abc/i' },
  { actual: JSON, expected: /abc/i, result: false, itActual: 'JSON', itExpected: '/abc/i' },
  { actual: Promise, expected: /abc/i, result: false, itActual: 'Promise', itExpected: '/abc/i' },
  { actual: new Promise(() => { }), expected: /abc/i, result: false, itActual: 'new Promise(()=>{})', itExpected: '/abc/i' },
  { actual: {}.name, expected: /abc/i, result: false, itActual: '{}.name', itExpected: '/abc/i' },
  { actual: RangeError, expected: /abc/i, result: false, itActual: 'RangeError', itExpected: '/abc/i' },
  { actual: ReferenceError, expected: /abc/i, result: false, itActual: 'ReferenceError', itExpected: '/abc/i' },
  { actual: new RangeError('error'), expected: /abc/i, result: false, itActual: 'new RangeError("error")', itExpected: '/abc/i' },
  { actual: new ReferenceError('error'), expected: /abc/i, result: false, itActual: 'new ReferenceError("error")', itExpected: '/abc/i' },
  { actual: Name, expected: /abc/i, result: false, itActual: 'Name', itExpected: '/abc/i' },
  { actual: new Name(), expected: /abc/i, result: false, itActual: 'new Name()', itExpected: '/abc/i' },
  { actual: new instance(), expected: /abc/i, result: false, itActual: 'new instance()', itExpected: '/abc/i' },
  { actual: new truthy(), expected: /abc/i, result: false, itActual: 'new truthy()', itExpected: '/abc/i' },
  { actual: new falsy(), expected: /abc/i, result: false, itActual: 'new falsy()', itExpected: '/abc/i' },
  { actual: new any(), expected: /abc/i, result: false, itActual: 'new any()', itExpected: '/abc/i' },
  { actual: new objectable(), expected: /abc/i, result: false, itActual: 'new objectable()', itExpected: '/abc/i' },

  { actual: Date, expected: /^Function$/, result: true, itActual: 'Date', itExpected: '/^Function$/' },
  { actual: new Date(), expected: /^Date$/, result: true, itActual: 'new Date()', itExpected: '/^Date$/' },
  { actual: Function, expected: /^Function$/, result: true, itActual: 'Function', itExpected: '/^Function$/' },
  { actual: function () { }, expected: /^Function$/, result: true, itActual: 'function(){}', itExpected: '/^Function$/' },
  { actual: new Function('return "hello"'), expected: /^Function$/, result: true, itActual: 'new Function(\'return "hello"\')', itExpected: '/^Function$/' },
  { actual: (function () { return arguments; })(), expected: /^arguments$/, result: true, itActual: '(function(){return arguments;})()', itExpected: '/^arguments$/' },
  { actual: (function () { return arguments; })(), expected: /arguments/, result: true, itActual: '(function(){return arguments;})()', itExpected: '/^arguments$/' },
  { actual: (function () { return arguments; })(), expected: /Arguments/i, result: true, itActual: '(function(){return arguments;})()', itExpected: '/^arguments$/' },
  { actual: (function () { return arguments; })(), expected: /ARGUMENTS/i, result: true, itActual: '(function(){return arguments;})()', itExpected: '/^arguments$/' },
  { actual: (function () { return arguments; })(), expected: /^Object$/, result: true, itActual: '(function(){return arguments;})()', itExpected: '/^Object$/' },
  { actual: () => { }, expected: /^Function$/, result: true, itActual: '()=>{}', itExpected: '/^Function$/' },
  { actual: String, expected: /^Function$/, result: true, itActual: 'String', itExpected: '/^Function$/' },
  { actual: new String('Hello'), expected: /^String$/, result: true, itActual: 'new String("Hello")', itExpected: '/^String$/' },
  { actual: new String(''), expected: /^String$/, result: true, itActual: 'new String("")', itExpected: '/^String$/' },
  { actual: 'Hello', expected: /^String$/, result: true, itActual: '"Hello"', itExpected: '/^String$/' },
  { actual: `Hello`, expected: /^String$/, result: true, itActual: '`Hello`', itExpected: '/^String$/' },
  { actual: '', expected: /^String$/, result: true, itActual: '""', itExpected: '/^String$/' },
  { actual: Number, expected: /^Function$/, result: true, itActual: 'Number', itExpected: '/^Function$/' },
  { actual: new Number(10), expected: /^Number$/, result: true, itActual: 'new Number(10)', itExpected: '/^Number$/' },
  { actual: new Number(0), expected: /^Number$/, result: true, itActual: 'new Number(0)', itExpected: '/^Number$/' },
  { actual: 10, expected: /^Number$/, result: true, itActual: '10', itExpected: '/^Number$/' },
  { actual: 0, expected: /^Number$/, result: true, itActual: '0', itExpected: '/^Number$/' },
  { actual: Boolean, expected: /^Function$/, result: true, itActual: 'Boolean', itExpected: '/^Function$/' },
  { actual: new Boolean(0), expected: /^Boolean$/, result: true, itActual: 'new Boolean(0)', itExpected: '/^Boolean$/' },
  { actual: false, expected: /^Boolean$/, result: true, itActual: 'false', itExpected: '/^Boolean$/' },
  { actual: true, expected: /^Boolean$/, result: true, itActual: 'true', itExpected: '/^Boolean$/' },
  { actual: RegExp, expected: /^Function$/, result: true, itActual: 'RegExp', itExpected: '/^Function$/' },
  { actual: new RegExp('Hello', 'gim'), expected: /^RegExp$/, result: true, itActual: 'new RegExp("Hello","gim")', itExpected: '/^RegExp$/' },
  { actual: /hello/, expected: /^RegExp$/, result: true, itActual: '/hello/', itExpected: '/^RegExp$/' },
  { actual: isNaN, expected: /^Function$/, result: true, itActual: 'isNaN', itExpected: '/^Function$/' },
  { actual: isNaN('hello'), expected: /^Boolean$/, result: true, itActual: 'isNaN("hello")', itExpected: '/^Boolean$/' },
  { actual: isFinite, expected: /^Function$/, result: true, itActual: 'isFinite', itExpected: '/^Function$/' },
  { actual: isFinite(10), expected: /^Boolean$/, result: true, itActual: 'isFinite(10)', itExpected: '/^Boolean$/' },
  { actual: Number.NEGATIVE_INFINITY, expected: /^Number$/, result: true, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/^Number$/' },
  { actual: Object, expected: /^Function$/, result: true, itActual: 'Object', itExpected: '/^Function$/' },
  { actual: {}, expected: /^Object$/, result: true, itActual: '{}', itExpected: '/^Object$/' },
  { actual: Error, expected: /^Function$/, result: true, itActual: 'Error', itExpected: '/^Function$/' },
  { actual: TypeError, expected: /^Function$/, result: true, itActual: 'TypeError', itExpected: '/^Function$/' },
  { actual: new Error('error'), expected: /^Error$/, result: true, itActual: 'new Error("error")', itExpected: '/^Error$/' },
  { actual: new Error('error'), expected: /^(Type)?Error$/, result: true, itActual: 'new Error("error")', itExpected: '/^(Type)?Error$/' },
  { actual: new TypeError('error'), expected: /^Error$/, result: false, itActual: 'new TypeError("error")', itExpected: '/^Error$/' },
  { actual: new TypeError('error'), expected: /^TypeError$/, result: true, itActual: 'new TypeError("error")', itExpected: '/^TypeError$/' },
  { actual: undefined, expected: /^undefined$/, result: true, itActual: 'undefined', itExpected: '/^undefined$/' },
  { actual: null, expected: /^null$/, result: true, itActual: 'null', itExpected: '/^null$/' },
  { actual: Infinity, expected: /^Number$/, result: true, itActual: 'Infinity', itExpected: '/^Number$/' },
  { actual: NaN, expected: /^Number$/, result: true, itActual: 'NaN', itExpected: '/^Number$/' },
  { actual: JSON, expected: /^Object$/, result: true, itActual: 'JSON', itExpected: '/^Object$/' },
  { actual: Promise, expected: /^Function$/, result: true, itActual: 'Promise', itExpected: '/^Function$/' },
  { actual: new Promise(() => { }), expected: /^Promise$/, result: true, itActual: 'new Promise(()=>{})', itExpected: '/^Promise$/' },
  { actual: {}.name, expected: /^undefined$/, result: true, itActual: '{}.name', itExpected: '/^undefined$/' },
  { actual: RangeError, expected: /^Function$/, result: true, itActual: 'RangeError', itExpected: '/^Function$/' },
  { actual: ReferenceError, expected: /^Function$/, result: true, itActual: 'ReferenceError', itExpected: '/^Function$/' },
  { actual: new RangeError('error'), expected: /^Error$/, result: false, itActual: 'new RangeError("error")', itExpected: '/^Error$/' },
  { actual: new RangeError('error'), expected: /^RangeError$/, result: true, itActual: 'new RangeError("error")', itExpected: '/^RangeError$/' },
  { actual: new ReferenceError('error'), expected: /^Error$/, result: false, itActual: 'new ReferenceError("error")', itExpected: '/^Error$/' },
  { actual: new ReferenceError('error'), expected: /^ReferenceError$/, result: true, itActual: 'new ReferenceError("error")', itExpected: '/^ReferenceError$/' },
  { actual: Name, expected: /^Function$/, result: true, itActual: 'Name', itExpected: '/^Function$/' },
  { actual: new Name(), expected: /^Name$/, result: true, itActual: 'new Name()', itExpected: '/^Name$/' },
  { actual: new instance(), expected: /^instance$/, result: true, itActual: 'new instance()', itExpected: '/^instance$/' },
  { actual: new truthy(), expected: /^truthy$/, result: true, itActual: 'new truthy()', itExpected: '/^truthy$/' },
  { actual: new falsy(), expected: /^falsy$/, result: true, itActual: 'new falsy()', itExpected: '/^falsy$/' },
  { actual: new any(), expected: /^any$/, result: true, itActual: 'new any()', itExpected: '/^any$/' },
  { actual: new objectable(), expected: /^objectable$/, result: true, itActual: 'new objectable()', itExpected: '/^objectable$/' },

  { actual: Date, expected: /function/, result: false, itActual: 'Date', itExpected: '/function/' },
  { actual: new Date(), expected: /date/, result: false, itActual: 'new Date()', itExpected: '/date/' },
  { actual: Function, expected: /function/, result: false, itActual: 'Function', itExpected: '/function/' },
  { actual: function () { }, expected: /function/, result: false, itActual: 'function(){}', itExpected: '/function/' },
  { actual: new Function('return "hello"'), expected: /function/, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/function/' },
  { actual: (function () { return arguments; })(), expected: /arGuMeNtS/, result: false, itActual: '(function(){return arguments;})()', itExpected: '/arGuMeNtS/' },
  { actual: (function () { return arguments; })(), expected: /Arguments/, result: false, itActual: '(function(){return arguments;})()', itExpected: '/arGuMeNtS/' },
  { actual: (function () { return arguments; })(), expected: /object/, result: false, itActual: '(function(){return arguments;})()', itExpected: '/object/' },
  { actual: () => { }, expected: /function/, result: false, itActual: '()=>{}', itExpected: '/function/' },
  { actual: String, expected: /function/, result: false, itActual: 'String', itExpected: '/function/' },
  { actual: new String('Hello'), expected: /string/, result: false, itActual: 'new String("Hello")', itExpected: '/string/' },
  { actual: new String(''), expected: /string/, result: false, itActual: 'new String("")', itExpected: '/string/' },
  { actual: 'Hello', expected: /string/, result: false, itActual: '"Hello"', itExpected: '/string/' },
  { actual: `Hello`, expected: /string/, result: false, itActual: '`Hello`', itExpected: '/string/' },
  { actual: '', expected: /string/, result: false, itActual: '""', itExpected: '/string/' },
  { actual: Number, expected: /function/, result: false, itActual: 'Number', itExpected: '/function/' },
  { actual: new Number(10), expected: /number/, result: false, itActual: 'new Number(10)', itExpected: '/number/' },
  { actual: new Number(0), expected: /number/, result: false, itActual: 'new Number(0)', itExpected: '/number/' },
  { actual: 10, expected: /number/, result: false, itActual: '10', itExpected: '/number/' },
  { actual: 0, expected: /number/, result: false, itActual: '0', itExpected: '/number/' },
  { actual: Boolean, expected: /function/, result: false, itActual: 'Boolean', itExpected: '/function/' },
  { actual: new Boolean(0), expected: /boolean/, result: false, itActual: 'new Boolean(0)', itExpected: '/boolean/' },
  { actual: false, expected: /boolean/, result: false, itActual: 'false', itExpected: '/boolean/' },
  { actual: true, expected: /boolean/, result: false, itActual: 'true', itExpected: '/boolean/' },
  { actual: RegExp, expected: /function/, result: false, itActual: 'RegExp', itExpected: '/function/' },
  { actual: new RegExp('Hello', 'gim'), expected: /regexp/, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/regexp/' },
  { actual: /hello/, expected: /regexp/, result: false, itActual: '/hello/', itExpected: '/regexp/' },
  { actual: isNaN, expected: /function/, result: false, itActual: 'isNaN', itExpected: '/function/' },
  { actual: isNaN('hello'), expected: /boolean/, result: false, itActual: 'isNaN("hello")', itExpected: '/boolean/' },
  { actual: isFinite, expected: /function/, result: false, itActual: 'isFinite', itExpected: '/function/' },
  { actual: isFinite(10), expected: /boolean/, result: false, itActual: 'isFinite(10)', itExpected: '/boolean/' },
  { actual: Number.NEGATIVE_INFINITY, expected: /number/, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/number/' },
  { actual: Object, expected: /function/, result: false, itActual: 'Object', itExpected: '/function/' },
  { actual: {}, expected: /object/, result: false, itActual: '{}', itExpected: '/object/' },
  { actual: Error, expected: /function/, result: false, itActual: 'Error', itExpected: '/function/' },
  { actual: TypeError, expected: /function/, result: false, itActual: 'TypeError', itExpected: '/function/' },
  { actual: new Error('error'), expected: /error/, result: false, itActual: 'new Error("error")', itExpected: '/error/' },
  { actual: new TypeError('error'), expected: /error/, result: false, itActual: 'new TypeError("error")', itExpected: '/error/' },
  { actual: new TypeError('error'), expected: /typeerror/, result: false, itActual: 'new TypeError("error")', itExpected: '/typeerror/' },
  { actual: new TypeError('error'), expected: /type/, result: false, itActual: 'new TypeError("error")', itExpected: '/type/' },
  { actual: undefined, expected: /UNDEFINED/, result: false, itActual: 'undefined', itExpected: '/UNDEFINED/' },
  { actual: null, expected: /NULL/, result: false, itActual: 'null', itExpected: '/NULL/' },
  { actual: Infinity, expected: /number/, result: false, itActual: 'Infinity', itExpected: '/number/' },
  { actual: NaN, expected: /number/, result: false, itActual: 'NaN', itExpected: '/number/' },
  { actual: JSON, expected: /object/, result: false, itActual: 'JSON', itExpected: '/object/' },
  { actual: Promise, expected: /function/, result: false, itActual: 'Promise', itExpected: '/function/' },
  { actual: new Promise(() => { }), expected: /promise/, result: false, itActual: 'new Promise(()=>{})', itExpected: '/promise/' },
  { actual: {}.name, expected: /UNDEFINED/, result: false, itActual: '{}.name', itExpected: '/UNDEFINED/' },
  { actual: RangeError, expected: /function/, result: false, itActual: 'RangeError', itExpected: '/function/' },
  { actual: ReferenceError, expected: /function/, result: false, itActual: 'ReferenceError', itExpected: '/function/' },
  { actual: new RangeError('error'), expected: /error/, result: false, itActual: 'new RangeError("error")', itExpected: '/error/' },
  { actual: new RangeError('error'), expected: /rangeerror/, result: false, itActual: 'new RangeError("error")', itExpected: '/rangeerror/' },
  { actual: new RangeError('error'), expected: /range/, result: false, itActual: 'new RangeError("error")', itExpected: '/range/' },
  { actual: new ReferenceError('error'), expected: /error/, result: false, itActual: 'new ReferenceError("error")', itExpected: '/error/' },
  { actual: new ReferenceError('error'), expected: /referenceerror/, result: false, itActual: 'new ReferenceError("error")', itExpected: '/referenceerror/' },
  { actual: new ReferenceError('error'), expected: /reference/, result: false, itActual: 'new ReferenceError("error")', itExpected: '/reference/' },
  { actual: Name, expected: /function/, result: false, itActual: 'Name', itExpected: '/function/' },
  { actual: new Name(), expected: /name/, result: false, itActual: 'new Name()', itExpected: '/name/' },
  { actual: new instance(), expected: /iNsTaNcE/, result: false, itActual: 'new instance()', itExpected: '/iNsTaNcE/' },
  { actual: new truthy(), expected: /tRuThY/, result: false, itActual: 'new truthy()', itExpected: '/tRuThY/' },
  { actual: new falsy(), expected: /fAlSy/, result: false, itActual: 'new falsy()', itExpected: '/fAlSy/' },
  { actual: new any(), expected: /aNy/, result: false, itActual: 'new any()', itExpected: '/aNy/' },
  { actual: new objectable(), expected: /oBjEcTaBlE/, result: false, itActual: 'new objectable()', itExpected: '/oBjEcTaBlE/' },

  { actual: Date, expected: /function/i, result: true, itActual: 'Date', itExpected: '/function/i' },
  { actual: new Date(), expected: /date/i, result: true, itActual: 'new Date()', itExpected: '/date/i' },
  { actual: Function, expected: /function/i, result: true, itActual: 'Function', itExpected: '/function/i' },
  { actual: function () { }, expected: /function/i, result: true, itActual: 'function(){}', itExpected: '/function/i' },
  { actual: new Function('return "hello"'), expected: /function/i, result: true, itActual: 'new Function(\'return "hello"\')', itExpected: '/function/i' },
  { actual: (function () { return arguments; })(), expected: /arGuMeNtS/i, result: true, itActual: '(function(){return arguments;})()', itExpected: '/arGuMeNtS/i' },
  { actual: (function () { return arguments; })(), expected: /object/i, result: true, itActual: '(function(){return arguments;})()', itExpected: '/object/i' },
  { actual: () => { }, expected: /function/i, result: true, itActual: '()=>{}', itExpected: '/function/i' },
  { actual: String, expected: /function/i, result: true, itActual: 'String', itExpected: '/function/i' },
  { actual: new String('Hello'), expected: /string/i, result: true, itActual: 'new String("Hello")', itExpected: '/string/i' },
  { actual: new String(''), expected: /string/i, result: true, itActual: 'new String("")', itExpected: '/string/i' },
  { actual: 'Hello', expected: /string/i, result: true, itActual: '"Hello"', itExpected: '/string/i' },
  { actual: `Hello`, expected: /string/i, result: true, itActual: '`Hello`', itExpected: '/string/i' },
  { actual: '', expected: /string/i, result: true, itActual: '""', itExpected: '/string/i' },
  { actual: Number, expected: /function/i, result: true, itActual: 'Number', itExpected: '/function/i' },
  { actual: new Number(10), expected: /number/i, result: true, itActual: 'new Number(10)', itExpected: '/number/i' },
  { actual: new Number(0), expected: /number/i, result: true, itActual: 'new Number(0)', itExpected: '/number/i' },
  { actual: 10, expected: /number/i, result: true, itActual: '10', itExpected: '/number/i' },
  { actual: 0, expected: /number/i, result: true, itActual: '0', itExpected: '/number/i' },
  { actual: Boolean, expected: /function/i, result: true, itActual: 'Boolean', itExpected: '/function/i' },
  { actual: new Boolean(0), expected: /boolean/i, result: true, itActual: 'new Boolean(0)', itExpected: '/boolean/i' },
  { actual: false, expected: /boolean/i, result: true, itActual: 'false', itExpected: '/boolean/i' },
  { actual: true, expected: /boolean/i, result: true, itActual: 'true', itExpected: '/boolean/i' },
  { actual: RegExp, expected: /function/i, result: true, itActual: 'RegExp', itExpected: '/function/i' },
  { actual: new RegExp('Hello', 'gim'), expected: /regexp/i, result: true, itActual: 'new RegExp("Hello","gim")', itExpected: '/regexp/i' },
  { actual: /hello/, expected: /regexp/i, result: true, itActual: '/hello/', itExpected: '/regexp/i' },
  { actual: isNaN, expected: /function/i, result: true, itActual: 'isNaN', itExpected: '/function/i' },
  { actual: isNaN('hello'), expected: /boolean/i, result: true, itActual: 'isNaN("hello")', itExpected: '/boolean/i' },
  { actual: isFinite, expected: /function/i, result: true, itActual: 'isFinite', itExpected: '/function/i' },
  { actual: isFinite(10), expected: /boolean/i, result: true, itActual: 'isFinite(10)', itExpected: '/boolean/i' },
  { actual: Number.NEGATIVE_INFINITY, expected: /number/i, result: true, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/number/i' },
  { actual: Object, expected: /function/i, result: true, itActual: 'Object', itExpected: '/function/i' },
  { actual: {}, expected: /object/i, result: true, itActual: '{}', itExpected: '/object/i' },
  { actual: Error, expected: /function/i, result: true, itActual: 'Error', itExpected: '/function/i' },
  { actual: TypeError, expected: /function/i, result: true, itActual: 'TypeError', itExpected: '/function/i' },
  { actual: new Error('error'), expected: /error/i, result: true, itActual: 'new Error("error")', itExpected: '/error/i' },
  { actual: new TypeError('error'), expected: /error/i, result: true, itActual: 'new TypeError("error")', itExpected: '/error/i' },
  { actual: new TypeError('error'), expected: /typeerror/i, result: true, itActual: 'new TypeError("error")', itExpected: '/typeerror/i' },
  { actual: new TypeError('error'), expected: /type/i, result: true, itActual: 'new TypeError("error")', itExpected: '/type/i' },
  { actual: undefined, expected: /UNDEFINED/i, result: true, itActual: 'undefined', itExpected: '/UNDEFINED/i' },
  { actual: null, expected: /NULL/i, result: true, itActual: 'null', itExpected: '/NULL/i' },
  { actual: Infinity, expected: /number/i, result: true, itActual: 'Infinity', itExpected: '/number/i' },
  { actual: NaN, expected: /number/i, result: true, itActual: 'NaN', itExpected: '/number/i' },
  { actual: JSON, expected: /object/i, result: true, itActual: 'JSON', itExpected: '/object/i' },
  { actual: Promise, expected: /function/i, result: true, itActual: 'Promise', itExpected: '/function/i' },
  { actual: new Promise(() => { }), expected: /promise/i, result: true, itActual: 'new Promise(()=>{})', itExpected: '/promise/i' },
  { actual: {}.name, expected: /UNDEFINED/i, result: true, itActual: '{}.name', itExpected: '/UNDEFINED/i' },
  { actual: RangeError, expected: /function/i, result: true, itActual: 'RangeError', itExpected: '/function/i' },
  { actual: ReferenceError, expected: /function/i, result: true, itActual: 'ReferenceError', itExpected: '/function/i' },
  { actual: new RangeError('error'), expected: /error/i, result: true, itActual: 'new RangeError("error")', itExpected: '/error/i' },
  { actual: new RangeError('error'), expected: /rangeerror/i, result: true, itActual: 'new RangeError("error")', itExpected: '/rangeerror/i' },
  { actual: new RangeError('error'), expected: /range/i, result: true, itActual: 'new RangeError("error")', itExpected: '/range/i' },
  { actual: new ReferenceError('error'), expected: /error/i, result: true, itActual: 'new ReferenceError("error")', itExpected: '/error/i' },
  { actual: new ReferenceError('error'), expected: /referenceerror/i, result: true, itActual: 'new ReferenceError("error")', itExpected: '/referenceerror/i' },
  { actual: new ReferenceError('error'), expected: /reference/i, result: true, itActual: 'new ReferenceError("error")', itExpected: '/reference/i' },
  { actual: Name, expected: /function/i, result: true, itActual: 'Name', itExpected: '/function/i' },
  { actual: new Name(), expected: /name/i, result: true, itActual: 'new Name()', itExpected: '/name/i' },
  { actual: new instance(), expected: /iNsTaNcE/i, result: true, itActual: 'new instance()', itExpected: '/iNsTaNcE/i' },
  { actual: new truthy(), expected: /tRuThY/i, result: true, itActual: 'new truthy()', itExpected: '/tRuThY/i' },
  { actual: new falsy(), expected: /fAlSy/i, result: true, itActual: 'new falsy()', itExpected: '/fAlSy/i' },
  { actual: new any(), expected: /aNy/i, result: true, itActual: 'new any()', itExpected: '/aNy/i' },
  { actual: new objectable(), expected: /oBjEcTaBlE/i, result: true, itActual: 'new objectable()', itExpected: '/oBjEcTaBlE/i' },

  { actual: Date, expected: /^[A-Z][a-z]+$/, result: true, itActual: 'Date', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: new Date(), expected: /^[A-Z][a-z]+$/, result: true, itActual: 'new Date()', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: Function, expected: /^[A-Z][a-z]+$/, result: true, itActual: 'Function', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: function () { }, expected: /^[A-Z][a-z]+$/, result: true, itActual: 'function(){}', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: new Function('return "hello"'), expected: /^[A-Z][a-z]+$/, result: true, itActual: 'new Function(\'return "hello"\')', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: (function () { return arguments; })(), expected: /^[A-Z][a-z]+$/, result: true, itActual: '(function(){return arguments;})()', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: () => { }, expected: /^[A-Z][a-z]+$/, result: true, itActual: '()=>{}', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: String, expected: /^[A-Z][a-z]+$/, result: true, itActual: 'String', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: new String('Hello'), expected: /^[A-Z][a-z]+$/, result: true, itActual: 'new String("Hello")', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: new String(''), expected: /^[A-Z][a-z]+$/, result: true, itActual: 'new String("")', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: 'Hello', expected: /^[A-Z][a-z]+$/, result: true, itActual: '"Hello"', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: `Hello`, expected: /^[A-Z][a-z]+$/, result: true, itActual: '`Hello`', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: '', expected: /^[A-Z][a-z]+$/, result: true, itActual: '""', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: Number, expected: /^[A-Z][a-z]+$/, result: true, itActual: 'Number', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: new Number(10), expected: /^[A-Z][a-z]+$/, result: true, itActual: 'new Number(10)', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: new Number(0), expected: /^[A-Z][a-z]+$/, result: true, itActual: 'new Number(0)', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: 10, expected: /^[A-Z][a-z]+$/, result: true, itActual: '10', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: 0, expected: /^[A-Z][a-z]+$/, result: true, itActual: '0', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: Boolean, expected: /^[A-Z][a-z]+$/, result: true, itActual: 'Boolean', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: new Boolean(0), expected: /^[A-Z][a-z]+$/, result: true, itActual: 'new Boolean(0)', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: false, expected: /^[A-Z][a-z]+$/, result: true, itActual: 'false', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: true, expected: /^[A-Z][a-z]+$/, result: true, itActual: 'true', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: RegExp, expected: /^[A-Z][a-z]+$/, result: true, itActual: 'RegExp', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: new RegExp('Hello', 'gim'), expected: /^[A-Z][a-z]+$/, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: /hello/, expected: /^[A-Z][a-z]+$/, result: false, itActual: '/hello/', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: isNaN, expected: /^[A-Z][a-z]+$/, result: true, itActual: 'isNaN', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: isNaN('hello'), expected: /^[A-Z][a-z]+$/, result: true, itActual: 'isNaN("hello")', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: isFinite, expected: /^[A-Z][a-z]+$/, result: true, itActual: 'isFinite', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: isFinite(10), expected: /^[A-Z][a-z]+$/, result: true, itActual: 'isFinite(10)', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: Number.NEGATIVE_INFINITY, expected: /^[A-Z][a-z]+$/, result: true, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: Object, expected: /^[A-Z][a-z]+$/, result: true, itActual: 'Object', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: {}, expected: /^[A-Z][a-z]+$/, result: true, itActual: '{}', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: Error, expected: /^[A-Z][a-z]+$/, result: true, itActual: 'Error', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: TypeError, expected: /^[A-Z][a-z]+$/, result: true, itActual: 'TypeError', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: new Error('error'), expected: /^[A-Z][a-z]+$/, result: true, itActual: 'new Error("error")', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: new TypeError('error'), expected: /^[A-Z][a-z]+$/, result: false, itActual: 'new TypeError("error")', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: undefined, expected: /^[A-Z][a-z]+$/, result: false, itActual: 'undefined', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: null, expected: /^[A-Z][a-z]+$/, result: false, itActual: 'null', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: Infinity, expected: /^[A-Z][a-z]+$/, result: true, itActual: 'Infinity', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: NaN, expected: /^[A-Z][a-z]+$/, result: true, itActual: 'NaN', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: JSON, expected: /^[A-Z][a-z]+$/, result: true, itActual: 'JSON', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: Promise, expected: /^[A-Z][a-z]+$/, result: true, itActual: 'Promise', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: new Promise(() => { }), expected: /^[A-Z][a-z]+$/, result: true, itActual: 'new Promise(()=>{})', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: {}.name, expected: /^[A-Z][a-z]+$/, result: false, itActual: '{}.name', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: RangeError, expected: /^[A-Z][a-z]+$/, result: true, itActual: 'RangeError', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: ReferenceError, expected: /^[A-Z][a-z]+$/, result: true, itActual: 'ReferenceError', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: new RangeError('error'), expected: /^[A-Z][a-z]+$/, result: false, itActual: 'new RangeError("error")', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: new ReferenceError('error'), expected: /^[A-Z][a-z]+$/, result: false, itActual: 'new ReferenceError("error")', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: Name, expected: /^[A-Z][a-z]+$/, result: true, itActual: 'Name', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: new Name(), expected: /^[A-Z][a-z]+$/, result: true, itActual: 'new Name()', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: new instance(), expected: /^[A-Z][a-z]+$/, result: false, itActual: 'new instance()', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: new truthy(), expected: /^[A-Z][a-z]+$/, result: false, itActual: 'new truthy()', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: new falsy(), expected: /^[A-Z][a-z]+$/, result: false, itActual: 'new falsy()', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: new any(), expected: /^[A-Z][a-z]+$/, result: false, itActual: 'new any()', itExpected: '/^[A-Z][a-z]+$/' },
  { actual: new objectable(), expected: /^[A-Z][a-z]+$/, result: false, itActual: 'new objectable()', itExpected: '/^[A-Z][a-z]+$/' },

  { actual: Date, expected: /(array|string|boolean)/i, result: false, itActual: 'Date', itExpected: '/(array|string|boolean)/i' },
  { actual: new Date(), expected: /(array|string|boolean)/i, result: false, itActual: 'new Date()', itExpected: '/(array|string|boolean)/i' },
  { actual: Function, expected: /(array|string|boolean)/i, result: false, itActual: 'Function', itExpected: '/(array|string|boolean)/i' },
  { actual: function () { }, expected: /(array|string|boolean)/i, result: false, itActual: 'function(){}', itExpected: '/(array|string|boolean)/i' },
  { actual: new Function('return "hello"'), expected: /(array|string|boolean)/i, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/(array|string|boolean)/i' },
  { actual: (function () { return arguments; })(), expected: /(array|string|boolean)/i, result: false, itActual: '(function(){return arguments;})()', itExpected: '/(array|string|boolean)/i' },
  { actual: (function () { return arguments; })(), expected: /(array|string|arg)/i, result: false, itActual: '(function(){return arguments;})()', itExpected: '/(array|string|boolean)/i' },
  { actual: (function () { return arguments; })(), expected: /(array|string|Arg)/i, result: false, itActual: '(function(){return arguments;})()', itExpected: '/(array|string|boolean)/i' },
  { actual: (function () { return arguments; })(), expected: /(array|string|ARGUM)/i, result: false, itActual: '(function(){return arguments;})()', itExpected: '/(array|string|boolean)/i' },
  { actual: () => { }, expected: /(array|string|boolean)/i, result: false, itActual: '()=>{}', itExpected: '/(array|string|boolean)/i' },
  { actual: String, expected: /(array|string|boolean)/i, result: false, itActual: 'String', itExpected: '/(array|string|boolean)/i' },
  { actual: new String('Hello'), expected: /(array|object|boolean)/i, result: false, itActual: 'new String("Hello")', itExpected: '/(array|object|boolean)/i' },
  { actual: new String(''), expected: /(array|object|boolean)/i, result: false, itActual: 'new String("")', itExpected: '/(array|object|boolean)/i' },
  { actual: 'Hello', expected: /(array|object|boolean)/i, result: false, itActual: '"Hello"', itExpected: '/(array|object|boolean)/i' },
  { actual: `Hello`, expected: /(array|object|boolean)/i, result: false, itActual: '`Hello`', itExpected: '/(array|object|boolean)/i' },
  { actual: '', expected: /(array|object|boolean)/i, result: false, itActual: '""', itExpected: '/(array|object|boolean)/i' },
  { actual: Number, expected: /(number|object|boolean)/i, result: false, itActual: 'Number', itExpected: '/(number|object|boolean)/i' },
  { actual: new Number(10), expected: /(function|object|boolean)/i, result: false, itActual: 'new Number(10)', itExpected: '/(function|object|boolean)/i' },
  { actual: new Number(0), expected: /(function|object|boolean)/i, result: false, itActual: 'new Number(0)', itExpected: '/(function|object|boolean)/i' },
  { actual: 10, expected: /(function|object|boolean)/i, result: false, itActual: '10', itExpected: '/(function|object|boolean)/i' },
  { actual: 0, expected: /(function|object|boolean)/i, result: false, itActual: '0', itExpected: '/(function|object|boolean)/i' },
  { actual: Boolean, expected: /(array|object|boolean)/i, result: false, itActual: 'Boolean', itExpected: '/(array|object|boolean)/i' },
  { actual: new Boolean(0), expected: /(array|object|function)/i, result: false, itActual: 'new Boolean(0)', itExpected: '/(array|object|function)/i' },
  { actual: false, expected: /(array|object|function)/i, result: false, itActual: 'false', itExpected: '/(array|object|function)/i' },
  { actual: true, expected: /(array|object|function)/i, result: false, itActual: 'true', itExpected: '/(array|object|function)/i' },
  { actual: RegExp, expected: /(array|object|regexp)/i, result: false, itActual: 'RegExp', itExpected: '/(array|object|regexp)/i' },
  { actual: new RegExp('Hello', 'gim'), expected: /(array|object|function)/i, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/(array|object|function)/i' },
  { actual: /hello/, expected: /(array|object|function)/i, result: false, itActual: '/hello/', itExpected: '/(array|object|function)/i' },
  { actual: isNaN, expected: /(array|object|number)/i, result: false, itActual: 'isNaN', itExpected: '/(array|object|number)/i' },
  { actual: isNaN('hello'), expected: /(array|object|number)/i, result: false, itActual: 'isNaN("hello")', itExpected: '/(array|object|number)/i' },
  { actual: isFinite, expected: /(array|object|number)/i, result: false, itActual: 'isFinite', itExpected: '/(array|object|number)/i' },
  { actual: isFinite(10), expected: /(array|object|number)/i, result: false, itActual: 'isFinite(10)', itExpected: '/(array|object|number)/i' },
  { actual: Number.NEGATIVE_INFINITY, expected: /(array|object|function)/i, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/(array|object|function)/i' },
  { actual: Object, expected: /(array|object|number)/i, result: false, itActual: 'Object', itExpected: '/(array|object|number)/i' },
  { actual: {}, expected: /(array|string|function)/i, result: false, itActual: '{}', itExpected: '/(array|string|function)/i' },
  { actual: Error, expected: /(array|object|error)/i, result: false, itActual: 'Error', itExpected: '/(array|object|error)/i' },
  { actual: TypeError, expected: /(array|object|error)/i, result: false, itActual: 'TypeError', itExpected: '/(array|object|error)/i' },
  { actual: new Error('error'), expected: /(array|object|function)/i, result: false, itActual: 'new Error("error")', itExpected: '/(array|object|function)/i' },
  { actual: new TypeError('error'), expected: /(array|object|function)/i, result: false, itActual: 'new TypeError("error")', itExpected: '/(array|object|function)/i' },
  { actual: undefined, expected: /(array|object|null)/i, result: false, itActual: 'undefined', itExpected: '/(array|object|null)/i' },
  { actual: null, expected: /(array|object|undefined)/i, result: false, itActual: 'null', itExpected: '/(array|object|undefined)/i' },
  { actual: Infinity, expected: /(array|function|object)/i, result: false, itActual: 'Infinity', itExpected: '/(array|function|object)/i' },
  { actual: NaN, expected: /(array|function|object)/i, result: false, itActual: 'NaN', itExpected: '/(array|function|object)/i' },
  { actual: JSON, expected: /(array|string|function)/i, result: false, itActual: 'JSON', itExpected: '/(array|string|function)/i' },
  { actual: Promise, expected: /(array|string|object)/i, result: false, itActual: 'Promise', itExpected: '/(array|string|object)/i' },
  { actual: new Promise(() => { }), expected: /(array|string|object)/i, result: false, itActual: 'new Promise(()=>{})', itExpected: '/(array|string|object)/i' },
  { actual: {}.name, expected: /(array|object|null)/i, result: false, itActual: '{}.name', itExpected: '/(array|object|null)/i' },
  { actual: RangeError, expected: /(array|object|error)/i, result: false, itActual: 'RangeError', itExpected: '/(array|object|error)/i' },
  { actual: ReferenceError, expected: /(array|object|error)/i, result: false, itActual: 'ReferenceError', itExpected: '/(array|object|error)/i' },
  { actual: new RangeError('error'), expected: /(array|object|function)/i, result: false, itActual: 'new RangeError("error")', itExpected: '/(array|object|function)/i' },
  { actual: new ReferenceError('error'), expected: /(array|object|function)/i, result: false, itActual: 'new ReferenceError("error")', itExpected: '/(array|object|function)/i' },
  { actual: Name, expected: /(array|string|object)/i, result: false, itActual: 'Name', itExpected: '/(array|string|object)/i' },
  { actual: new Name(), expected: /(array|string|object)/i, result: false, itActual: 'new Name()', itExpected: '/(array|string|object)/i' },
  { actual: new instance(), expected: /(array|string|object)/i, result: false, itActual: 'new instance()', itExpected: '/(array|string|object)/i' },
  { actual: new truthy(), expected: /(array|string|object)/i, result: false, itActual: 'new truthy()', itExpected: '/(array|string|object)/i' },
  { actual: new falsy(), expected: /(array|string|object)/i, result: false, itActual: 'new falsy()', itExpected: '/(array|string|object)/i' },
  { actual: new any(), expected: /(array|string|object)/i, result: false, itActual: 'new any()', itExpected: '/(array|string|object)/i' },
  { actual: new objectable(), expected: /(array|string|object)/i, result: true, itActual: 'new objectable()', itExpected: '/(array|string|object)/i' },

  { actual: Date, expected: /(array|string|function)/i, result: true, itActual: 'Date', itExpected: '/(array|string|function)/i' },
  { actual: new Date(), expected: /(array|string|date)/i, result: true, itActual: 'new Date()', itExpected: '/(array|string|date)/i' },
  { actual: Function, expected: /(array|string|function)/i, result: true, itActual: 'Function', itExpected: '/(array|string|function)/i' },
  { actual: function () { }, expected: /(array|string|function)/i, result: true, itActual: 'function(){}', itExpected: '/(array|string|function)/i' },
  { actual: new Function('return "hello"'), expected: /(array|string|function)/i, result: true, itActual: 'new Function(\'return "hello"\')', itExpected: '/(array|string|function)/i' },
  { actual: (function () { return arguments; })(), expected: /(array|string|Arguments)/i, result: true, itActual: '(function(){return arguments;})()', itExpected: '/(array|string|arguments)/i' },
  { actual: (function () { return arguments; })(), expected: /(array|string|ARGUMENTS)/i, result: true, itActual: '(function(){return arguments;})()', itExpected: '/(array|string|arguments)/i' },
  { actual: (function () { return arguments; })(), expected: /(array|string|object)/i, result: true, itActual: '(function(){return arguments;})()', itExpected: '/(array|string|object)/i' },
  { actual: () => { }, expected: /(array|string|function)/i, result: true, itActual: '()=>{}', itExpected: '/(array|string|function)/i' },
  { actual: String, expected: /(array|string|function)/i, result: true, itActual: 'String', itExpected: '/(array|string|function)/i' },
  { actual: new String('Hello'), expected: /(array|function|string)/i, result: true, itActual: 'new String("Hello")', itExpected: '/(array|function|string)/i' },
  { actual: new String(''), expected: /(array|function|string)/i, result: true, itActual: 'new String("")', itExpected: '/(array|function|string)/i' },
  { actual: 'Hello', expected: /(array|function|string)/i, result: true, itActual: '"Hello"', itExpected: '/(array|function|string)/i' },
  { actual: `Hello`, expected: /(array|function|string)/i, result: true, itActual: '`Hello`', itExpected: '/(array|function|string)/i' },
  { actual: '', expected: /(array|function|string)/i, result: true, itActual: '""', itExpected: '/(array|function|string)/i' },
  { actual: Number, expected: /(object|number|function)/i, result: true, itActual: 'Number', itExpected: '/(object|number|function)/i' },
  { actual: new Number(10), expected: /(object|function|number)/i, result: true, itActual: 'new Number(10)', itExpected: '/(object|function|number)/i' },
  { actual: new Number(0), expected: /(object|function|number)/i, result: true, itActual: 'new Number(0)', itExpected: '/(object|function|number)/i' },
  { actual: 10, expected: /(object|function|number)/i, result: true, itActual: '10', itExpected: '/(object|function|number)/i' },
  { actual: 0, expected: /(object|function|number)/i, result: true, itActual: '0', itExpected: '/(object|function|number)/i' },
  { actual: Boolean, expected: /(array|string|function)/i, result: true, itActual: 'Boolean', itExpected: '/(array|string|function)/i' },
  { actual: new Boolean(0), expected: /(array|string|boolean)/i, result: true, itActual: 'new Boolean(0)', itExpected: '/(array|string|boolean)/i' },
  { actual: false, expected: /(array|string|boolean)/i, result: true, itActual: 'false', itExpected: '/(array|string|boolean)/i' },
  { actual: true, expected: /(array|string|boolean)/i, result: true, itActual: 'true', itExpected: '/(array|string|boolean)/i' },
  { actual: RegExp, expected: /(array|string|function)/i, result: true, itActual: 'RegExp', itExpected: '/(array|string|function)/i' },
  { actual: new RegExp('Hello', 'gim'), expected: /(array|string|regexp)/i, result: true, itActual: 'new RegExp("Hello","gim")', itExpected: '/(array|string|regexp)/i' },
  { actual: /hello/, expected: /(array|string|regexp)/i, result: true, itActual: '/hello/', itExpected: '/(array|string|regexp)/i' },
  { actual: isNaN, expected: /(array|string|function)/i, result: true, itActual: 'isNaN', itExpected: '/(array|string|function)/i' },
  { actual: isNaN('hello'), expected: /(array|string|boolean)/i, result: true, itActual: 'isNaN("hello")', itExpected: '/(array|string|boolean)/i' },
  { actual: isFinite, expected: /(array|string|function)/i, result: true, itActual: 'isFinite', itExpected: '/(array|string|function)/i' },
  { actual: isFinite(10), expected: /(array|string|boolean)/i, result: true, itActual: 'isFinite(10)', itExpected: '/(array|string|boolean)/i' },
  { actual: Number.NEGATIVE_INFINITY, expected: /(array|string|number)/i, result: true, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/(array|string|number)/i' },
  { actual: Object, expected: /(array|string|function)/i, result: true, itActual: 'Object', itExpected: '/(array|string|function)/i' },
  { actual: {}, expected: /(array|string|object)/i, result: true, itActual: '{}', itExpected: '/(array|string|object)/i' },
  { actual: Error, expected: /(array|string|function)/i, result: true, itActual: 'Error', itExpected: '/(array|string|function)/i' },
  { actual: TypeError, expected: /(array|string|function)/i, result: true, itActual: 'TypeError', itExpected: '/(array|string|function)/i' },
  { actual: new Error('error'), expected: /(array|string|error)/i, result: true, itActual: 'new Error("error")', itExpected: '/(array|string|error)/i' },
  { actual: new TypeError('error'), expected: /(array|string|error)/i, result: true, itActual: 'new TypeError("error")', itExpected: '/(array|string|error)/i' },
  { actual: new TypeError('error'), expected: /(array|string|typeerror)/i, result: true, itActual: 'new TypeError("error")', itExpected: '/(array|string|error)/i' },
  { actual: undefined, expected: /(array|string|undefined)/i, result: true, itActual: 'undefined', itExpected: '/(array|string|undefined)/i' },
  { actual: null, expected: /(array|string|null)/i, result: true, itActual: 'null', itExpected: '/(array|string|null)/i' },
  { actual: Infinity, expected: /(array|string|number)/i, result: true, itActual: 'Infinity', itExpected: '/(array|string|number)/i' },
  { actual: NaN, expected: /(array|string|number)/i, result: true, itActual: 'NaN', itExpected: '/(array|string|number)/i' },
  { actual: JSON, expected: /(array|string|object)/i, result: true, itActual: 'JSON', itExpected: '/(array|string|object)/i' },
  { actual: Promise, expected: /(array|string|function)/i, result: true, itActual: 'Promise', itExpected: '/(array|string|function)/i' },
  { actual: new Promise(() => { }), expected: /(array|string|promise)/i, result: true, itActual: 'new Promise(()=>{})', itExpected: '/(array|string|promise)/i' },
  { actual: {}.name, expected: /(array|string|undefined)/i, result: true, itActual: '{}.name', itExpected: '/(array|string|undefined)/i' },
  { actual: RangeError, expected: /(array|string|function)/i, result: true, itActual: 'RangeError', itExpected: '/(array|string|function)/i' },
  { actual: ReferenceError, expected: /(array|string|function)/i, result: true, itActual: 'ReferenceError', itExpected: '/(array|string|function)/i' },
  { actual: new RangeError('error'), expected: /(array|string|error)/i, result: true, itActual: 'new RangeError("error")', itExpected: '/(array|string|error)/i' },
  { actual: new RangeError('error'), expected: /(array|string|rangeerror)/i, result: true, itActual: 'new RangeError("error")', itExpected: '/(array|string|rangeerror)/i' },
  { actual: new ReferenceError('error'), expected: /(array|string|error)/i, result: true, itActual: 'new ReferenceError("error")', itExpected: '/(array|string|error)/i' },
  { actual: new ReferenceError('error'), expected: /(array|string|referenceerror)/i, result: true, itActual: 'new ReferenceError("error")', itExpected: '/(array|string|referenceerror)/i' },
  { actual: Name, expected: /(array|string|function)/i, result: true, itActual: 'Name', itExpected: '/(array|string|function)/i' },
  { actual: new Name(), expected: /(array|string|name)/i, result: true, itActual: 'new Name()', itExpected: '/(array|string|name)/i' },
  { actual: new instance(), expected: /(array|string|iNsTaNcE)/i, result: true, itActual: 'new instance()', itExpected: '/(array|string|iNsTaNcE)/i' },
  { actual: new truthy(), expected: /(array|string|tRuThY)/i, result: true, itActual: 'new truthy()', itExpected: '/(array|string|tRuThY)/i' },
  { actual: new falsy(), expected: /(array|string|fAlSy)/i, result: true, itActual: 'new falsy()', itExpected: '/(array|string|fAlSy)/i' },
  { actual: new any(), expected: /(array|string|aNy)/i, result: true, itActual: 'new any()', itExpected: '/(array|string|aNy)/i' },
  { actual: new objectable(), expected: /(array|string|oBjEcTaBlE)/i, result: true, itActual: 'new objectable()', itExpected: '/(array|string|oBjEcTaBlE)/i' },

  { actual: Date, expected: /ANY/, result: false, itActual: 'Date', itExpected: '/ANY/' },
  { actual: new Date(), expected: /ANY/, result: false, itActual: 'new Date()', itExpected: '/ANY/' },
  { actual: Function, expected: /ANY/, result: false, itActual: 'Function', itExpected: '/ANY/' },
  { actual: function () { }, expected: /ANY/, result: false, itActual: 'function(){}', itExpected: '/ANY/' },
  { actual: new Function('return "hello"'), expected: /ANY/, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/ANY/' },
  { actual: (function () { return arguments; })(), expected: /ANY/, result: false, itActual: '(function(){return arguments;})()', itExpected: '/ANY/' },
  { actual: () => { }, expected: /ANY/, result: false, itActual: '()=>{}', itExpected: '/ANY/' },
  { actual: String, expected: /ANY/, result: false, itActual: 'String', itExpected: '/ANY/' },
  { actual: new String('Hello'), expected: /ANY/, result: false, itActual: 'new String("Hello")', itExpected: '/ANY/' },
  { actual: new String(''), expected: /ANY/, result: false, itActual: 'new String("")', itExpected: '/ANY/' },
  { actual: 'Hello', expected: /ANY/, result: false, itActual: '"Hello"', itExpected: '/ANY/' },
  { actual: `Hello`, expected: /ANY/, result: false, itActual: '`Hello`', itExpected: '/ANY/' },
  { actual: '', expected: /ANY/, result: false, itActual: '""', itExpected: '/ANY/' },
  { actual: Number, expected: /ANY/, result: false, itActual: 'Number', itExpected: '/ANY/' },
  { actual: new Number(10), expected: /ANY/, result: false, itActual: 'new Number(10)', itExpected: '/ANY/' },
  { actual: new Number(0), expected: /ANY/, result: false, itActual: 'new Number(0)', itExpected: '/ANY/' },
  { actual: 10, expected: /ANY/, result: false, itActual: '10', itExpected: '/ANY/' },
  { actual: 0, expected: /ANY/, result: false, itActual: '0', itExpected: '/ANY/' },
  { actual: Boolean, expected: /ANY/, result: false, itActual: 'Boolean', itExpected: '/ANY/' },
  { actual: new Boolean(0), expected: /ANY/, result: false, itActual: 'new Boolean(0)', itExpected: '/ANY/' },
  { actual: false, expected: /ANY/, result: false, itActual: 'false', itExpected: '/ANY/' },
  { actual: true, expected: /ANY/, result: false, itActual: 'true', itExpected: '/ANY/' },
  { actual: RegExp, expected: /ANY/, result: false, itActual: 'RegExp', itExpected: '/ANY/' },
  { actual: new RegExp('Hello', 'gim'), expected: /ANY/, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/ANY/' },
  { actual: /hello/, expected: /ANY/, result: false, itActual: '/hello/', itExpected: '/ANY/' },
  { actual: isNaN, expected: /ANY/, result: false, itActual: 'isNaN', itExpected: '/ANY/' },
  { actual: isNaN('hello'), expected: /ANY/, result: false, itActual: 'isNaN("hello")', itExpected: '/ANY/' },
  { actual: isFinite, expected: /ANY/, result: false, itActual: 'isFinite', itExpected: '/ANY/' },
  { actual: isFinite(10), expected: /ANY/, result: false, itActual: 'isFinite(10)', itExpected: '/ANY/' },
  { actual: Number.NEGATIVE_INFINITY, expected: /ANY/, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/ANY/' },
  { actual: Object, expected: /ANY/, result: false, itActual: 'Object', itExpected: '/ANY/' },
  { actual: {}, expected: /ANY/, result: false, itActual: '{}', itExpected: '/ANY/' },
  { actual: Error, expected: /ANY/, result: false, itActual: 'Error', itExpected: '/ANY/' },
  { actual: TypeError, expected: /ANY/, result: false, itActual: 'TypeError', itExpected: '/ANY/' },
  { actual: new Error('error'), expected: /ANY/, result: false, itActual: 'new Error("error")', itExpected: '/ANY/' },
  { actual: new TypeError('error'), expected: /ANY/, result: false, itActual: 'new TypeError("error")', itExpected: '/ANY/' },
  { actual: undefined, expected: /ANY/, result: false, itActual: 'undefined', itExpected: '/ANY/' },
  { actual: null, expected: /ANY/, result: false, itActual: 'null', itExpected: '/ANY/' },
  { actual: Infinity, expected: /ANY/, result: false, itActual: 'Infinity', itExpected: '/ANY/' },
  { actual: NaN, expected: /ANY/, result: false, itActual: 'NaN', itExpected: '/ANY/' },
  { actual: JSON, expected: /ANY/, result: false, itActual: 'JSON', itExpected: '/ANY/' },
  { actual: Promise, expected: /ANY/, result: false, itActual: 'Promise', itExpected: '/ANY/' },
  { actual: new Promise(() => { }), expected: /ANY/, result: false, itActual: 'new Promise(()=>{})', itExpected: '/ANY/' },
  { actual: {}.name, expected: /ANY/, result: false, itActual: '{}.name', itExpected: '/ANY/' },
  { actual: RangeError, expected: /ANY/, result: false, itActual: 'RangeError', itExpected: '/ANY/' },
  { actual: ReferenceError, expected: /ANY/, result: false, itActual: 'ReferenceError', itExpected: '/ANY/' },
  { actual: new RangeError('error'), expected: /ANY/, result: false, itActual: 'new RangeError("error")', itExpected: '/ANY/' },
  { actual: new ReferenceError('error'), expected: /ANY/, result: false, itActual: 'new ReferenceError("error")', itExpected: '/ANY/' },
  { actual: Name, expected: /ANY/, result: false, itActual: 'Name', itExpected: '/ANY/' },
  { actual: new Name(), expected: /ANY/, result: false, itActual: 'new Name()', itExpected: '/ANY/' },
  { actual: new instance(), expected: /ANY/, result: false, itActual: 'new instance()', itExpected: '/ANY/' },
  { actual: new truthy(), expected: /ANY/, result: false, itActual: 'new truthy()', itExpected: '/ANY/' },
  { actual: new falsy(), expected: /ANY/, result: false, itActual: 'new falsy()', itExpected: '/ANY/' },
  { actual: new any(), expected: /ANY/, result: false, itActual: 'new any()', itExpected: '/ANY/' },
  { actual: new objectable(), expected: /ANY/, result: false, itActual: 'new objectable()', itExpected: '/ANY/' },

  { actual: Date, expected: /AN/, result: false, itActual: 'Date', itExpected: '/AN/' },
  { actual: new Date(), expected: /AN/, result: false, itActual: 'new Date()', itExpected: '/AN/' },
  { actual: Function, expected: /AN/, result: false, itActual: 'Function', itExpected: '/AN/' },
  { actual: function () { }, expected: /AN/, result: false, itActual: 'function(){}', itExpected: '/AN/' },
  { actual: new Function('return "hello"'), expected: /AN/, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/AN/' },
  { actual: (function () { return arguments; })(), expected: /AN/, result: false, itActual: '(function(){return arguments;})()', itExpected: '/AN/' },
  { actual: () => { }, expected: /AN/, result: false, itActual: '()=>{}', itExpected: '/AN/' },
  { actual: String, expected: /AN/, result: false, itActual: 'String', itExpected: '/AN/' },
  { actual: new String('Hello'), expected: /AN/, result: false, itActual: 'new String("Hello")', itExpected: '/AN/' },
  { actual: new String(''), expected: /AN/, result: false, itActual: 'new String("")', itExpected: '/AN/' },
  { actual: 'Hello', expected: /AN/, result: false, itActual: '"Hello"', itExpected: '/AN/' },
  { actual: `Hello`, expected: /AN/, result: false, itActual: '`Hello`', itExpected: '/AN/' },
  { actual: '', expected: /AN/, result: false, itActual: '""', itExpected: '/AN/' },
  { actual: Number, expected: /AN/, result: false, itActual: 'Number', itExpected: '/AN/' },
  { actual: new Number(10), expected: /AN/, result: false, itActual: 'new Number(10)', itExpected: '/AN/' },
  { actual: new Number(0), expected: /AN/, result: false, itActual: 'new Number(0)', itExpected: '/AN/' },
  { actual: 10, expected: /AN/, result: false, itActual: '10', itExpected: '/AN/' },
  { actual: 0, expected: /AN/, result: false, itActual: '0', itExpected: '/AN/' },
  { actual: Boolean, expected: /AN/, result: false, itActual: 'Boolean', itExpected: '/AN/' },
  { actual: new Boolean(0), expected: /AN/, result: false, itActual: 'new Boolean(0)', itExpected: '/AN/' },
  { actual: false, expected: /AN/, result: false, itActual: 'false', itExpected: '/AN/' },
  { actual: true, expected: /AN/, result: false, itActual: 'true', itExpected: '/AN/' },
  { actual: RegExp, expected: /AN/, result: false, itActual: 'RegExp', itExpected: '/AN/' },
  { actual: new RegExp('Hello', 'gim'), expected: /AN/, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/AN/' },
  { actual: /hello/, expected: /AN/, result: false, itActual: '/hello/', itExpected: '/AN/' },
  { actual: isNaN, expected: /AN/, result: false, itActual: 'isNaN', itExpected: '/AN/' },
  { actual: isNaN('hello'), expected: /AN/, result: false, itActual: 'isNaN("hello")', itExpected: '/AN/' },
  { actual: isFinite, expected: /AN/, result: false, itActual: 'isFinite', itExpected: '/AN/' },
  { actual: isFinite(10), expected: /AN/, result: false, itActual: 'isFinite(10)', itExpected: '/AN/' },
  { actual: Number.NEGATIVE_INFINITY, expected: /AN/, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/AN/' },
  { actual: Object, expected: /AN/, result: false, itActual: 'Object', itExpected: '/AN/' },
  { actual: {}, expected: /AN/, result: false, itActual: '{}', itExpected: '/AN/' },
  { actual: Error, expected: /AN/, result: false, itActual: 'Error', itExpected: '/AN/' },
  { actual: TypeError, expected: /AN/, result: false, itActual: 'TypeError', itExpected: '/AN/' },
  { actual: new Error('error'), expected: /AN/, result: false, itActual: 'new Error("error")', itExpected: '/AN/' },
  { actual: new TypeError('error'), expected: /AN/, result: false, itActual: 'new TypeError("error")', itExpected: '/AN/' },
  { actual: undefined, expected: /AN/, result: false, itActual: 'undefined', itExpected: '/AN/' },
  { actual: null, expected: /AN/, result: false, itActual: 'null', itExpected: '/AN/' },
  { actual: Infinity, expected: /AN/, result: false, itActual: 'Infinity', itExpected: '/AN/' },
  { actual: NaN, expected: /AN/, result: false, itActual: 'NaN', itExpected: '/AN/' },
  { actual: JSON, expected: /AN/, result: false, itActual: 'JSON', itExpected: '/AN/' },
  { actual: Promise, expected: /AN/, result: false, itActual: 'Promise', itExpected: '/AN/' },
  { actual: new Promise(() => { }), expected: /AN/, result: false, itActual: 'new Promise(()=>{})', itExpected: '/AN/' },
  { actual: {}.name, expected: /AN/, result: false, itActual: '{}.name', itExpected: '/AN/' },
  { actual: RangeError, expected: /AN/, result: false, itActual: 'RangeError', itExpected: '/AN/' },
  { actual: ReferenceError, expected: /AN/, result: false, itActual: 'ReferenceError', itExpected: '/AN/' },
  { actual: new RangeError('error'), expected: /AN/, result: false, itActual: 'new RangeError("error")', itExpected: '/AN/' },
  { actual: new ReferenceError('error'), expected: /AN/, result: false, itActual: 'new ReferenceError("error")', itExpected: '/AN/' },
  { actual: Name, expected: /AN/, result: false, itActual: 'Name', itExpected: '/AN/' },
  { actual: new Name(), expected: /AN/, result: false, itActual: 'new Name()', itExpected: '/AN/' },
  { actual: new instance(), expected: /AN/, result: false, itActual: 'new instance()', itExpected: '/AN/' },
  { actual: new truthy(), expected: /AN/, result: false, itActual: 'new truthy()', itExpected: '/AN/' },
  { actual: new falsy(), expected: /AN/, result: false, itActual: 'new falsy()', itExpected: '/AN/' },
  { actual: new any(), expected: /AN/, result: false, itActual: 'new any()', itExpected: '/AN/' },
  { actual: new objectable(), expected: /AN/, result: false, itActual: 'new objectable()', itExpected: '/AN/' },

  { actual: Date, expected: /any/, result: true, itActual: 'Date', itExpected: '/any/' },
  { actual: new Date(), expected: /any/, result: true, itActual: 'new Date()', itExpected: '/any/' },
  { actual: Function, expected: /any/, result: true, itActual: 'Function', itExpected: '/any/' },
  { actual: function () { }, expected: /any/, result: true, itActual: 'function(){}', itExpected: '/any/' },
  { actual: new Function('return "hello"'), expected: /any/, result: true, itActual: 'new Function(\'return "hello"\')', itExpected: '/any/' },
  { actual: (function () { return arguments; })(), expected: /any/, result: true, itActual: '(function(){return arguments;})()', itExpected: '/any/' },
  { actual: () => { }, expected: /any/, result: true, itActual: '()=>{}', itExpected: '/any/' },
  { actual: String, expected: /any/, result: true, itActual: 'String', itExpected: '/any/' },
  { actual: new String('Hello'), expected: /any/, result: true, itActual: 'new String("Hello")', itExpected: '/any/' },
  { actual: new String(''), expected: /any/, result: true, itActual: 'new String("")', itExpected: '/any/' },
  { actual: 'Hello', expected: /any/, result: true, itActual: '"Hello"', itExpected: '/any/' },
  { actual: `Hello`, expected: /any/, result: true, itActual: '`Hello`', itExpected: '/any/' },
  { actual: '', expected: /any/, result: true, itActual: '""', itExpected: '/any/' },
  { actual: Number, expected: /any/, result: true, itActual: 'Number', itExpected: '/any/' },
  { actual: new Number(10), expected: /any/, result: true, itActual: 'new Number(10)', itExpected: '/any/' },
  { actual: new Number(0), expected: /any/, result: true, itActual: 'new Number(0)', itExpected: '/any/' },
  { actual: 10, expected: /any/, result: true, itActual: '10', itExpected: '/any/' },
  { actual: 0, expected: /any/, result: true, itActual: '0', itExpected: '/any/' },
  { actual: Boolean, expected: /any/, result: true, itActual: 'Boolean', itExpected: '/any/' },
  { actual: new Boolean(0), expected: /any/, result: true, itActual: 'new Boolean(0)', itExpected: '/any/' },
  { actual: false, expected: /any/, result: true, itActual: 'false', itExpected: '/any/' },
  { actual: true, expected: /any/, result: true, itActual: 'true', itExpected: '/any/' },
  { actual: RegExp, expected: /any/, result: true, itActual: 'RegExp', itExpected: '/any/' },
  { actual: new RegExp('Hello', 'gim'), expected: /any/, result: true, itActual: 'new RegExp("Hello","gim")', itExpected: '/any/' },
  { actual: /hello/, expected: /any/, result: true, itActual: '/hello/', itExpected: '/any/' },
  { actual: isNaN, expected: /any/, result: true, itActual: 'isNaN', itExpected: '/any/' },
  { actual: isNaN('hello'), expected: /any/, result: true, itActual: 'isNaN("hello")', itExpected: '/any/' },
  { actual: isFinite, expected: /any/, result: true, itActual: 'isFinite', itExpected: '/any/' },
  { actual: isFinite(10), expected: /any/, result: true, itActual: 'isFinite(10)', itExpected: '/any/' },
  { actual: Number.NEGATIVE_INFINITY, expected: /any/, result: true, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/any/' },
  { actual: Object, expected: /any/, result: true, itActual: 'Object', itExpected: '/any/' },
  { actual: {}, expected: /any/, result: true, itActual: '{}', itExpected: '/any/' },
  { actual: Error, expected: /any/, result: true, itActual: 'Error', itExpected: '/any/' },
  { actual: TypeError, expected: /any/, result: true, itActual: 'TypeError', itExpected: '/any/' },
  { actual: new Error('error'), expected: /any/, result: true, itActual: 'new Error("error")', itExpected: '/any/' },
  { actual: new TypeError('error'), expected: /any/, result: true, itActual: 'new TypeError("error")', itExpected: '/any/' },
  { actual: undefined, expected: /any/, result: true, itActual: 'undefined', itExpected: '/any/' },
  { actual: null, expected: /any/, result: true, itActual: 'null', itExpected: '/any/' },
  { actual: Infinity, expected: /any/, result: true, itActual: 'Infinity', itExpected: '/any/' },
  { actual: NaN, expected: /any/, result: true, itActual: 'NaN', itExpected: '/any/' },
  { actual: JSON, expected: /any/, result: true, itActual: 'JSON', itExpected: '/any/' },
  { actual: Promise, expected: /any/, result: true, itActual: 'Promise', itExpected: '/any/' },
  { actual: new Promise(() => { }), expected: /any/, result: true, itActual: 'new Promise(()=>{})', itExpected: '/any/' },
  { actual: {}.name, expected: /any/, result: true, itActual: '{}.name', itExpected: '/any/' },
  { actual: RangeError, expected: /any/, result: true, itActual: 'RangeError', itExpected: '/any/' },
  { actual: ReferenceError, expected: /any/, result: true, itActual: 'ReferenceError', itExpected: '/any/' },
  { actual: new RangeError('error'), expected: /any/, result: true, itActual: 'new RangeError("error")', itExpected: '/any/' },
  { actual: new ReferenceError('error'), expected: /any/, result: true, itActual: 'new ReferenceError("error")', itExpected: '/any/' },
  { actual: Name, expected: /any/, result: true, itActual: 'Name', itExpected: '/any/' },
  { actual: new Name(), expected: /any/, result: true, itActual: 'new Name()', itExpected: '/any/' },
  { actual: new instance(), expected: /any/, result: true, itActual: 'new instance()', itExpected: '/any/' },
  { actual: new truthy(), expected: /any/, result: true, itActual: 'new truthy()', itExpected: '/any/' },
  { actual: new falsy(), expected: /any/, result: true, itActual: 'new falsy()', itExpected: '/any/' },
  { actual: new any(), expected: /any/, result: true, itActual: 'new any()', itExpected: '/any/' },
  { actual: new objectable(), expected: /any/, result: true, itActual: 'new objectable()', itExpected: '/any/' },

  { actual: Date, expected: /an/, result: false, itActual: 'Date', itExpected: '/an/' },
  { actual: new Date(), expected: /an/, result: false, itActual: 'new Date()', itExpected: '/an/' },
  { actual: Function, expected: /an/, result: false, itActual: 'Function', itExpected: '/an/' },
  { actual: function () { }, expected: /an/, result: false, itActual: 'function(){}', itExpected: '/an/' },
  { actual: new Function('return "hello"'), expected: /an/, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/an/' },
  { actual: (function () { return arguments; })(), expected: /an/, result: false, itActual: '(function(){return arguments;})()', itExpected: '/an/' },
  { actual: () => { }, expected: /an/, result: false, itActual: '()=>{}', itExpected: '/an/' },
  { actual: String, expected: /an/, result: false, itActual: 'String', itExpected: '/an/' },
  { actual: new String('Hello'), expected: /an/, result: false, itActual: 'new String("Hello")', itExpected: '/an/' },
  { actual: new String(''), expected: /an/, result: false, itActual: 'new String("")', itExpected: '/an/' },
  { actual: 'Hello', expected: /an/, result: false, itActual: '"Hello"', itExpected: '/an/' },
  { actual: `Hello`, expected: /an/, result: false, itActual: '`Hello`', itExpected: '/an/' },
  { actual: '', expected: /an/, result: false, itActual: '""', itExpected: '/an/' },
  { actual: Number, expected: /an/, result: false, itActual: 'Number', itExpected: '/an/' },
  { actual: new Number(10), expected: /an/, result: false, itActual: 'new Number(10)', itExpected: '/an/' },
  { actual: new Number(0), expected: /an/, result: false, itActual: 'new Number(0)', itExpected: '/an/' },
  { actual: 10, expected: /an/, result: false, itActual: '10', itExpected: '/an/' },
  { actual: 0, expected: /an/, result: false, itActual: '0', itExpected: '/an/' },
  { actual: Boolean, expected: /an/, result: false, itActual: 'Boolean', itExpected: '/an/' },
  { actual: new Boolean(0), expected: /an/, result: true, itActual: 'new Boolean(0)', itExpected: '/an/' },
  { actual: false, expected: /an/, result: true, itActual: 'false', itExpected: '/an/' },
  { actual: true, expected: /an/, result: true, itActual: 'true', itExpected: '/an/' },
  { actual: RegExp, expected: /an/, result: false, itActual: 'RegExp', itExpected: '/an/' },
  { actual: new RegExp('Hello', 'gim'), expected: /an/, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/an/' },
  { actual: /hello/, expected: /an/, result: false, itActual: '/hello/', itExpected: '/an/' },
  { actual: isNaN, expected: /an/, result: false, itActual: 'isNaN', itExpected: '/an/' },
  { actual: isNaN('hello'), expected: /an/, result: true, itActual: 'isNaN("hello")', itExpected: '/an/' },
  { actual: isFinite, expected: /an/, result: false, itActual: 'isFinite', itExpected: '/an/' },
  { actual: isFinite(10), expected: /an/, result: true, itActual: 'isFinite(10)', itExpected: '/an/' },
  { actual: Number.NEGATIVE_INFINITY, expected: /an/, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/an/' },
  { actual: Object, expected: /an/, result: false, itActual: 'Object', itExpected: '/an/' },
  { actual: {}, expected: /an/, result: false, itActual: '{}', itExpected: '/an/' },
  { actual: Error, expected: /an/, result: false, itActual: 'Error', itExpected: '/an/' },
  { actual: TypeError, expected: /an/, result: false, itActual: 'TypeError', itExpected: '/an/' },
  { actual: new Error('error'), expected: /an/, result: false, itActual: 'new Error("error")', itExpected: '/an/' },
  { actual: new TypeError('error'), expected: /an/, result: false, itActual: 'new TypeError("error")', itExpected: '/an/' },
  { actual: undefined, expected: /an/, result: false, itActual: 'undefined', itExpected: '/an/' },
  { actual: null, expected: /an/, result: false, itActual: 'null', itExpected: '/an/' },
  { actual: Infinity, expected: /an/, result: false, itActual: 'Infinity', itExpected: '/an/' },
  { actual: NaN, expected: /an/, result: false, itActual: 'NaN', itExpected: '/an/' },
  { actual: JSON, expected: /an/, result: false, itActual: 'JSON', itExpected: '/an/' },
  { actual: Promise, expected: /an/, result: false, itActual: 'Promise', itExpected: '/an/' },
  { actual: new Promise(() => { }), expected: /an/, result: false, itActual: 'new Promise(()=>{})', itExpected: '/an/' },
  { actual: {}.name, expected: /an/, result: false, itActual: '{}.name', itExpected: '/an/' },
  { actual: RangeError, expected: /an/, result: false, itActual: 'RangeError', itExpected: '/an/' },
  { actual: ReferenceError, expected: /an/, result: false, itActual: 'ReferenceError', itExpected: '/an/' },
  { actual: new RangeError('error'), expected: /an/, result: true, itActual: 'new RangeError("error")', itExpected: '/an/' },
  { actual: new ReferenceError('error'), expected: /an/, result: false, itActual: 'new ReferenceError("error")', itExpected: '/an/' },
  { actual: Name, expected: /an/, result: false, itActual: 'Name', itExpected: '/an/' },
  { actual: new Name(), expected: /an/, result: false, itActual: 'new Name()', itExpected: '/an/' },
  { actual: new instance(), expected: /an/, result: true, itActual: 'new instance()', itExpected: '/an/' },
  { actual: new truthy(), expected: /an/, result: false, itActual: 'new truthy()', itExpected: '/an/' },
  { actual: new falsy(), expected: /an/, result: false, itActual: 'new falsy()', itExpected: '/an/' },
  { actual: new any(), expected: /an/, result: true, itActual: 'new any()', itExpected: '/an/' },
  { actual: new objectable(), expected: /an/, result: false, itActual: 'new objectable()', itExpected: '/an/' },

  { actual: Date, expected: /ANY/i, result: true, itActual: 'Date', itExpected: '/ANY/i' },
  { actual: new Date(), expected: /ANY/i, result: true, itActual: 'new Date()', itExpected: '/ANY/i' },
  { actual: Function, expected: /ANY/i, result: true, itActual: 'Function', itExpected: '/ANY/i' },
  { actual: function () { }, expected: /ANY/i, result: true, itActual: 'function(){}', itExpected: '/ANY/i' },
  { actual: new Function('return "hello"'), expected: /ANY/i, result: true, itActual: 'new Function(\'return "hello"\')', itExpected: '/ANY/i' },
  { actual: (function () { return arguments; })(), expected: /ANY/i, result: true, itActual: '(function(){return arguments;})()', itExpected: '/ANY/i' },
  { actual: () => { }, expected: /ANY/i, result: true, itActual: '()=>{}', itExpected: '/ANY/i' },
  { actual: String, expected: /ANY/i, result: true, itActual: 'String', itExpected: '/ANY/i' },
  { actual: new String('Hello'), expected: /ANY/i, result: true, itActual: 'new String("Hello")', itExpected: '/ANY/i' },
  { actual: new String(''), expected: /ANY/i, result: true, itActual: 'new String("")', itExpected: '/ANY/i' },
  { actual: 'Hello', expected: /ANY/i, result: true, itActual: '"Hello"', itExpected: '/ANY/i' },
  { actual: `Hello`, expected: /ANY/i, result: true, itActual: '`Hello`', itExpected: '/ANY/i' },
  { actual: '', expected: /ANY/i, result: true, itActual: '""', itExpected: '/ANY/i' },
  { actual: Number, expected: /ANY/i, result: true, itActual: 'Number', itExpected: '/ANY/i' },
  { actual: new Number(10), expected: /ANY/i, result: true, itActual: 'new Number(10)', itExpected: '/ANY/i' },
  { actual: new Number(0), expected: /ANY/i, result: true, itActual: 'new Number(0)', itExpected: '/ANY/i' },
  { actual: 10, expected: /ANY/i, result: true, itActual: '10', itExpected: '/ANY/i' },
  { actual: 0, expected: /ANY/i, result: true, itActual: '0', itExpected: '/ANY/i' },
  { actual: Boolean, expected: /ANY/i, result: true, itActual: 'Boolean', itExpected: '/ANY/i' },
  { actual: new Boolean(0), expected: /ANY/i, result: true, itActual: 'new Boolean(0)', itExpected: '/ANY/i' },
  { actual: false, expected: /ANY/i, result: true, itActual: 'false', itExpected: '/ANY/i' },
  { actual: true, expected: /ANY/i, result: true, itActual: 'true', itExpected: '/ANY/i' },
  { actual: RegExp, expected: /ANY/i, result: true, itActual: 'RegExp', itExpected: '/ANY/i' },
  { actual: new RegExp('Hello', 'gim'), expected: /ANY/i, result: true, itActual: 'new RegExp("Hello","gim")', itExpected: '/ANY/i' },
  { actual: /hello/, expected: /ANY/i, result: true, itActual: '/hello/', itExpected: '/ANY/i' },
  { actual: isNaN, expected: /ANY/i, result: true, itActual: 'isNaN', itExpected: '/ANY/i' },
  { actual: isNaN('hello'), expected: /ANY/i, result: true, itActual: 'isNaN("hello")', itExpected: '/ANY/i' },
  { actual: isFinite, expected: /ANY/i, result: true, itActual: 'isFinite', itExpected: '/ANY/i' },
  { actual: isFinite(10), expected: /ANY/i, result: true, itActual: 'isFinite(10)', itExpected: '/ANY/i' },
  { actual: Number.NEGATIVE_INFINITY, expected: /ANY/i, result: true, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/ANY/i' },
  { actual: Object, expected: /ANY/i, result: true, itActual: 'Object', itExpected: '/ANY/i' },
  { actual: {}, expected: /ANY/i, result: true, itActual: '{}', itExpected: '/ANY/i' },
  { actual: Error, expected: /ANY/i, result: true, itActual: 'Error', itExpected: '/ANY/i' },
  { actual: TypeError, expected: /ANY/i, result: true, itActual: 'TypeError', itExpected: '/ANY/i' },
  { actual: new Error('error'), expected: /ANY/i, result: true, itActual: 'new Error("error")', itExpected: '/ANY/i' },
  { actual: new TypeError('error'), expected: /ANY/i, result: true, itActual: 'new TypeError("error")', itExpected: '/ANY/i' },
  { actual: undefined, expected: /ANY/i, result: true, itActual: 'undefined', itExpected: '/ANY/i' },
  { actual: null, expected: /ANY/i, result: true, itActual: 'null', itExpected: '/ANY/i' },
  { actual: Infinity, expected: /ANY/i, result: true, itActual: 'Infinity', itExpected: '/ANY/i' },
  { actual: NaN, expected: /ANY/i, result: true, itActual: 'NaN', itExpected: '/ANY/i' },
  { actual: JSON, expected: /ANY/i, result: true, itActual: 'JSON', itExpected: '/ANY/i' },
  { actual: Promise, expected: /ANY/i, result: true, itActual: 'Promise', itExpected: '/ANY/i' },
  { actual: new Promise(() => { }), expected: /ANY/i, result: true, itActual: 'new Promise(()=>{})', itExpected: '/ANY/i' },
  { actual: {}.name, expected: /ANY/i, result: true, itActual: '{}.name', itExpected: '/ANY/i' },
  { actual: RangeError, expected: /ANY/i, result: true, itActual: 'RangeError', itExpected: '/ANY/i' },
  { actual: ReferenceError, expected: /ANY/i, result: true, itActual: 'ReferenceError', itExpected: '/ANY/i' },
  { actual: new RangeError('error'), expected: /ANY/i, result: true, itActual: 'new RangeError("error")', itExpected: '/ANY/i' },
  { actual: new ReferenceError('error'), expected: /ANY/i, result: true, itActual: 'new ReferenceError("error")', itExpected: '/ANY/i' },
  { actual: Name, expected: /ANY/i, result: true, itActual: 'Name', itExpected: '/ANY/i' },
  { actual: new Name(), expected: /ANY/i, result: true, itActual: 'new Name()', itExpected: '/ANY/i' },
  { actual: new instance(), expected: /ANY/i, result: true, itActual: 'new instance()', itExpected: '/ANY/i' },
  { actual: new truthy(), expected: /ANY/i, result: true, itActual: 'new truthy()', itExpected: '/ANY/i' },
  { actual: new falsy(), expected: /ANY/i, result: true, itActual: 'new falsy()', itExpected: '/ANY/i' },
  { actual: new any(), expected: /ANY/i, result: true, itActual: 'new any()', itExpected: '/ANY/i' },
  { actual: new objectable(), expected: /ANY/i, result: true, itActual: 'new objectable()', itExpected: '/ANY/i' },

  { actual: Date, expected: /AN/i, result: false, itActual: 'Date', itExpected: '/AN/i' },
  { actual: new Date(), expected: /AN/i, result: false, itActual: 'new Date()', itExpected: '/AN/i' },
  { actual: Function, expected: /AN/i, result: false, itActual: 'Function', itExpected: '/AN/i' },
  { actual: function () { }, expected: /AN/i, result: false, itActual: 'function(){}', itExpected: '/AN/i' },
  { actual: new Function('return "hello"'), expected: /AN/i, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/AN/i' },
  { actual: (function () { return arguments; })(), expected: /AN/i, result: false, itActual: '(function(){return arguments;})()', itExpected: '/AN/i' },
  { actual: () => { }, expected: /AN/i, result: false, itActual: '()=>{}', itExpected: '/AN/i' },
  { actual: String, expected: /AN/i, result: false, itActual: 'String', itExpected: '/AN/i' },
  { actual: new String('Hello'), expected: /AN/i, result: false, itActual: 'new String("Hello")', itExpected: '/AN/i' },
  { actual: new String(''), expected: /AN/i, result: false, itActual: 'new String("")', itExpected: '/AN/i' },
  { actual: 'Hello', expected: /AN/i, result: false, itActual: '"Hello"', itExpected: '/AN/i' },
  { actual: `Hello`, expected: /AN/i, result: false, itActual: '`Hello`', itExpected: '/AN/i' },
  { actual: '', expected: /AN/i, result: false, itActual: '""', itExpected: '/AN/i' },
  { actual: Number, expected: /AN/i, result: false, itActual: 'Number', itExpected: '/AN/i' },
  { actual: new Number(10), expected: /AN/i, result: false, itActual: 'new Number(10)', itExpected: '/AN/i' },
  { actual: new Number(0), expected: /AN/i, result: false, itActual: 'new Number(0)', itExpected: '/AN/i' },
  { actual: 10, expected: /AN/i, result: false, itActual: '10', itExpected: '/AN/i' },
  { actual: 0, expected: /AN/i, result: false, itActual: '0', itExpected: '/AN/i' },
  { actual: Boolean, expected: /AN/i, result: false, itActual: 'Boolean', itExpected: '/AN/i' },
  { actual: new Boolean(0), expected: /AN/i, result: true, itActual: 'new Boolean(0)', itExpected: '/AN/i' },
  { actual: false, expected: /AN/i, result: true, itActual: 'false', itExpected: '/AN/i' },
  { actual: true, expected: /AN/i, result: true, itActual: 'true', itExpected: '/AN/i' },
  { actual: RegExp, expected: /AN/i, result: false, itActual: 'RegExp', itExpected: '/AN/i' },
  { actual: new RegExp('Hello', 'gim'), expected: /AN/i, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/AN/i' },
  { actual: /hello/, expected: /AN/i, result: false, itActual: '/hello/', itExpected: '/AN/i' },
  { actual: isNaN, expected: /AN/i, result: false, itActual: 'isNaN', itExpected: '/AN/i' },
  { actual: isNaN('hello'), expected: /AN/i, result: true, itActual: 'isNaN("hello")', itExpected: '/AN/i' },
  { actual: isFinite, expected: /AN/i, result: false, itActual: 'isFinite', itExpected: '/AN/i' },
  { actual: isFinite(10), expected: /AN/i, result: true, itActual: 'isFinite(10)', itExpected: '/AN/i' },
  { actual: Number.NEGATIVE_INFINITY, expected: /AN/i, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/AN/i' },
  { actual: Object, expected: /AN/i, result: false, itActual: 'Object', itExpected: '/AN/i' },
  { actual: {}, expected: /AN/i, result: false, itActual: '{}', itExpected: '/AN/i' },
  { actual: Error, expected: /AN/i, result: false, itActual: 'Error', itExpected: '/AN/i' },
  { actual: TypeError, expected: /AN/i, result: false, itActual: 'TypeError', itExpected: '/AN/i' },
  { actual: new Error('error'), expected: /AN/i, result: false, itActual: 'new Error("error")', itExpected: '/AN/i' },
  { actual: new TypeError('error'), expected: /AN/i, result: false, itActual: 'new TypeError("error")', itExpected: '/AN/i' },
  { actual: undefined, expected: /AN/i, result: false, itActual: 'undefined', itExpected: '/AN/i' },
  { actual: null, expected: /AN/i, result: false, itActual: 'null', itExpected: '/AN/i' },
  { actual: Infinity, expected: /AN/i, result: false, itActual: 'Infinity', itExpected: '/AN/i' },
  { actual: NaN, expected: /AN/i, result: false, itActual: 'NaN', itExpected: '/AN/i' },
  { actual: JSON, expected: /AN/i, result: false, itActual: 'JSON', itExpected: '/AN/i' },
  { actual: Promise, expected: /AN/i, result: false, itActual: 'Promise', itExpected: '/AN/i' },
  { actual: new Promise(() => { }), expected: /AN/i, result: false, itActual: 'new Promise(()=>{})', itExpected: '/AN/i' },
  { actual: {}.name, expected: /AN/i, result: false, itActual: '{}.name', itExpected: '/AN/i' },
  { actual: RangeError, expected: /AN/i, result: false, itActual: 'RangeError', itExpected: '/AN/i' },
  { actual: ReferenceError, expected: /AN/i, result: false, itActual: 'ReferenceError', itExpected: '/AN/i' },
  { actual: new RangeError('error'), expected: /AN/i, result: true, itActual: 'new RangeError("error")', itExpected: '/AN/i' },
  { actual: new ReferenceError('error'), expected: /AN/i, result: false, itActual: 'new ReferenceError("error")', itExpected: '/AN/i' },
  { actual: Name, expected: /AN/i, result: false, itActual: 'Name', itExpected: '/AN/i' },
  { actual: new Name(), expected: /AN/i, result: false, itActual: 'new Name()', itExpected: '/AN/i' },
  { actual: new instance(), expected: /AN/i, result: true, itActual: 'new instance()', itExpected: '/AN/i' },
  { actual: new truthy(), expected: /AN/i, result: false, itActual: 'new truthy()', itExpected: '/AN/i' },
  { actual: new falsy(), expected: /AN/i, result: false, itActual: 'new falsy()', itExpected: '/AN/i' },
  { actual: new any(), expected: /AN/i, result: true, itActual: 'new any()', itExpected: '/AN/i' },
  { actual: new objectable(), expected: /AN/i, result: false, itActual: 'new objectable()', itExpected: '/AN/i' },

  { actual: Date, expected: /truthy/, result: true, itActual: 'Date', itExpected: '/truthy/' },
  { actual: new Date(), expected: /truthy/, result: true, itActual: 'new Date()', itExpected: '/truthy/' },
  { actual: Function, expected: /truthy/, result: true, itActual: 'Function', itExpected: '/truthy/' },
  { actual: function () { }, expected: /truthy/, result: true, itActual: 'function(){}', itExpected: '/truthy/' },
  { actual: new Function('return "hello"'), expected: /truthy/, result: true, itActual: 'new Function(\'return "hello"\')', itExpected: '/truthy/' },
  { actual: (function () { return arguments; })(), expected: /truthy/, result: true, itActual: '(function(){return arguments;})()', itExpected: '/truthy/' },
  { actual: () => { }, expected: /truthy/, result: true, itActual: '()=>{}', itExpected: '/truthy/' },
  { actual: String, expected: /truthy/, result: true, itActual: 'String', itExpected: '/truthy/' },
  { actual: new String('Hello'), expected: /truthy/, result: true, itActual: 'new String("Hello")', itExpected: '/truthy/' },
  { actual: new String(''), expected: /truthy/, result: true, itActual: 'new String("")', itExpected: '/truthy/' },
  { actual: 'Hello', expected: /truthy/, result: true, itActual: '"Hello"', itExpected: '/truthy/' },
  { actual: `Hello`, expected: /truthy/, result: true, itActual: '`Hello`', itExpected: '/truthy/' },
  { actual: '', expected: /truthy/, result: false, itActual: '""', itExpected: '/truthy/' },
  { actual: Number, expected: /truthy/, result: true, itActual: 'Number', itExpected: '/truthy/' },
  { actual: new Number(10), expected: /truthy/, result: true, itActual: 'new Number(10)', itExpected: '/truthy/' },
  { actual: new Number(0), expected: /truthy/, result: true, itActual: 'new Number(0)', itExpected: '/truthy/' },
  { actual: 10, expected: /truthy/, result: true, itActual: '10', itExpected: '/truthy/' },
  { actual: 0, expected: /truthy/, result: false, itActual: '0', itExpected: '/truthy/' },
  { actual: Boolean, expected: /truthy/, result: true, itActual: 'Boolean', itExpected: '/truthy/' },
  { actual: new Boolean(0), expected: /truthy/, result: true, itActual: 'new Boolean(0)', itExpected: '/truthy/' },
  { actual: false, expected: /truthy/, result: false, itActual: 'false', itExpected: '/truthy/' },
  { actual: true, expected: /truthy/, result: true, itActual: 'true', itExpected: '/truthy/' },
  { actual: RegExp, expected: /truthy/, result: true, itActual: 'RegExp', itExpected: '/truthy/' },
  { actual: new RegExp('Hello', 'gim'), expected: /truthy/, result: true, itActual: 'new RegExp("Hello","gim")', itExpected: '/truthy/' },
  { actual: /hello/, expected: /truthy/, result: true, itActual: '/hello/', itExpected: '/truthy/' },
  { actual: isNaN, expected: /truthy/, result: true, itActual: 'isNaN', itExpected: '/truthy/' },
  { actual: isNaN('hello'), expected: /truthy/, result: true, itActual: 'isNaN("hello")', itExpected: '/truthy/' },
  { actual: isFinite, expected: /truthy/, result: true, itActual: 'isFinite', itExpected: '/truthy/' },
  { actual: isFinite(10), expected: /truthy/, result: true, itActual: 'isFinite(10)', itExpected: '/truthy/' },
  { actual: Number.NEGATIVE_INFINITY, expected: /truthy/, result: true, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/truthy/' },
  { actual: Object, expected: /truthy/, result: true, itActual: 'Object', itExpected: '/truthy/' },
  { actual: {}, expected: /truthy/, result: true, itActual: '{}', itExpected: '/truthy/' },
  { actual: Error, expected: /truthy/, result: true, itActual: 'Error', itExpected: '/truthy/' },
  { actual: TypeError, expected: /truthy/, result: true, itActual: 'TypeError', itExpected: '/truthy/' },
  { actual: new Error('error'), expected: /truthy/, result: true, itActual: 'new Error("error")', itExpected: '/truthy/' },
  { actual: new TypeError('error'), expected: /truthy/, result: true, itActual: 'new TypeError("error")', itExpected: '/truthy/' },
  { actual: undefined, expected: /truthy/, result: false, itActual: 'undefined', itExpected: '/truthy/' },
  { actual: null, expected: /truthy/, result: false, itActual: 'null', itExpected: '/truthy/' },
  { actual: Infinity, expected: /truthy/, result: true, itActual: 'Infinity', itExpected: '/truthy/' },
  { actual: NaN, expected: /truthy/, result: false, itActual: 'NaN', itExpected: '/truthy/' },
  { actual: JSON, expected: /truthy/, result: true, itActual: 'JSON', itExpected: '/truthy/' },
  { actual: Promise, expected: /truthy/, result: true, itActual: 'Promise', itExpected: '/truthy/' },
  { actual: new Promise(() => { }), expected: /truthy/, result: true, itActual: 'new Promise(()=>{})', itExpected: '/truthy/' },
  { actual: {}.name, expected: /truthy/, result: false, itActual: '{}.name', itExpected: '/truthy/' },
  { actual: RangeError, expected: /truthy/, result: true, itActual: 'RangeError', itExpected: '/truthy/' },
  { actual: ReferenceError, expected: /truthy/, result: true, itActual: 'ReferenceError', itExpected: '/truthy/' },
  { actual: new RangeError('error'), expected: /truthy/, result: true, itActual: 'new RangeError("error")', itExpected: '/truthy/' },
  { actual: new ReferenceError('error'), expected: /truthy/, result: true, itActual: 'new ReferenceError("error")', itExpected: '/truthy/' },
  { actual: Name, expected: /truthy/, result: true, itActual: 'Name', itExpected: '/truthy/' },
  { actual: new Name(), expected: /truthy/, result: true, itActual: 'new Name()', itExpected: '/truthy/' },
  { actual: new instance(), expected: /truthy/, result: true, itActual: 'new instance()', itExpected: '/truthy/' },
  { actual: new truthy(), expected: /truthy/, result: true, itActual: 'new truthy()', itExpected: '/truthy/' },
  { actual: new falsy(), expected: /truthy/, result: true, itActual: 'new falsy()', itExpected: '/truthy/' },
  { actual: new any(), expected: /truthy/, result: true, itActual: 'new any()', itExpected: '/truthy/' },
  { actual: new objectable(), expected: /truthy/, result: true, itActual: 'new objectable()', itExpected: '/truthy/' },

  { actual: Date, expected: /tru/, result: false, itActual: 'Date', itExpected: '/tru/' },
  { actual: new Date(), expected: /tru/, result: false, itActual: 'new Date()', itExpected: '/tru/' },
  { actual: Function, expected: /tru/, result: false, itActual: 'Function', itExpected: '/tru/' },
  { actual: function () { }, expected: /tru/, result: false, itActual: 'function(){}', itExpected: '/tru/' },
  { actual: new Function('return "hello"'), expected: /tru/, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/tru/' },
  { actual: (function () { return arguments; })(), expected: /tru/, result: false, itActual: '(function(){return arguments;})()', itExpected: '/tru/' },
  { actual: () => { }, expected: /tru/, result: false, itActual: '()=>{}', itExpected: '/tru/' },
  { actual: String, expected: /tru/, result: false, itActual: 'String', itExpected: '/tru/' },
  { actual: new String('Hello'), expected: /tru/, result: false, itActual: 'new String("Hello")', itExpected: '/tru/' },
  { actual: new String(''), expected: /tru/, result: false, itActual: 'new String("")', itExpected: '/tru/' },
  { actual: 'Hello', expected: /tru/, result: false, itActual: '"Hello"', itExpected: '/tru/' },
  { actual: `Hello`, expected: /tru/, result: false, itActual: '`Hello`', itExpected: '/tru/' },
  { actual: '', expected: /tru/, result: false, itActual: '""', itExpected: '/tru/' },
  { actual: Number, expected: /tru/, result: false, itActual: 'Number', itExpected: '/tru/' },
  { actual: new Number(10), expected: /tru/, result: false, itActual: 'new Number(10)', itExpected: '/tru/' },
  { actual: new Number(0), expected: /tru/, result: false, itActual: 'new Number(0)', itExpected: '/tru/' },
  { actual: 10, expected: /tru/, result: false, itActual: '10', itExpected: '/tru/' },
  { actual: 0, expected: /tru/, result: false, itActual: '0', itExpected: '/tru/' },
  { actual: Boolean, expected: /tru/, result: false, itActual: 'Boolean', itExpected: '/tru/' },
  { actual: new Boolean(0), expected: /tru/, result: false, itActual: 'new Boolean(0)', itExpected: '/tru/' },
  { actual: false, expected: /tru/, result: false, itActual: 'false', itExpected: '/tru/' },
  { actual: true, expected: /tru/, result: false, itActual: 'true', itExpected: '/tru/' },
  { actual: RegExp, expected: /tru/, result: false, itActual: 'RegExp', itExpected: '/tru/' },
  { actual: new RegExp('Hello', 'gim'), expected: /tru/, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/tru/' },
  { actual: /hello/, expected: /tru/, result: false, itActual: '/hello/', itExpected: '/tru/' },
  { actual: isNaN, expected: /tru/, result: false, itActual: 'isNaN', itExpected: '/tru/' },
  { actual: isNaN('hello'), expected: /tru/, result: false, itActual: 'isNaN("hello")', itExpected: '/tru/' },
  { actual: isFinite, expected: /tru/, result: false, itActual: 'isFinite', itExpected: '/tru/' },
  { actual: isFinite(10), expected: /tru/, result: false, itActual: 'isFinite(10)', itExpected: '/tru/' },
  { actual: Number.NEGATIVE_INFINITY, expected: /tru/, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/tru/' },
  { actual: Object, expected: /tru/, result: false, itActual: 'Object', itExpected: '/tru/' },
  { actual: {}, expected: /tru/, result: false, itActual: '{}', itExpected: '/tru/' },
  { actual: Error, expected: /tru/, result: false, itActual: 'Error', itExpected: '/tru/' },
  { actual: TypeError, expected: /tru/, result: false, itActual: 'TypeError', itExpected: '/tru/' },
  { actual: new Error('error'), expected: /tru/, result: false, itActual: 'new Error("error")', itExpected: '/tru/' },
  { actual: new TypeError('error'), expected: /tru/, result: false, itActual: 'new TypeError("error")', itExpected: '/tru/' },
  { actual: undefined, expected: /tru/, result: false, itActual: 'undefined', itExpected: '/tru/' },
  { actual: null, expected: /tru/, result: false, itActual: 'null', itExpected: '/tru/' },
  { actual: Infinity, expected: /tru/, result: false, itActual: 'Infinity', itExpected: '/tru/' },
  { actual: NaN, expected: /tru/, result: false, itActual: 'NaN', itExpected: '/tru/' },
  { actual: JSON, expected: /tru/, result: false, itActual: 'JSON', itExpected: '/tru/' },
  { actual: Promise, expected: /tru/, result: false, itActual: 'Promise', itExpected: '/tru/' },
  { actual: new Promise(() => { }), expected: /tru/, result: false, itActual: 'new Promise(()=>{})', itExpected: '/tru/' },
  { actual: {}.name, expected: /tru/, result: false, itActual: '{}.name', itExpected: '/tru/' },
  { actual: RangeError, expected: /tru/, result: false, itActual: 'RangeError', itExpected: '/tru/' },
  { actual: ReferenceError, expected: /tru/, result: false, itActual: 'ReferenceError', itExpected: '/tru/' },
  { actual: new RangeError('error'), expected: /tru/, result: false, itActual: 'new RangeError("error")', itExpected: '/tru/' },
  { actual: new ReferenceError('error'), expected: /tru/, result: false, itActual: 'new ReferenceError("error")', itExpected: '/tru/' },
  { actual: Name, expected: /tru/, result: false, itActual: 'Name', itExpected: '/tru/' },
  { actual: new Name(), expected: /tru/, result: false, itActual: 'new Name()', itExpected: '/tru/' },
  { actual: new instance(), expected: /tru/, result: false, itActual: 'new instance()', itExpected: '/tru/' },
  { actual: new truthy(), expected: /tru/, result: true, itActual: 'new truthy()', itExpected: '/tru/' },
  { actual: new falsy(), expected: /tru/, result: false, itActual: 'new falsy()', itExpected: '/tru/' },
  { actual: new any(), expected: /tru/, result: false, itActual: 'new any()', itExpected: '/tru/' },
  { actual: new objectable(), expected: /tru/, result: false, itActual: 'new objectable()', itExpected: '/tru/' },

  { actual: Date, expected: /TRUthy/i, result: true, itActual: 'Date', itExpected: '/TRUthy/i' },
  { actual: new Date(), expected: /TRUthy/i, result: true, itActual: 'new Date()', itExpected: '/TRUthy/i' },
  { actual: Function, expected: /TRUthy/i, result: true, itActual: 'Function', itExpected: '/TRUthy/i' },
  { actual: function () { }, expected: /TRUthy/i, result: true, itActual: 'function(){}', itExpected: '/TRUthy/i' },
  { actual: new Function('return "hello"'), expected: /TRUthy/i, result: true, itActual: 'new Function(\'return "hello"\')', itExpected: '/TRUthy/i' },
  { actual: (function () { return arguments; })(), expected: /TRUthy/i, result: true, itActual: '(function(){return arguments;})()', itExpected: '/TRUthy/i' },
  { actual: () => { }, expected: /TRUthy/i, result: true, itActual: '()=>{}', itExpected: '/TRUthy/i' },
  { actual: String, expected: /TRUthy/i, result: true, itActual: 'String', itExpected: '/TRUthy/i' },
  { actual: new String('Hello'), expected: /TRUthy/i, result: true, itActual: 'new String("Hello")', itExpected: '/TRUthy/i' },
  { actual: new String(''), expected: /TRUthy/i, result: true, itActual: 'new String("")', itExpected: '/TRUthy/i' },
  { actual: 'Hello', expected: /TRUthy/i, result: true, itActual: '"Hello"', itExpected: '/TRUthy/i' },
  { actual: `Hello`, expected: /TRUthy/i, result: true, itActual: '`Hello`', itExpected: '/TRUthy/i' },
  { actual: '', expected: /TRUthy/i, result: false, itActual: '""', itExpected: '/TRUthy/i' },
  { actual: Number, expected: /TRUthy/i, result: true, itActual: 'Number', itExpected: '/TRUthy/i' },
  { actual: new Number(10), expected: /TRUthy/i, result: true, itActual: 'new Number(10)', itExpected: '/TRUthy/i' },
  { actual: new Number(0), expected: /TRUthy/i, result: true, itActual: 'new Number(0)', itExpected: '/TRUthy/i' },
  { actual: 10, expected: /TRUthy/i, result: true, itActual: '10', itExpected: '/TRUthy/i' },
  { actual: 0, expected: /TRUthy/i, result: false, itActual: '0', itExpected: '/TRUthy/i' },
  { actual: Boolean, expected: /TRUthy/i, result: true, itActual: 'Boolean', itExpected: '/TRUthy/i' },
  { actual: new Boolean(0), expected: /TRUthy/i, result: true, itActual: 'new Boolean(0)', itExpected: '/TRUthy/i' },
  { actual: false, expected: /TRUthy/i, result: false, itActual: 'false', itExpected: '/TRUthy/i' },
  { actual: true, expected: /TRUthy/i, result: true, itActual: 'true', itExpected: '/TRUthy/i' },
  { actual: RegExp, expected: /TRUthy/i, result: true, itActual: 'RegExp', itExpected: '/TRUthy/i' },
  { actual: new RegExp('Hello', 'gim'), expected: /TRUthy/i, result: true, itActual: 'new RegExp("Hello","gim")', itExpected: '/TRUthy/i' },
  { actual: /hello/, expected: /TRUthy/i, result: true, itActual: '/hello/', itExpected: '/TRUthy/i' },
  { actual: isNaN, expected: /TRUthy/i, result: true, itActual: 'isNaN', itExpected: '/TRUthy/i' },
  { actual: isNaN('hello'), expected: /TRUthy/i, result: true, itActual: 'isNaN("hello")', itExpected: '/TRUthy/i' },
  { actual: isFinite, expected: /TRUthy/i, result: true, itActual: 'isFinite', itExpected: '/TRUthy/i' },
  { actual: isFinite(10), expected: /TRUthy/i, result: true, itActual: 'isFinite(10)', itExpected: '/TRUthy/i' },
  { actual: Number.NEGATIVE_INFINITY, expected: /TRUthy/i, result: true, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/TRUthy/i' },
  { actual: Object, expected: /TRUthy/i, result: true, itActual: 'Object', itExpected: '/TRUthy/i' },
  { actual: {}, expected: /TRUthy/i, result: true, itActual: '{}', itExpected: '/TRUthy/i' },
  { actual: Error, expected: /TRUthy/i, result: true, itActual: 'Error', itExpected: '/TRUthy/i' },
  { actual: TypeError, expected: /TRUthy/i, result: true, itActual: 'TypeError', itExpected: '/TRUthy/i' },
  { actual: new Error('error'), expected: /TRUthy/i, result: true, itActual: 'new Error("error")', itExpected: '/TRUthy/i' },
  { actual: new TypeError('error'), expected: /TRUthy/i, result: true, itActual: 'new TypeError("error")', itExpected: '/TRUthy/i' },
  { actual: undefined, expected: /TRUthy/i, result: false, itActual: 'undefined', itExpected: '/TRUthy/i' },
  { actual: null, expected: /TRUthy/i, result: false, itActual: 'null', itExpected: '/TRUthy/i' },
  { actual: Infinity, expected: /TRUthy/i, result: true, itActual: 'Infinity', itExpected: '/TRUthy/i' },
  { actual: NaN, expected: /TRUthy/i, result: false, itActual: 'NaN', itExpected: '/TRUthy/i' },
  { actual: JSON, expected: /TRUthy/i, result: true, itActual: 'JSON', itExpected: '/TRUthy/i' },
  { actual: Promise, expected: /TRUthy/i, result: true, itActual: 'Promise', itExpected: '/TRUthy/i' },
  { actual: new Promise(() => { }), expected: /TRUthy/i, result: true, itActual: 'new Promise(()=>{})', itExpected: '/TRUthy/i' },
  { actual: {}.name, expected: /TRUthy/i, result: false, itActual: '{}.name', itExpected: '/TRUthy/i' },
  { actual: RangeError, expected: /TRUthy/i, result: true, itActual: 'RangeError', itExpected: '/TRUthy/i' },
  { actual: ReferenceError, expected: /TRUthy/i, result: true, itActual: 'ReferenceError', itExpected: '/TRUthy/i' },
  { actual: new RangeError('error'), expected: /TRUthy/i, result: true, itActual: 'new RangeError("error")', itExpected: '/TRUthy/i' },
  { actual: new ReferenceError('error'), expected: /TRUthy/i, result: true, itActual: 'new ReferenceError("error")', itExpected: '/TRUthy/i' },
  { actual: Name, expected: /TRUthy/i, result: true, itActual: 'Name', itExpected: '/TRUthy/i' },
  { actual: new Name(), expected: /TRUthy/i, result: true, itActual: 'new Name()', itExpected: '/TRUthy/i' },
  { actual: new instance(), expected: /TRUthy/i, result: true, itActual: 'new instance()', itExpected: '/TRUthy/i' },
  { actual: new truthy(), expected: /TRUthy/i, result: true, itActual: 'new truthy()', itExpected: '/TRUthy/i' },
  { actual: new falsy(), expected: /TRUthy/i, result: true, itActual: 'new falsy()', itExpected: '/TRUthy/i' },
  { actual: new any(), expected: /TRUthy/i, result: true, itActual: 'new any()', itExpected: '/TRUthy/i' },
  { actual: new objectable(), expected: /TRUthy/i, result: true, itActual: 'new objectable()', itExpected: '/TRUthy/i' },

  { actual: Date, expected: /TrU/i, result: false, itActual: 'Date', itExpected: '/TrU/i' },
  { actual: new Date(), expected: /TrU/i, result: false, itActual: 'new Date()', itExpected: '/TrU/i' },
  { actual: Function, expected: /TrU/i, result: false, itActual: 'Function', itExpected: '/TrU/i' },
  { actual: function () { }, expected: /TrU/i, result: false, itActual: 'function(){}', itExpected: '/TrU/i' },
  { actual: new Function('return "hello"'), expected: /TrU/i, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/TrU/i' },
  { actual: (function () { return arguments; })(), expected: /TrU/i, result: false, itActual: '(function(){return arguments;})()', itExpected: '/TrU/i' },
  { actual: () => { }, expected: /TrU/i, result: false, itActual: '()=>{}', itExpected: '/TrU/i' },
  { actual: String, expected: /TrU/i, result: false, itActual: 'String', itExpected: '/TrU/i' },
  { actual: new String('Hello'), expected: /TrU/i, result: false, itActual: 'new String("Hello")', itExpected: '/TrU/i' },
  { actual: new String(''), expected: /TrU/i, result: false, itActual: 'new String("")', itExpected: '/TrU/i' },
  { actual: 'Hello', expected: /TrU/i, result: false, itActual: '"Hello"', itExpected: '/TrU/i' },
  { actual: `Hello`, expected: /TrU/i, result: false, itActual: '`Hello`', itExpected: '/TrU/i' },
  { actual: '', expected: /TrU/i, result: false, itActual: '""', itExpected: '/TrU/i' },
  { actual: Number, expected: /TrU/i, result: false, itActual: 'Number', itExpected: '/TrU/i' },
  { actual: new Number(10), expected: /TrU/i, result: false, itActual: 'new Number(10)', itExpected: '/TrU/i' },
  { actual: new Number(0), expected: /TrU/i, result: false, itActual: 'new Number(0)', itExpected: '/TrU/i' },
  { actual: 10, expected: /TrU/i, result: false, itActual: '10', itExpected: '/TrU/i' },
  { actual: 0, expected: /TrU/i, result: false, itActual: '0', itExpected: '/TrU/i' },
  { actual: Boolean, expected: /TrU/i, result: false, itActual: 'Boolean', itExpected: '/TrU/i' },
  { actual: new Boolean(0), expected: /TrU/i, result: false, itActual: 'new Boolean(0)', itExpected: '/TrU/i' },
  { actual: false, expected: /TrU/i, result: false, itActual: 'false', itExpected: '/TrU/i' },
  { actual: true, expected: /TrU/i, result: false, itActual: 'true', itExpected: '/TrU/i' },
  { actual: RegExp, expected: /TrU/i, result: false, itActual: 'RegExp', itExpected: '/TrU/i' },
  { actual: new RegExp('Hello', 'gim'), expected: /TrU/i, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/TrU/i' },
  { actual: /hello/, expected: /TrU/i, result: false, itActual: '/hello/', itExpected: '/TrU/i' },
  { actual: isNaN, expected: /TrU/i, result: false, itActual: 'isNaN', itExpected: '/TrU/i' },
  { actual: isNaN('hello'), expected: /TrU/i, result: false, itActual: 'isNaN("hello")', itExpected: '/TrU/i' },
  { actual: isFinite, expected: /TrU/i, result: false, itActual: 'isFinite', itExpected: '/TrU/i' },
  { actual: isFinite(10), expected: /TrU/i, result: false, itActual: 'isFinite(10)', itExpected: '/TrU/i' },
  { actual: Number.NEGATIVE_INFINITY, expected: /TrU/i, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/TrU/i' },
  { actual: Object, expected: /TrU/i, result: false, itActual: 'Object', itExpected: '/TrU/i' },
  { actual: {}, expected: /TrU/i, result: false, itActual: '{}', itExpected: '/TrU/i' },
  { actual: Error, expected: /TrU/i, result: false, itActual: 'Error', itExpected: '/TrU/i' },
  { actual: TypeError, expected: /TrU/i, result: false, itActual: 'TypeError', itExpected: '/TrU/i' },
  { actual: new Error('error'), expected: /TrU/i, result: false, itActual: 'new Error("error")', itExpected: '/TrU/i' },
  { actual: new TypeError('error'), expected: /TrU/i, result: false, itActual: 'new TypeError("error")', itExpected: '/TrU/i' },
  { actual: undefined, expected: /TrU/i, result: false, itActual: 'undefined', itExpected: '/TrU/i' },
  { actual: null, expected: /TrU/i, result: false, itActual: 'null', itExpected: '/TrU/i' },
  { actual: Infinity, expected: /TrU/i, result: false, itActual: 'Infinity', itExpected: '/TrU/i' },
  { actual: NaN, expected: /TrU/i, result: false, itActual: 'NaN', itExpected: '/TrU/i' },
  { actual: JSON, expected: /TrU/i, result: false, itActual: 'JSON', itExpected: '/TrU/i' },
  { actual: Promise, expected: /TrU/i, result: false, itActual: 'Promise', itExpected: '/TrU/i' },
  { actual: new Promise(() => { }), expected: /TrU/i, result: false, itActual: 'new Promise(()=>{})', itExpected: '/TrU/i' },
  { actual: {}.name, expected: /TrU/i, result: false, itActual: '{}.name', itExpected: '/TrU/i' },
  { actual: RangeError, expected: /TrU/i, result: false, itActual: 'RangeError', itExpected: '/TrU/i' },
  { actual: ReferenceError, expected: /TrU/i, result: false, itActual: 'ReferenceError', itExpected: '/TrU/i' },
  { actual: new RangeError('error'), expected: /TrU/i, result: false, itActual: 'new RangeError("error")', itExpected: '/TrU/i' },
  { actual: new ReferenceError('error'), expected: /TrU/i, result: false, itActual: 'new ReferenceError("error")', itExpected: '/TrU/i' },
  { actual: Name, expected: /TrU/i, result: false, itActual: 'Name', itExpected: '/TrU/i' },
  { actual: new Name(), expected: /TrU/i, result: false, itActual: 'new Name()', itExpected: '/TrU/i' },
  { actual: new instance(), expected: /TrU/i, result: false, itActual: 'new instance()', itExpected: '/TrU/i' },
  { actual: new truthy(), expected: /TrU/i, result: true, itActual: 'new truthy()', itExpected: '/TrU/i' },
  { actual: new falsy(), expected: /TrU/i, result: false, itActual: 'new falsy()', itExpected: '/TrU/i' },
  { actual: new any(), expected: /TrU/i, result: false, itActual: 'new any()', itExpected: '/TrU/i' },
  { actual: new objectable(), expected: /TrU/i, result: false, itActual: 'new objectable()', itExpected: '/TrU/i' },

  { actual: Date, expected: /TRUthy/, result: false, itActual: 'Date', itExpected: '/TRUthy/' },
  { actual: new Date(), expected: /TRUthy/, result: false, itActual: 'new Date()', itExpected: '/TRUthy/' },
  { actual: Function, expected: /TRUthy/, result: false, itActual: 'Function', itExpected: '/TRUthy/' },
  { actual: function () { }, expected: /TRUthy/, result: false, itActual: 'function(){}', itExpected: '/TRUthy/' },
  { actual: new Function('return "hello"'), expected: /TRUthy/, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/TRUthy/' },
  { actual: (function () { return arguments; })(), expected: /TRUthy/, result: false, itActual: '(function(){return arguments;})()', itExpected: '/TRUthy/' },
  { actual: () => { }, expected: /TRUthy/, result: false, itActual: '()=>{}', itExpected: '/TRUthy/' },
  { actual: String, expected: /TRUthy/, result: false, itActual: 'String', itExpected: '/TRUthy/' },
  { actual: new String('Hello'), expected: /TRUthy/, result: false, itActual: 'new String("Hello")', itExpected: '/TRUthy/' },
  { actual: new String(''), expected: /TRUthy/, result: false, itActual: 'new String("")', itExpected: '/TRUthy/' },
  { actual: 'Hello', expected: /TRUthy/, result: false, itActual: '"Hello"', itExpected: '/TRUthy/' },
  { actual: `Hello`, expected: /TRUthy/, result: false, itActual: '`Hello`', itExpected: '/TRUthy/' },
  { actual: '', expected: /TRUthy/, result: false, itActual: '""', itExpected: '/TRUthy/' },
  { actual: Number, expected: /TRUthy/, result: false, itActual: 'Number', itExpected: '/TRUthy/' },
  { actual: new Number(10), expected: /TRUthy/, result: false, itActual: 'new Number(10)', itExpected: '/TRUthy/' },
  { actual: new Number(0), expected: /TRUthy/, result: false, itActual: 'new Number(0)', itExpected: '/TRUthy/' },
  { actual: 10, expected: /TRUthy/, result: false, itActual: '10', itExpected: '/TRUthy/' },
  { actual: 0, expected: /TRUthy/, result: false, itActual: '0', itExpected: '/TRUthy/' },
  { actual: Boolean, expected: /TRUthy/, result: false, itActual: 'Boolean', itExpected: '/TRUthy/' },
  { actual: new Boolean(0), expected: /TRUthy/, result: false, itActual: 'new Boolean(0)', itExpected: '/TRUthy/' },
  { actual: false, expected: /TRUthy/, result: false, itActual: 'false', itExpected: '/TRUthy/' },
  { actual: true, expected: /TRUthy/, result: false, itActual: 'true', itExpected: '/TRUthy/' },
  { actual: RegExp, expected: /TRUthy/, result: false, itActual: 'RegExp', itExpected: '/TRUthy/' },
  { actual: new RegExp('Hello', 'gim'), expected: /TRUthy/, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/TRUthy/' },
  { actual: /hello/, expected: /TRUthy/, result: false, itActual: '/hello/', itExpected: '/TRUthy/' },
  { actual: isNaN, expected: /TRUthy/, result: false, itActual: 'isNaN', itExpected: '/TRUthy/' },
  { actual: isNaN('hello'), expected: /TRUthy/, result: false, itActual: 'isNaN("hello")', itExpected: '/TRUthy/' },
  { actual: isFinite, expected: /TRUthy/, result: false, itActual: 'isFinite', itExpected: '/TRUthy/' },
  { actual: isFinite(10), expected: /TRUthy/, result: false, itActual: 'isFinite(10)', itExpected: '/TRUthy/' },
  { actual: Number.NEGATIVE_INFINITY, expected: /TRUthy/, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/TRUthy/' },
  { actual: Object, expected: /TRUthy/, result: false, itActual: 'Object', itExpected: '/TRUthy/' },
  { actual: {}, expected: /TRUthy/, result: false, itActual: '{}', itExpected: '/TRUthy/' },
  { actual: Error, expected: /TRUthy/, result: false, itActual: 'Error', itExpected: '/TRUthy/' },
  { actual: TypeError, expected: /TRUthy/, result: false, itActual: 'TypeError', itExpected: '/TRUthy/' },
  { actual: new Error('error'), expected: /TRUthy/, result: false, itActual: 'new Error("error")', itExpected: '/TRUthy/' },
  { actual: new TypeError('error'), expected: /TRUthy/, result: false, itActual: 'new TypeError("error")', itExpected: '/TRUthy/' },
  { actual: undefined, expected: /TRUthy/, result: false, itActual: 'undefined', itExpected: '/TRUthy/' },
  { actual: null, expected: /TRUthy/, result: false, itActual: 'null', itExpected: '/TRUthy/' },
  { actual: Infinity, expected: /TRUthy/, result: false, itActual: 'Infinity', itExpected: '/TRUthy/' },
  { actual: NaN, expected: /TRUthy/, result: false, itActual: 'NaN', itExpected: '/TRUthy/' },
  { actual: JSON, expected: /TRUthy/, result: false, itActual: 'JSON', itExpected: '/TRUthy/' },
  { actual: Promise, expected: /TRUthy/, result: false, itActual: 'Promise', itExpected: '/TRUthy/' },
  { actual: new Promise(() => { }), expected: /TRUthy/, result: false, itActual: 'new Promise(()=>{})', itExpected: '/TRUthy/' },
  { actual: {}.name, expected: /TRUthy/, result: false, itActual: '{}.name', itExpected: '/TRUthy/' },
  { actual: RangeError, expected: /TRUthy/, result: false, itActual: 'RangeError', itExpected: '/TRUthy/' },
  { actual: ReferenceError, expected: /TRUthy/, result: false, itActual: 'ReferenceError', itExpected: '/TRUthy/' },
  { actual: new RangeError('error'), expected: /TRUthy/, result: false, itActual: 'new RangeError("error")', itExpected: '/TRUthy/' },
  { actual: new ReferenceError('error'), expected: /TRUthy/, result: false, itActual: 'new ReferenceError("error")', itExpected: '/TRUthy/' },
  { actual: Name, expected: /TRUthy/, result: false, itActual: 'Name', itExpected: '/TRUthy/' },
  { actual: new Name(), expected: /TRUthy/, result: false, itActual: 'new Name()', itExpected: '/TRUthy/' },
  { actual: new instance(), expected: /TRUthy/, result: false, itActual: 'new instance()', itExpected: '/TRUthy/' },
  { actual: new truthy(), expected: /TRUthy/, result: false, itActual: 'new truthy()', itExpected: '/TRUthy/' },
  { actual: new falsy(), expected: /TRUthy/, result: false, itActual: 'new falsy()', itExpected: '/TRUthy/' },
  { actual: new any(), expected: /TRUthy/, result: false, itActual: 'new any()', itExpected: '/TRUthy/' },
  { actual: new objectable(), expected: /TRUthy/, result: false, itActual: 'new objectable()', itExpected: '/TRUthy/' },

  { actual: Date, expected: /TRU/, result: false, itActual: 'Date', itExpected: '/TRU/' },
  { actual: new Date(), expected: /TRU/, result: false, itActual: 'new Date()', itExpected: '/TRU/' },
  { actual: Function, expected: /TRU/, result: false, itActual: 'Function', itExpected: '/TRU/' },
  { actual: function () { }, expected: /TRU/, result: false, itActual: 'function(){}', itExpected: '/TRU/' },
  { actual: new Function('return "hello"'), expected: /TRU/, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/TRU/' },
  { actual: (function () { return arguments; })(), expected: /TRU/, result: false, itActual: '(function(){return arguments;})()', itExpected: '/TRU/' },
  { actual: () => { }, expected: /TRU/, result: false, itActual: '()=>{}', itExpected: '/TRU/' },
  { actual: String, expected: /TRU/, result: false, itActual: 'String', itExpected: '/TRU/' },
  { actual: new String('Hello'), expected: /TRU/, result: false, itActual: 'new String("Hello")', itExpected: '/TRU/' },
  { actual: new String(''), expected: /TRU/, result: false, itActual: 'new String("")', itExpected: '/TRU/' },
  { actual: 'Hello', expected: /TRU/, result: false, itActual: '"Hello"', itExpected: '/TRU/' },
  { actual: `Hello`, expected: /TRU/, result: false, itActual: '`Hello`', itExpected: '/TRU/' },
  { actual: '', expected: /TRU/, result: false, itActual: '""', itExpected: '/TRU/' },
  { actual: Number, expected: /TRU/, result: false, itActual: 'Number', itExpected: '/TRU/' },
  { actual: new Number(10), expected: /TRU/, result: false, itActual: 'new Number(10)', itExpected: '/TRU/' },
  { actual: new Number(0), expected: /TRU/, result: false, itActual: 'new Number(0)', itExpected: '/TRU/' },
  { actual: 10, expected: /TRU/, result: false, itActual: '10', itExpected: '/TRU/' },
  { actual: 0, expected: /TRU/, result: false, itActual: '0', itExpected: '/TRU/' },
  { actual: Boolean, expected: /TRU/, result: false, itActual: 'Boolean', itExpected: '/TRU/' },
  { actual: new Boolean(0), expected: /TRU/, result: false, itActual: 'new Boolean(0)', itExpected: '/TRU/' },
  { actual: false, expected: /TRU/, result: false, itActual: 'false', itExpected: '/TRU/' },
  { actual: true, expected: /TRU/, result: false, itActual: 'true', itExpected: '/TRU/' },
  { actual: RegExp, expected: /TRU/, result: false, itActual: 'RegExp', itExpected: '/TRU/' },
  { actual: new RegExp('Hello', 'gim'), expected: /TRU/, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/TRU/' },
  { actual: /hello/, expected: /TRU/, result: false, itActual: '/hello/', itExpected: '/TRU/' },
  { actual: isNaN, expected: /TRU/, result: false, itActual: 'isNaN', itExpected: '/TRU/' },
  { actual: isNaN('hello'), expected: /TRU/, result: false, itActual: 'isNaN("hello")', itExpected: '/TRU/' },
  { actual: isFinite, expected: /TRU/, result: false, itActual: 'isFinite', itExpected: '/TRU/' },
  { actual: isFinite(10), expected: /TRU/, result: false, itActual: 'isFinite(10)', itExpected: '/TRU/' },
  { actual: Number.NEGATIVE_INFINITY, expected: /TRU/, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/TRU/' },
  { actual: Object, expected: /TRU/, result: false, itActual: 'Object', itExpected: '/TRU/' },
  { actual: {}, expected: /TRU/, result: false, itActual: '{}', itExpected: '/TRU/' },
  { actual: Error, expected: /TRU/, result: false, itActual: 'Error', itExpected: '/TRU/' },
  { actual: TypeError, expected: /TRU/, result: false, itActual: 'TypeError', itExpected: '/TRU/' },
  { actual: new Error('error'), expected: /TRU/, result: false, itActual: 'new Error("error")', itExpected: '/TRU/' },
  { actual: new TypeError('error'), expected: /TRU/, result: false, itActual: 'new TypeError("error")', itExpected: '/TRU/' },
  { actual: undefined, expected: /TRU/, result: false, itActual: 'undefined', itExpected: '/TRU/' },
  { actual: null, expected: /TRU/, result: false, itActual: 'null', itExpected: '/TRU/' },
  { actual: Infinity, expected: /TRU/, result: false, itActual: 'Infinity', itExpected: '/TRU/' },
  { actual: NaN, expected: /TRU/, result: false, itActual: 'NaN', itExpected: '/TRU/' },
  { actual: JSON, expected: /TRU/, result: false, itActual: 'JSON', itExpected: '/TRU/' },
  { actual: Promise, expected: /TRU/, result: false, itActual: 'Promise', itExpected: '/TRU/' },
  { actual: new Promise(() => { }), expected: /TRU/, result: false, itActual: 'new Promise(()=>{})', itExpected: '/TRU/' },
  { actual: {}.name, expected: /TRU/, result: false, itActual: '{}.name', itExpected: '/TRU/' },
  { actual: RangeError, expected: /TRU/, result: false, itActual: 'RangeError', itExpected: '/TRU/' },
  { actual: ReferenceError, expected: /TRU/, result: false, itActual: 'ReferenceError', itExpected: '/TRU/' },
  { actual: new RangeError('error'), expected: /TRU/, result: false, itActual: 'new RangeError("error")', itExpected: '/TRU/' },
  { actual: new ReferenceError('error'), expected: /TRU/, result: false, itActual: 'new ReferenceError("error")', itExpected: '/TRU/' },
  { actual: Name, expected: /TRU/, result: false, itActual: 'Name', itExpected: '/TRU/' },
  { actual: new Name(), expected: /TRU/, result: false, itActual: 'new Name()', itExpected: '/TRU/' },
  { actual: new instance(), expected: /TRU/, result: false, itActual: 'new instance()', itExpected: '/TRU/' },
  { actual: new truthy(), expected: /TRU/, result: false, itActual: 'new truthy()', itExpected: '/TRU/' },
  { actual: new falsy(), expected: /TRU/, result: false, itActual: 'new falsy()', itExpected: '/TRU/' },
  { actual: new any(), expected: /TRU/, result: false, itActual: 'new any()', itExpected: '/TRU/' },
  { actual: new objectable(), expected: /TRU/, result: false, itActual: 'new objectable()', itExpected: '/TRU/' },

  { actual: Date, expected: /truthy|date/i, result: true, itActual: 'Date', itExpected: '/truthy|string/i' },
  { actual: new Date(), expected: /truthy|string/i, result: true, itActual: 'new Date()', itExpected: '/truthy|string/i' },
  { actual: Function, expected: /truthy|string/i, result: true, itActual: 'Function', itExpected: '/truthy|string/i' },
  { actual: function () { }, expected: /truthy|string/i, result: true, itActual: 'function(){}', itExpected: '/truthy|string/i' },
  { actual: new Function('return "hello"'), expected: /truthy|string/i, result: true, itActual: 'new Function(\'return "hello"\')', itExpected: '/truthy|string/i' },
  { actual: (function () { return arguments; })(), expected: /truthy|string/i, result: true, itActual: '(function(){return arguments;})()', itExpected: '/truthy|string/i' },
  { actual: () => { }, expected: /truthy|string/i, result: true, itActual: '()=>{}', itExpected: '/truthy|string/i' },
  { actual: String, expected: /truthy|string/i, result: true, itActual: 'String', itExpected: '/truthy|string/i' },
  { actual: new String('Hello'), expected: /truthy|object/i, result: true, itActual: 'new String("Hello")', itExpected: '/truthy|object/i' },
  { actual: new String(''), expected: /truthy|object/i, result: true, itActual: 'new String("")', itExpected: '/truthy|object/i' },
  { actual: 'Hello', expected: /truthy|object/i, result: true, itActual: '"Hello"', itExpected: '/truthy|object/i' },
  { actual: `Hello`, expected: /truthy|object/i, result: true, itActual: '`Hello`', itExpected: '/truthy|object/i' },
  { actual: '', expected: /truthy|object/i, result: false, itActual: '""', itExpected: '/truthy|object/i' },
  { actual: Number, expected: /truthy|number/i, result: true, itActual: 'Number', itExpected: '/truthy|number/i' },
  { actual: new Number(10), expected: /truthy|object/i, result: true, itActual: 'new Number(10)', itExpected: '/truthy|object/i' },
  { actual: new Number(0), expected: /truthy|object/i, result: true, itActual: 'new Number(0)', itExpected: '/truthy|object/i' },
  { actual: 10, expected: /truthy|object/i, result: true, itActual: '10', itExpected: '/truthy|object/i' },
  { actual: 0, expected: /truthy|object/i, result: false, itActual: '0', itExpected: '/truthy|object/i' },
  { actual: Boolean, expected: /truthy|boolean/i, result: true, itActual: 'Boolean', itExpected: '/truthy|boolean/i' },
  { actual: new Boolean(0), expected: /truthy|object/i, result: true, itActual: 'new Boolean(0)', itExpected: '/truthy|object/i' },
  { actual: false, expected: /truthy|object/i, result: false, itActual: 'false', itExpected: '/truthy|object/i' },
  { actual: true, expected: /truthy|object/i, result: true, itActual: 'true', itExpected: '/truthy|object/i' },
  { actual: RegExp, expected: /truthy|regexp/i, result: true, itActual: 'RegExp', itExpected: '/truthy|regexp/i' },
  { actual: new RegExp('Hello', 'gim'), expected: /truthy|object/i, result: true, itActual: 'new RegExp("Hello","gim")', itExpected: '/truthy|object/i' },
  { actual: /hello/, expected: /truthy|object/i, result: true, itActual: '/hello/', itExpected: '/truthy|object/i' },
  { actual: isNaN, expected: /truthy|object/i, result: true, itActual: 'isNaN', itExpected: '/truthy|object/i' },
  { actual: isNaN('hello'), expected: /truthy|object/i, result: true, itActual: 'isNaN("hello")', itExpected: '/truthy|object/i' },
  { actual: isFinite, expected: /truthy|object/i, result: true, itActual: 'isFinite', itExpected: '/truthy|object/i' },
  { actual: isFinite(10), expected: /truthy|object/i, result: true, itActual: 'isFinite(10)', itExpected: '/truthy|object/i' },
  { actual: Number.NEGATIVE_INFINITY, expected: /truthy|object/i, result: true, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/truthy|object/i' },
  { actual: Object, expected: /truthy|object/i, result: true, itActual: 'Object', itExpected: '/truthy|object/i' },
  { actual: {}, expected: /truthy|function/i, result: true, itActual: '{}', itExpected: '/truthy|function/i' },
  { actual: Error, expected: /truthy|error/i, result: true, itActual: 'Error', itExpected: '/truthy|error/i' },
  { actual: TypeError, expected: /truthy|error/i, result: true, itActual: 'TypeError', itExpected: '/truthy|error/i' },
  { actual: new Error('error'), expected: /truthy|object/i, result: true, itActual: 'new Error("error")', itExpected: '/truthy|object/i' },
  { actual: new TypeError('error'), expected: /truthy|object/i, result: true, itActual: 'new TypeError("error")', itExpected: '/truthy|object/i' },
  { actual: undefined, expected: /truthy|object/i, result: false, itActual: 'undefined', itExpected: '/truthy|object/i' },
  { actual: null, expected: /truthy|object/i, result: false, itActual: 'null', itExpected: '/truthy|object/i' },
  { actual: Infinity, expected: /truthy|object/i, result: true, itActual: 'Infinity', itExpected: '/truthy|object/i' },
  { actual: NaN, expected: /truthy|object/i, result: false, itActual: 'NaN', itExpected: '/truthy|object/i' },
  { actual: JSON, expected: /truthy|function/i, result: true, itActual: 'JSON', itExpected: '/truthy|function/i' },
  { actual: Promise, expected: /truthy|object/i, result: true, itActual: 'Promise', itExpected: '/truthy|object/i' },
  { actual: new Promise(() => { }), expected: /truthy|object/i, result: true, itActual: 'new Promise(()=>{})', itExpected: '/truthy|object/i' },
  { actual: {}.name, expected: /truthy|object/i, result: false, itActual: '{}.name', itExpected: '/truthy|object/i' },
  { actual: RangeError, expected: /truthy|error/i, result: true, itActual: 'RangeError', itExpected: '/truthy|error/i' },
  { actual: ReferenceError, expected: /truthy|error/i, result: true, itActual: 'ReferenceError', itExpected: '/truthy|error/i' },
  { actual: new RangeError('error'), expected: /truthy|object/i, result: true, itActual: 'new RangeError("error")', itExpected: '/truthy|object/i' },
  { actual: new ReferenceError('error'), expected: /truthy|object/i, result: true, itActual: 'new ReferenceError("error")', itExpected: '/truthy|object/i' },
  { actual: Name, expected: /truthy|object/i, result: true, itActual: 'Name', itExpected: '/truthy|object/i' },
  { actual: new Name(), expected: /truthy|object/i, result: true, itActual: 'new Name()', itExpected: '/truthy|object/i' },
  { actual: new instance(), expected: /truthy|object/i, result: true, itActual: 'new instance()', itExpected: '/truthy|object/i' },
  { actual: new truthy(), expected: /truthy|object/i, result: true, itActual: 'new truthy()', itExpected: '/truthy|object/i' },
  { actual: new falsy(), expected: /truthy|object/i, result: true, itActual: 'new falsy()', itExpected: '/truthy|object/i' },
  { actual: new any(), expected: /truthy|object/i, result: true, itActual: 'new any()', itExpected: '/truthy|object/i' },
  { actual: new objectable(), expected: /truthy|object/i, result: true, itActual: 'new objectable()', itExpected: '/truthy|object/i' },

  { actual: Date, expected: /instance/, result: false, itActual: 'Date', itExpected: '/instance/' },
  { actual: new Date(), expected: /instance/, result: false, itActual: 'new Date()', itExpected: '/instance/' },
  { actual: Function, expected: /instance/, result: false, itActual: 'Function', itExpected: '/instance/' },
  { actual: function () { }, expected: /instance/, result: false, itActual: 'function(){}', itExpected: '/instance/' },
  { actual: new Function('return "hello"'), expected: /instance/, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/instance/' },
  { actual: (function () { return arguments; })(), expected: /instance/, result: false, itActual: '(function(){return arguments;})()', itExpected: '/instance/' },
  { actual: () => { }, expected: /instance/, result: false, itActual: '()=>{}', itExpected: '/instance/' },
  { actual: String, expected: /instance/, result: false, itActual: 'String', itExpected: '/instance/' },
  { actual: new String('Hello'), expected: /instance/, result: false, itActual: 'new String("Hello")', itExpected: '/instance/' },
  { actual: new String(''), expected: /instance/, result: false, itActual: 'new String("")', itExpected: '/instance/' },
  { actual: 'Hello', expected: /instance/, result: false, itActual: '"Hello"', itExpected: '/instance/' },
  { actual: `Hello`, expected: /instance/, result: false, itActual: '`Hello`', itExpected: '/instance/' },
  { actual: '', expected: /instance/, result: false, itActual: '""', itExpected: '/instance/' },
  { actual: Number, expected: /instance/, result: false, itActual: 'Number', itExpected: '/instance/' },
  { actual: new Number(10), expected: /instance/, result: false, itActual: 'new Number(10)', itExpected: '/instance/' },
  { actual: new Number(0), expected: /instance/, result: false, itActual: 'new Number(0)', itExpected: '/instance/' },
  { actual: 10, expected: /instance/, result: false, itActual: '10', itExpected: '/instance/' },
  { actual: 0, expected: /instance/, result: false, itActual: '0', itExpected: '/instance/' },
  { actual: Boolean, expected: /instance/, result: false, itActual: 'Boolean', itExpected: '/instance/' },
  { actual: new Boolean(0), expected: /instance/, result: false, itActual: 'new Boolean(0)', itExpected: '/instance/' },
  { actual: false, expected: /instance/, result: false, itActual: 'false', itExpected: '/instance/' },
  { actual: true, expected: /instance/, result: false, itActual: 'true', itExpected: '/instance/' },
  { actual: RegExp, expected: /instance/, result: false, itActual: 'RegExp', itExpected: '/instance/' },
  { actual: new RegExp('Hello', 'gim'), expected: /instance/, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/instance/' },
  { actual: /hello/, expected: /instance/, result: false, itActual: '/hello/', itExpected: '/instance/' },
  { actual: isNaN, expected: /instance/, result: false, itActual: 'isNaN', itExpected: '/instance/' },
  { actual: isNaN('hello'), expected: /instance/, result: false, itActual: 'isNaN("hello")', itExpected: '/instance/' },
  { actual: isFinite, expected: /instance/, result: false, itActual: 'isFinite', itExpected: '/instance/' },
  { actual: isFinite(10), expected: /instance/, result: false, itActual: 'isFinite(10)', itExpected: '/instance/' },
  { actual: Number.NEGATIVE_INFINITY, expected: /instance/, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/instance/' },
  { actual: Object, expected: /instance/, result: false, itActual: 'Object', itExpected: '/instance/' },
  { actual: {}, expected: /instance/, result: false, itActual: '{}', itExpected: '/instance/' },
  { actual: Error, expected: /instance/, result: false, itActual: 'Error', itExpected: '/instance/' },
  { actual: TypeError, exp1ected: /instance/, result: false, itActual: 'TypeError', itExpected: '/instance/' },
  { actual: new Error('error'), expected: /instance/, result: false, itActual: 'new Error("error")', itExpected: '/instance/' },
  { actual: new TypeError('error'), expected: /instance/, result: false, itActual: 'new TypeError("error")', itExpected: '/instance/' },
  { actual: undefined, expected: /instance/, result: false, itActual: 'undefined', itExpected: '/instance/' },
  { actual: null, expected: /instance/, result: false, itActual: 'null', itExpected: '/instance/' },
  { actual: Infinity, expected: /instance/, result: false, itActual: 'Infinity', itExpected: '/instance/' },
  { actual: NaN, expected: /instance/, result: false, itActual: 'NaN', itExpected: '/instance/' },
  { actual: JSON, expected: /instance/, result: false, itActual: 'JSON', itExpected: '/instance/' },
  { actual: Promise, expected: /instance/, result: false, itActual: 'Promise', itExpected: '/instance/' },
  { actual: new Promise(() => { }), expected: /instance/, result: false, itActual: 'new Promise(()=>{})', itExpected: '/instance/' },
  { actual: {}.name, expected: /instance/, result: false, itActual: '{}.name', itExpected: '/instance/' },
  { actual: RangeError, expected: /instance/, result: false, itActual: 'RangeError', itExpected: '/instance/' },
  { actual: ReferenceError, expected: /instance/, result: false, itActual: 'ReferenceError', itExpected: '/instance/' },
  { actual: new RangeError('error'), expected: /instance/, result: false, itActual: 'new RangeError("error")', itExpected: '/instance/' },
  { actual: new ReferenceError('error'), expected: /instance/, result: false, itActual: 'new ReferenceError("error")', itExpected: '/instance/' },
  { actual: Name, expected: /instance/, result: false, itActual: 'Name', itExpected: '/instance/' },
  { actual: new Name(), expected: /instance/, result: true, itActual: 'new Name()', itExpected: '/instance/' },
  { actual: new instance(), expected: /instance/, result: true, itActual: 'new instance()', itExpected: '/instance/' },
  { actual: new truthy(), expected: /instance/, result: true, itActual: 'new truthy()', itExpected: '/instance/' },
  { actual: new falsy(), expected: /instance/, result: true, itActual: 'new falsy()', itExpected: '/instance/' },
  { actual: new any(), expected: /instance/, result: true, itActual: 'new any()', itExpected: '/instance/' },
  { actual: new objectable(), expected: /instance/, result: true, itActual: 'new objectable()', itExpected: '/instance/' },

  { actual: Date, expected: /inst/, result: false, itActual: 'Date', itExpected: '/inst/' },
  { actual: new Date(), expected: /inst/, result: false, itActual: 'new Date()', itExpected: '/inst/' },
  { actual: Function, expected: /inst/, result: false, itActual: 'Function', itExpected: '/inst/' },
  { actual: function () { }, expected: /inst/, result: false, itActual: 'function(){}', itExpected: '/inst/' },
  { actual: new Function('return "hello"'), expected: /inst/, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/inst/' },
  { actual: (function () { return arguments; })(), expected: /inst/, result: false, itActual: '(function(){return arguments;})()', itExpected: '/inst/' },
  { actual: () => { }, expected: /inst/, result: false, itActual: '()=>{}', itExpected: '/inst/' },
  { actual: String, expected: /inst/, result: false, itActual: 'String', itExpected: '/inst/' },
  { actual: new String('Hello'), expected: /inst/, result: false, itActual: 'new String("Hello")', itExpected: '/inst/' },
  { actual: new String(''), expected: /inst/, result: false, itActual: 'new String("")', itExpected: '/inst/' },
  { actual: 'Hello', expected: /inst/, result: false, itActual: '"Hello"', itExpected: '/inst/' },
  { actual: `Hello`, expected: /inst/, result: false, itActual: '`Hello`', itExpected: '/inst/' },
  { actual: '', expected: /inst/, result: false, itActual: '""', itExpected: '/inst/' },
  { actual: Number, expected: /inst/, result: false, itActual: 'Number', itExpected: '/inst/' },
  { actual: new Number(10), expected: /inst/, result: false, itActual: 'new Number(10)', itExpected: '/inst/' },
  { actual: new Number(0), expected: /inst/, result: false, itActual: 'new Number(0)', itExpected: '/inst/' },
  { actual: 10, expected: /inst/, result: false, itActual: '10', itExpected: '/inst/' },
  { actual: 0, expected: /inst/, result: false, itActual: '0', itExpected: '/inst/' },
  { actual: Boolean, expected: /inst/, result: false, itActual: 'Boolean', itExpected: '/inst/' },
  { actual: new Boolean(0), expected: /inst/, result: false, itActual: 'new Boolean(0)', itExpected: '/inst/' },
  { actual: false, expected: /inst/, result: false, itActual: 'false', itExpected: '/inst/' },
  { actual: true, expected: /inst/, result: false, itActual: 'true', itExpected: '/inst/' },
  { actual: RegExp, expected: /inst/, result: false, itActual: 'RegExp', itExpected: '/inst/' },
  { actual: new RegExp('Hello', 'gim'), expected: /inst/, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/inst/' },
  { actual: /hello/, expected: /inst/, result: false, itActual: '/hello/', itExpected: '/inst/' },
  { actual: isNaN, expected: /inst/, result: false, itActual: 'isNaN', itExpected: '/inst/' },
  { actual: isNaN('hello'), expected: /inst/, result: false, itActual: 'isNaN("hello")', itExpected: '/inst/' },
  { actual: isFinite, expected: /inst/, result: false, itActual: 'isFinite', itExpected: '/inst/' },
  { actual: isFinite(10), expected: /inst/, result: false, itActual: 'isFinite(10)', itExpected: '/inst/' },
  { actual: Number.NEGATIVE_INFINITY, expected: /inst/, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/inst/' },
  { actual: Object, expected: /inst/, result: false, itActual: 'Object', itExpected: '/inst/' },
  { actual: {}, expected: /inst/, result: false, itActual: '{}', itExpected: '/inst/' },
  { actual: Error, expected: /inst/, result: false, itActual: 'Error', itExpected: '/inst/' },
  { actual: TypeError, exp1ected: /inst/, result: false, itActual: 'TypeError', itExpected: '/inst/' },
  { actual: new Error('error'), expected: /inst/, result: false, itActual: 'new Error("error")', itExpected: '/inst/' },
  { actual: new TypeError('error'), expected: /inst/, result: false, itActual: 'new TypeError("error")', itExpected: '/inst/' },
  { actual: undefined, expected: /inst/, result: false, itActual: 'undefined', itExpected: '/inst/' },
  { actual: null, expected: /inst/, result: false, itActual: 'null', itExpected: '/inst/' },
  { actual: Infinity, expected: /inst/, result: false, itActual: 'Infinity', itExpected: '/inst/' },
  { actual: NaN, expected: /inst/, result: false, itActual: 'NaN', itExpected: '/inst/' },
  { actual: JSON, expected: /inst/, result: false, itActual: 'JSON', itExpected: '/inst/' },
  { actual: Promise, expected: /inst/, result: false, itActual: 'Promise', itExpected: '/inst/' },
  { actual: new Promise(() => { }), expected: /inst/, result: false, itActual: 'new Promise(()=>{})', itExpected: '/inst/' },
  { actual: {}.name, expected: /inst/, result: false, itActual: '{}.name', itExpected: '/inst/' },
  { actual: RangeError, expected: /inst/, result: false, itActual: 'RangeError', itExpected: '/inst/' },
  { actual: ReferenceError, expected: /inst/, result: false, itActual: 'ReferenceError', itExpected: '/inst/' },
  { actual: new RangeError('error'), expected: /inst/, result: false, itActual: 'new RangeError("error")', itExpected: '/inst/' },
  { actual: new ReferenceError('error'), expected: /inst/, result: false, itActual: 'new ReferenceError("error")', itExpected: '/inst/' },
  { actual: Name, expected: /inst/, result: false, itActual: 'Name', itExpected: '/inst/' },
  { actual: new Name(), expected: /inst/, result: false, itActual: 'new Name()', itExpected: '/inst/' },
  { actual: new instance(), expected: /inst/, result: true, itActual: 'new instance()', itExpected: '/inst/' },
  { actual: new truthy(), expected: /inst/, result: false, itActual: 'new truthy()', itExpected: '/inst/' },
  { actual: new falsy(), expected: /inst/, result: false, itActual: 'new falsy()', itExpected: '/inst/' },
  { actual: new any(), expected: /inst/, result: false, itActual: 'new any()', itExpected: '/inst/' },
  { actual: new objectable(), expected: /inst/, result: false, itActual: 'new objectable()', itExpected: '/inst/' },

  { actual: Date, expected: /InStAnCe/, result: false, itActual: 'Date', itExpected: '/InStAnCe/' },
  { actual: new Date(), expected: /InStAnCe/, result: false, itActual: 'new Date()', itExpected: '/InStAnCe/' },
  { actual: Function, expected: /InStAnCe/, result: false, itActual: 'Function', itExpected: '/InStAnCe/' },
  { actual: function () { }, expected: /InStAnCe/, result: false, itActual: 'function(){}', itExpected: '/InStAnCe/' },
  { actual: new Function('return "hello"'), expected: /InStAnCe/, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/InStAnCe/' },
  { actual: (function () { return arguments; })(), expected: /InStAnCe/, result: false, itActual: '(function(){return arguments;})()', itExpected: '/InStAnCe/' },
  { actual: () => { }, expected: /InStAnCe/, result: false, itActual: '()=>{}', itExpected: '/InStAnCe/' },
  { actual: String, expected: /InStAnCe/, result: false, itActual: 'String', itExpected: '/InStAnCe/' },
  { actual: new String('Hello'), expected: /InStAnCe/, result: false, itActual: 'new String("Hello")', itExpected: '/InStAnCe/' },
  { actual: new String(''), expected: /InStAnCe/, result: false, itActual: 'new String("")', itExpected: '/InStAnCe/' },
  { actual: 'Hello', expected: /InStAnCe/, result: false, itActual: '"Hello"', itExpected: '/InStAnCe/' },
  { actual: `Hello`, expected: /InStAnCe/, result: false, itActual: '`Hello`', itExpected: '/InStAnCe/' },
  { actual: '', expected: /InStAnCe/, result: false, itActual: '""', itExpected: '/InStAnCe/' },
  { actual: Number, expected: /InStAnCe/, result: false, itActual: 'Number', itExpected: '/InStAnCe/' },
  { actual: new Number(10), expected: /InStAnCe/, result: false, itActual: 'new Number(10)', itExpected: '/InStAnCe/' },
  { actual: new Number(0), expected: /InStAnCe/, result: false, itActual: 'new Number(0)', itExpected: '/InStAnCe/' },
  { actual: 10, expected: /InStAnCe/, result: false, itActual: '10', itExpected: '/InStAnCe/' },
  { actual: 0, expected: /InStAnCe/, result: false, itActual: '0', itExpected: '/InStAnCe/' },
  { actual: Boolean, expected: /InStAnCe/, result: false, itActual: 'Boolean', itExpected: '/InStAnCe/' },
  { actual: new Boolean(0), expected: /InStAnCe/, result: false, itActual: 'new Boolean(0)', itExpected: '/InStAnCe/' },
  { actual: false, expected: /InStAnCe/, result: false, itActual: 'false', itExpected: '/InStAnCe/' },
  { actual: true, expected: /InStAnCe/, result: false, itActual: 'true', itExpected: '/InStAnCe/' },
  { actual: RegExp, expected: /InStAnCe/, result: false, itActual: 'RegExp', itExpected: '/InStAnCe/' },
  { actual: new RegExp('Hello', 'gim'), expected: /InStAnCe/, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/InStAnCe/' },
  { actual: /hello/, expected: /InStAnCe/, result: false, itActual: '/hello/', itExpected: '/InStAnCe/' },
  { actual: isNaN, expected: /InStAnCe/, result: false, itActual: 'isNaN', itExpected: '/InStAnCe/' },
  { actual: isNaN('hello'), expected: /InStAnCe/, result: false, itActual: 'isNaN("hello")', itExpected: '/InStAnCe/' },
  { actual: isFinite, expected: /InStAnCe/, result: false, itActual: 'isFinite', itExpected: '/InStAnCe/' },
  { actual: isFinite(10), expected: /InStAnCe/, result: false, itActual: 'isFinite(10)', itExpected: '/InStAnCe/' },
  { actual: Number.NEGATIVE_INFINITY, expected: /InStAnCe/, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/InStAnCe/' },
  { actual: Object, expected: /InStAnCe/, result: false, itActual: 'Object', itExpected: '/InStAnCe/' },
  { actual: {}, expected: /InStAnCe/, result: false, itActual: '{}', itExpected: '/InStAnCe/' },
  { actual: Error, expected: /InStAnCe/, result: false, itActual: 'Error', itExpected: '/InStAnCe/' },
  { actual: TypeError, expected: /InStAnCe/, result: false, itActual: 'TypeError', itExpected: '/InStAnCe/' },
  { actual: new Error('error'), expected: /InStAnCe/, result: false, itActual: 'new Error("error")', itExpected: '/InStAnCe/' },
  { actual: new TypeError('error'), expected: /InStAnCe/, result: false, itActual: 'new TypeError("error")', itExpected: '/InStAnCe/' },
  { actual: undefined, expected: /InStAnCe/, result: false, itActual: 'undefined', itExpected: '/InStAnCe/' },
  { actual: null, expected: /InStAnCe/, result: false, itActual: 'null', itExpected: '/InStAnCe/' },
  { actual: Infinity, expected: /InStAnCe/, result: false, itActual: 'Infinity', itExpected: '/InStAnCe/' },
  { actual: NaN, expected: /InStAnCe/, result: false, itActual: 'NaN', itExpected: '/InStAnCe/' },
  { actual: JSON, expected: /InStAnCe/, result: false, itActual: 'JSON', itExpected: '/InStAnCe/' },
  { actual: Promise, expected: /InStAnCe/, result: false, itActual: 'Promise', itExpected: '/InStAnCe/' },
  { actual: new Promise(() => { }), expected: /InStAnCe/, result: false, itActual: 'new Promise(()=>{})', itExpected: '/InStAnCe/' },
  { actual: {}.name, expected: /InStAnCe/, result: false, itActual: '{}.name', itExpected: '/InStAnCe/' },
  { actual: RangeError, expected: /InStAnCe/, result: false, itActual: 'RangeError', itExpected: '/InStAnCe/' },
  { actual: ReferenceError, expected: /InStAnCe/, result: false, itActual: 'ReferenceError', itExpected: '/InStAnCe/' },
  { actual: new RangeError('error'), expected: /InStAnCe/, result: false, itActual: 'new RangeError("error")', itExpected: '/InStAnCe/' },
  { actual: new ReferenceError('error'), expected: /InStAnCe/, result: false, itActual: 'new ReferenceError("error")', itExpected: '/InStAnCe/' },
  { actual: Name, expected: /InStAnCe/, result: false, itActual: 'Name', itExpected: '/InStAnCe/' },
  { actual: new Name(), expected: /InStAnCe/, result: false, itActual: 'new Name()', itExpected: '/InStAnCe/' },
  { actual: new instance(), expected: /InStAnCe/, result: false, itActual: 'new instance()', itExpected: '/InStAnCe/' },
  { actual: new truthy(), expected: /InStAnCe/, result: false, itActual: 'new truthy()', itExpected: '/InStAnCe/' },
  { actual: new falsy(), expected: /InStAnCe/, result: false, itActual: 'new falsy()', itExpected: '/InStAnCe/' },
  { actual: new any(), expected: /InStAnCe/, result: false, itActual: 'new any()', itExpected: '/InStAnCe/' },
  { actual: new objectable(), expected: /InStAnCe/, result: false, itActual: 'new objectable()', itExpected: '/InStAnCe/' },

  { actual: Date, expected: /InSt/, result: false, itActual: 'Date', itExpected: '/InSt/' },
  { actual: new Date(), expected: /InSt/, result: false, itActual: 'new Date()', itExpected: '/InSt/' },
  { actual: Function, expected: /InSt/, result: false, itActual: 'Function', itExpected: '/InSt/' },
  { actual: function () { }, expected: /InSt/, result: false, itActual: 'function(){}', itExpected: '/InSt/' },
  { actual: new Function('return "hello"'), expected: /InSt/, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/InSt/' },
  { actual: (function () { return arguments; })(), expected: /InSt/, result: false, itActual: '(function(){return arguments;})()', itExpected: '/InSt/' },
  { actual: () => { }, expected: /InSt/, result: false, itActual: '()=>{}', itExpected: '/InSt/' },
  { actual: String, expected: /InSt/, result: false, itActual: 'String', itExpected: '/InSt/' },
  { actual: new String('Hello'), expected: /InSt/, result: false, itActual: 'new String("Hello")', itExpected: '/InSt/' },
  { actual: new String(''), expected: /InSt/, result: false, itActual: 'new String("")', itExpected: '/InSt/' },
  { actual: 'Hello', expected: /InSt/, result: false, itActual: '"Hello"', itExpected: '/InSt/' },
  { actual: `Hello`, expected: /InSt/, result: false, itActual: '`Hello`', itExpected: '/InSt/' },
  { actual: '', expected: /InSt/, result: false, itActual: '""', itExpected: '/InSt/' },
  { actual: Number, expected: /InSt/, result: false, itActual: 'Number', itExpected: '/InSt/' },
  { actual: new Number(10), expected: /InSt/, result: false, itActual: 'new Number(10)', itExpected: '/InSt/' },
  { actual: new Number(0), expected: /InSt/, result: false, itActual: 'new Number(0)', itExpected: '/InSt/' },
  { actual: 10, expected: /InSt/, result: false, itActual: '10', itExpected: '/InSt/' },
  { actual: 0, expected: /InSt/, result: false, itActual: '0', itExpected: '/InSt/' },
  { actual: Boolean, expected: /InSt/, result: false, itActual: 'Boolean', itExpected: '/InSt/' },
  { actual: new Boolean(0), expected: /InSt/, result: false, itActual: 'new Boolean(0)', itExpected: '/InSt/' },
  { actual: false, expected: /InSt/, result: false, itActual: 'false', itExpected: '/InSt/' },
  { actual: true, expected: /InSt/, result: false, itActual: 'true', itExpected: '/InSt/' },
  { actual: RegExp, expected: /InSt/, result: false, itActual: 'RegExp', itExpected: '/InSt/' },
  { actual: new RegExp('Hello', 'gim'), expected: /InSt/, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/InSt/' },
  { actual: /hello/, expected: /InSt/, result: false, itActual: '/hello/', itExpected: '/InSt/' },
  { actual: isNaN, expected: /InSt/, result: false, itActual: 'isNaN', itExpected: '/InSt/' },
  { actual: isNaN('hello'), expected: /InSt/, result: false, itActual: 'isNaN("hello")', itExpected: '/InSt/' },
  { actual: isFinite, expected: /InSt/, result: false, itActual: 'isFinite', itExpected: '/InSt/' },
  { actual: isFinite(10), expected: /InSt/, result: false, itActual: 'isFinite(10)', itExpected: '/InSt/' },
  { actual: Number.NEGATIVE_INFINITY, expected: /InSt/, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/InSt/' },
  { actual: Object, expected: /InSt/, result: false, itActual: 'Object', itExpected: '/InSt/' },
  { actual: {}, expected: /InSt/, result: false, itActual: '{}', itExpected: '/InSt/' },
  { actual: Error, expected: /InSt/, result: false, itActual: 'Error', itExpected: '/InSt/' },
  { actual: TypeError, expected: /InSt/, result: false, itActual: 'TypeError', itExpected: '/InSt/' },
  { actual: new Error('error'), expected: /InSt/, result: false, itActual: 'new Error("error")', itExpected: '/InSt/' },
  { actual: new TypeError('error'), expected: /InSt/, result: false, itActual: 'new TypeError("error")', itExpected: '/InSt/' },
  { actual: undefined, expected: /InSt/, result: false, itActual: 'undefined', itExpected: '/InSt/' },
  { actual: null, expected: /InSt/, result: false, itActual: 'null', itExpected: '/InSt/' },
  { actual: Infinity, expected: /InSt/, result: false, itActual: 'Infinity', itExpected: '/InSt/' },
  { actual: NaN, expected: /InSt/, result: false, itActual: 'NaN', itExpected: '/InSt/' },
  { actual: JSON, expected: /InSt/, result: false, itActual: 'JSON', itExpected: '/InSt/' },
  { actual: Promise, expected: /InSt/, result: false, itActual: 'Promise', itExpected: '/InSt/' },
  { actual: new Promise(() => { }), expected: /InSt/, result: false, itActual: 'new Promise(()=>{})', itExpected: '/InSt/' },
  { actual: {}.name, expected: /InSt/, result: false, itActual: '{}.name', itExpected: '/InSt/' },
  { actual: RangeError, expected: /InSt/, result: false, itActual: 'RangeError', itExpected: '/InSt/' },
  { actual: ReferenceError, expected: /InSt/, result: false, itActual: 'ReferenceError', itExpected: '/InSt/' },
  { actual: new RangeError('error'), expected: /InSt/, result: false, itActual: 'new RangeError("error")', itExpected: '/InSt/' },
  { actual: new ReferenceError('error'), expected: /InSt/, result: false, itActual: 'new ReferenceError("error")', itExpected: '/InSt/' },
  { actual: Name, expected: /InSt/, result: false, itActual: 'Name', itExpected: '/InSt/' },
  { actual: new Name(), expected: /InSt/, result: false, itActual: 'new Name()', itExpected: '/InSt/' },
  { actual: new instance(), expected: /InSt/, result: false, itActual: 'new instance()', itExpected: '/InSt/' },
  { actual: new truthy(), expected: /InSt/, result: false, itActual: 'new truthy()', itExpected: '/InSt/' },
  { actual: new falsy(), expected: /InSt/, result: false, itActual: 'new falsy()', itExpected: '/InSt/' },
  { actual: new any(), expected: /InSt/, result: false, itActual: 'new any()', itExpected: '/InSt/' },
  { actual: new objectable(), expected: /InSt/, result: false, itActual: 'new objectable()', itExpected: '/InSt/' },

  { actual: Date, expected: /InStAnCe/i, result: false, itActual: 'Date', itExpected: '/InStAnCe/i' },
  { actual: new Date(), expected: /InStAnCe/i, result: false, itActual: 'new Date()', itExpected: '/InStAnCe/i' },
  { actual: Function, expected: /InStAnCe/i, result: false, itActual: 'Function', itExpected: '/InStAnCe/i' },
  { actual: function () { }, expected: /InStAnCe/i, result: false, itActual: 'function(){}', itExpected: '/InStAnCe/i' },
  { actual: new Function('return "hello"'), expected: /InStAnCe/i, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/InStAnCe/i' },
  { actual: (function () { return arguments; })(), expected: /InStAnCe/i, result: false, itActual: '(function(){return arguments;})()', itExpected: '/InStAnCe/i' },
  { actual: () => { }, expected: /InStAnCe/i, result: false, itActual: '()=>{}', itExpected: '/InStAnCe/i' },
  { actual: String, expected: /InStAnCe/i, result: false, itActual: 'String', itExpected: '/InStAnCe/i' },
  { actual: new String('Hello'), expected: /InStAnCe/i, result: false, itActual: 'new String("Hello")', itExpected: '/InStAnCe/i' },
  { actual: new String(''), expected: /InStAnCe/i, result: false, itActual: 'new String("")', itExpected: '/InStAnCe/i' },
  { actual: 'Hello', expected: /InStAnCe/i, result: false, itActual: '"Hello"', itExpected: '/InStAnCe/i' },
  { actual: `Hello`, expected: /InStAnCe/i, result: false, itActual: '`Hello`', itExpected: '/InStAnCe/i' },
  { actual: '', expected: /InStAnCe/i, result: false, itActual: '""', itExpected: '/InStAnCe/i' },
  { actual: Number, expected: /InStAnCe/i, result: false, itActual: 'Number', itExpected: '/InStAnCe/i' },
  { actual: new Number(10), expected: /InStAnCe/i, result: false, itActual: 'new Number(10)', itExpected: '/InStAnCe/i' },
  { actual: new Number(0), expected: /InStAnCe/i, result: false, itActual: 'new Number(0)', itExpected: '/InStAnCe/i' },
  { actual: 10, expected: /InStAnCe/i, result: false, itActual: '10', itExpected: '/InStAnCe/i' },
  { actual: 0, expected: /InStAnCe/i, result: false, itActual: '0', itExpected: '/InStAnCe/i' },
  { actual: Boolean, expected: /InStAnCe/i, result: false, itActual: 'Boolean', itExpected: '/InStAnCe/i' },
  { actual: new Boolean(0), expected: /InStAnCe/i, result: false, itActual: 'new Boolean(0)', itExpected: '/InStAnCe/i' },
  { actual: false, expected: /InStAnCe/i, result: false, itActual: 'false', itExpected: '/InStAnCe/i' },
  { actual: true, expected: /InStAnCe/i, result: false, itActual: 'true', itExpected: '/InStAnCe/i' },
  { actual: RegExp, expected: /InStAnCe/i, result: false, itActual: 'RegExp', itExpected: '/InStAnCe/i' },
  { actual: new RegExp('Hello', 'gim'), expected: /InStAnCe/i, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/InStAnCe/i' },
  { actual: /hello/, expected: /InStAnCe/i, result: false, itActual: '/hello/', itExpected: '/InStAnCe/i' },
  { actual: isNaN, expected: /InStAnCe/i, result: false, itActual: 'isNaN', itExpected: '/InStAnCe/i' },
  { actual: isNaN('hello'), expected: /InStAnCe/i, result: false, itActual: 'isNaN("hello")', itExpected: '/InStAnCe/i' },
  { actual: isFinite, expected: /InStAnCe/i, result: false, itActual: 'isFinite', itExpected: '/InStAnCe/i' },
  { actual: isFinite(10), expected: /InStAnCe/i, result: false, itActual: 'isFinite(10)', itExpected: '/InStAnCe/i' },
  { actual: Number.NEGATIVE_INFINITY, expected: /InStAnCe/i, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/InStAnCe/i' },
  { actual: Object, expected: /InStAnCe/i, result: false, itActual: 'Object', itExpected: '/InStAnCe/i' },
  { actual: {}, expected: /InStAnCe/i, result: false, itActual: '{}', itExpected: '/InStAnCe/i' },
  { actual: Error, expected: /InStAnCe/i, result: false, itActual: 'Error', itExpected: '/InStAnCe/i' },
  { actual: TypeError, expected: /InStAnCe/i, result: false, itActual: 'TypeError', itExpected: '/InStAnCe/i' },
  { actual: new Error('error'), expected: /InStAnCe/i, result: false, itActual: 'new Error("error")', itExpected: '/InStAnCe/i' },
  { actual: new TypeError('error'), expected: /InStAnCe/i, result: false, itActual: 'new TypeError("error")', itExpected: '/InStAnCe/i' },
  { actual: undefined, expected: /InStAnCe/i, result: false, itActual: 'undefined', itExpected: '/InStAnCe/i' },
  { actual: null, expected: /InStAnCe/i, result: false, itActual: 'null', itExpected: '/InStAnCe/i' },
  { actual: Infinity, expected: /InStAnCe/i, result: false, itActual: 'Infinity', itExpected: '/InStAnCe/i' },
  { actual: NaN, expected: /InStAnCe/i, result: false, itActual: 'NaN', itExpected: '/InStAnCe/i' },
  { actual: JSON, expected: /InStAnCe/i, result: false, itActual: 'JSON', itExpected: '/InStAnCe/i' },
  { actual: Promise, expected: /InStAnCe/i, result: false, itActual: 'Promise', itExpected: '/InStAnCe/i' },
  { actual: new Promise(() => { }), expected: /InStAnCe/i, result: false, itActual: 'new Promise(()=>{})', itExpected: '/InStAnCe/i' },
  { actual: {}.name, expected: /InStAnCe/i, result: false, itActual: '{}.name', itExpected: '/InStAnCe/i' },
  { actual: RangeError, expected: /InStAnCe/i, result: false, itActual: 'RangeError', itExpected: '/InStAnCe/i' },
  { actual: ReferenceError, expected: /InStAnCe/i, result: false, itActual: 'ReferenceError', itExpected: '/InStAnCe/i' },
  { actual: new RangeError('error'), expected: /InStAnCe/i, result: false, itActual: 'new RangeError("error")', itExpected: '/InStAnCe/i' },
  { actual: new ReferenceError('error'), expected: /InStAnCe/i, result: false, itActual: 'new ReferenceError("error")', itExpected: '/InStAnCe/i' },
  { actual: Name, expected: /InStAnCe/i, result: false, itActual: 'Name', itExpected: '/InStAnCe/i' },
  { actual: new Name(), expected: /InStAnCe/i, result: true, itActual: 'new Name()', itExpected: '/InStAnCe/i' },
  { actual: new instance(), expected: /InStAnCe/i, result: true, itActual: 'new instance()', itExpected: '/InStAnCe/i' },
  { actual: new truthy(), expected: /InStAnCe/i, result: true, itActual: 'new truthy()', itExpected: '/InStAnCe/i' },
  { actual: new falsy(), expected: /InStAnCe/i, result: true, itActual: 'new falsy()', itExpected: '/InStAnCe/i' },
  { actual: new any(), expected: /InStAnCe/i, result: true, itActual: 'new any()', itExpected: '/InStAnCe/i' },
  { actual: new objectable(), expected: /InStAnCe/i, result: true, itActual: 'new objectable()', itExpected: '/InStAnCe/i' },

  { actual: Date, expected: /InSt/i, result: false, itActual: 'Date', itExpected: '/InSt/i' },
  { actual: new Date(), expected: /InSt/i, result: false, itActual: 'new Date()', itExpected: '/InSt/i' },
  { actual: Function, expected: /InSt/i, result: false, itActual: 'Function', itExpected: '/InSt/i' },
  { actual: function () { }, expected: /InSt/i, result: false, itActual: 'function(){}', itExpected: '/InSt/i' },
  { actual: new Function('return "hello"'), expected: /InSt/i, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/InSt/i' },
  { actual: (function () { return arguments; })(), expected: /InSt/i, result: false, itActual: '(function(){return arguments;})()', itExpected: '/InSt/i' },
  { actual: () => { }, expected: /InSt/i, result: false, itActual: '()=>{}', itExpected: '/InSt/i' },
  { actual: String, expected: /InSt/i, result: false, itActual: 'String', itExpected: '/InSt/i' },
  { actual: new String('Hello'), expected: /InSt/i, result: false, itActual: 'new String("Hello")', itExpected: '/InSt/i' },
  { actual: new String(''), expected: /InSt/i, result: false, itActual: 'new String("")', itExpected: '/InSt/i' },
  { actual: 'Hello', expected: /InSt/i, result: false, itActual: '"Hello"', itExpected: '/InSt/i' },
  { actual: `Hello`, expected: /InSt/i, result: false, itActual: '`Hello`', itExpected: '/InSt/i' },
  { actual: '', expected: /InSt/i, result: false, itActual: '""', itExpected: '/InSt/i' },
  { actual: Number, expected: /InSt/i, result: false, itActual: 'Number', itExpected: '/InSt/i' },
  { actual: new Number(10), expected: /InSt/i, result: false, itActual: 'new Number(10)', itExpected: '/InSt/i' },
  { actual: new Number(0), expected: /InSt/i, result: false, itActual: 'new Number(0)', itExpected: '/InSt/i' },
  { actual: 10, expected: /InSt/i, result: false, itActual: '10', itExpected: '/InSt/i' },
  { actual: 0, expected: /InSt/i, result: false, itActual: '0', itExpected: '/InSt/i' },
  { actual: Boolean, expected: /InSt/i, result: false, itActual: 'Boolean', itExpected: '/InSt/i' },
  { actual: new Boolean(0), expected: /InSt/i, result: false, itActual: 'new Boolean(0)', itExpected: '/InSt/i' },
  { actual: false, expected: /InSt/i, result: false, itActual: 'false', itExpected: '/InSt/i' },
  { actual: true, expected: /InSt/i, result: false, itActual: 'true', itExpected: '/InSt/i' },
  { actual: RegExp, expected: /InSt/i, result: false, itActual: 'RegExp', itExpected: '/InSt/i' },
  { actual: new RegExp('Hello', 'gim'), expected: /InSt/i, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/InSt/i' },
  { actual: /hello/, expected: /InSt/i, result: false, itActual: '/hello/', itExpected: '/InSt/i' },
  { actual: isNaN, expected: /InSt/i, result: false, itActual: 'isNaN', itExpected: '/InSt/i' },
  { actual: isNaN('hello'), expected: /InSt/i, result: false, itActual: 'isNaN("hello")', itExpected: '/InSt/i' },
  { actual: isFinite, expected: /InSt/i, result: false, itActual: 'isFinite', itExpected: '/InSt/i' },
  { actual: isFinite(10), expected: /InSt/i, result: false, itActual: 'isFinite(10)', itExpected: '/InSt/i' },
  { actual: Number.NEGATIVE_INFINITY, expected: /InSt/i, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/InSt/i' },
  { actual: Object, expected: /InSt/i, result: false, itActual: 'Object', itExpected: '/InSt/i' },
  { actual: {}, expected: /InSt/i, result: false, itActual: '{}', itExpected: '/InSt/i' },
  { actual: Error, expected: /InSt/i, result: false, itActual: 'Error', itExpected: '/InSt/i' },
  { actual: TypeError, expected: /InSt/i, result: false, itActual: 'TypeError', itExpected: '/InSt/i' },
  { actual: new Error('error'), expected: /InSt/i, result: false, itActual: 'new Error("error")', itExpected: '/InSt/i' },
  { actual: new TypeError('error'), expected: /InSt/i, result: false, itActual: 'new TypeError("error")', itExpected: '/InSt/i' },
  { actual: undefined, expected: /InSt/i, result: false, itActual: 'undefined', itExpected: '/InSt/i' },
  { actual: null, expected: /InSt/i, result: false, itActual: 'null', itExpected: '/InSt/i' },
  { actual: Infinity, expected: /InSt/i, result: false, itActual: 'Infinity', itExpected: '/InSt/i' },
  { actual: NaN, expected: /InSt/i, result: false, itActual: 'NaN', itExpected: '/InSt/i' },
  { actual: JSON, expected: /InSt/i, result: false, itActual: 'JSON', itExpected: '/InSt/i' },
  { actual: Promise, expected: /InSt/i, result: false, itActual: 'Promise', itExpected: '/InSt/i' },
  { actual: new Promise(() => { }), expected: /InSt/i, result: false, itActual: 'new Promise(()=>{})', itExpected: '/InSt/i' },
  { actual: {}.name, expected: /InSt/i, result: false, itActual: '{}.name', itExpected: '/InSt/i' },
  { actual: RangeError, expected: /InSt/i, result: false, itActual: 'RangeError', itExpected: '/InSt/i' },
  { actual: ReferenceError, expected: /InSt/i, result: false, itActual: 'ReferenceError', itExpected: '/InSt/i' },
  { actual: new RangeError('error'), expected: /InSt/i, result: false, itActual: 'new RangeError("error")', itExpected: '/InSt/i' },
  { actual: new ReferenceError('error'), expected: /InSt/i, result: false, itActual: 'new ReferenceError("error")', itExpected: '/InSt/i' },
  { actual: Name, expected: /InSt/i, result: false, itActual: 'Name', itExpected: '/InSt/i' },
  { actual: new Name(), expected: /InSt/i, result: false, itActual: 'new Name()', itExpected: '/InSt/i' },
  { actual: new instance(), expected: /InSt/i, result: true, itActual: 'new instance()', itExpected: '/InSt/i' },
  { actual: new truthy(), expected: /InSt/i, result: false, itActual: 'new truthy()', itExpected: '/InSt/i' },
  { actual: new falsy(), expected: /InSt/i, result: false, itActual: 'new falsy()', itExpected: '/InSt/i' },
  { actual: new any(), expected: /InSt/i, result: false, itActual: 'new any()', itExpected: '/InSt/i' },
  { actual: new objectable(), expected: /InSt/i, result: false, itActual: 'new objectable()', itExpected: '/InSt/i' },

  { actual: Date, expected: /falsy/, result: false, itActual: 'Date', itExpected: '/falsy/' },
  { actual: new Date(), expected: /falsy/, result: false, itActual: 'new Date()', itExpected: '/falsy/' },
  { actual: Function, expected: /falsy/, result: false, itActual: 'Function', itExpected: '/falsy/' },
  { actual: function () { }, expected: /falsy/, result: false, itActual: 'function(){}', itExpected: '/falsy/' },
  { actual: new Function('return "hello"'), expected: /falsy/, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/falsy/' },
  { actual: (function () { return arguments; })(), expected: /falsy/, result: false, itActual: '(function(){return arguments;})()', itExpected: '/falsy/' },
  { actual: () => { }, expected: /falsy/, result: false, itActual: '()=>{}', itExpected: '/falsy/' },
  { actual: String, expected: /falsy/, result: false, itActual: 'String', itExpected: '/falsy/' },
  { actual: new String('Hello'), expected: /falsy/, result: false, itActual: 'new String("Hello")', itExpected: '/falsy/' },
  { actual: new String(''), expected: /falsy/, result: false, itActual: 'new String("")', itExpected: '/falsy/' },
  { actual: 'Hello', expected: /falsy/, result: false, itActual: '"Hello"', itExpected: '/falsy/' },
  { actual: `Hello`, expected: /falsy/, result: false, itActual: '`Hello`', itExpected: '/falsy/' },
  { actual: '', expected: /falsy/, result: true, itActual: '""', itExpected: '/falsy/' },
  { actual: Number, expected: /falsy/, result: false, itActual: 'Number', itExpected: '/falsy/' },
  { actual: new Number(10), expected: /falsy/, result: false, itActual: 'new Number(10)', itExpected: '/falsy/' },
  { actual: new Number(0), expected: /falsy/, result: false, itActual: 'new Number(0)', itExpected: '/falsy/' },
  { actual: 10, expected: /falsy/, result: false, itActual: '10', itExpected: '/falsy/' },
  { actual: 0, expected: /falsy/, result: true, itActual: '0', itExpected: '/falsy/' },
  { actual: Boolean, expected: /falsy/, result: false, itActual: 'Boolean', itExpected: '/falsy/' },
  { actual: new Boolean(0), expected: /falsy/, result: false, itActual: 'new Boolean(0)', itExpected: '/falsy/' },
  { actual: false, expected: /falsy/, result: true, itActual: 'false', itExpected: '/falsy/' },
  { actual: true, expected: /falsy/, result: false, itActual: 'true', itExpected: '/falsy/' },
  { actual: RegExp, expected: /falsy/, result: false, itActual: 'RegExp', itExpected: '/falsy/' },
  { actual: new RegExp('Hello', 'gim'), expected: /falsy/, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/falsy/' },
  { actual: /hello/, expected: /falsy/, result: false, itActual: '/hello/', itExpected: '/falsy/' },
  { actual: isNaN, expected: /falsy/, result: false, itActual: 'isNaN', itExpected: '/falsy/' },
  { actual: isNaN('hello'), expected: /falsy/, result: false, itActual: 'isNaN("hello")', itExpected: '/falsy/' },
  { actual: isFinite, expected: /falsy/, result: false, itActual: 'isFinite', itExpected: '/falsy/' },
  { actual: isFinite(10), expected: /falsy/, result: false, itActual: 'isFinite(10)', itExpected: '/falsy/' },
  { actual: Number.NEGATIVE_INFINITY, expected: /falsy/, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/falsy/' },
  { actual: Object, expected: /falsy/, result: false, itActual: 'Object', itExpected: '/falsy/' },
  { actual: {}, expected: /falsy/, result: false, itActual: '{}', itExpected: '/falsy/' },
  { actual: Error, expected: /falsy/, result: false, itActual: 'Error', itExpected: '/falsy/' },
  { actual: TypeError, expected: /falsy/, result: false, itActual: 'TypeError', itExpected: '/falsy/' },
  { actual: new Error('error'), expected: /falsy/, result: false, itActual: 'new Error("error")', itExpected: '/falsy/' },
  { actual: new TypeError('error'), expected: /falsy/, result: false, itActual: 'new TypeError("error")', itExpected: '/falsy/' },
  { actual: undefined, expected: /falsy/, result: true, itActual: 'undefined', itExpected: '/falsy/' },
  { actual: null, expected: /falsy/, result: true, itActual: 'null', itExpected: '/falsy/' },
  { actual: Infinity, expected: /falsy/, result: false, itActual: 'Infinity', itExpected: '/falsy/' },
  { actual: NaN, expected: /falsy/, result: true, itActual: 'NaN', itExpected: '/falsy/' },
  { actual: JSON, expected: /falsy/, result: false, itActual: 'JSON', itExpected: '/falsy/' },
  { actual: Promise, expected: /falsy/, result: false, itActual: 'Promise', itExpected: '/falsy/' },
  { actual: new Promise(() => { }), expected: /falsy/, result: false, itActual: 'new Promise(()=>{})', itExpected: '/falsy/' },
  { actual: {}.name, expected: /falsy/, result: true, itActual: '{}.name', itExpected: '/falsy/' },
  { actual: RangeError, expected: /falsy/, result: false, itActual: 'RangeError', itExpected: '/falsy/' },
  { actual: ReferenceError, expected: /falsy/, result: false, itActual: 'ReferenceError', itExpected: '/falsy/' },
  { actual: new RangeError('error'), expected: /falsy/, result: false, itActual: 'new RangeError("error")', itExpected: '/falsy/' },
  { actual: new ReferenceError('error'), expected: /falsy/, result: false, itActual: 'new ReferenceError("error")', itExpected: '/falsy/' },
  { actual: Name, expected: /falsy/, result: false, itActual: 'Name', itExpected: '/falsy/' },
  { actual: new Name(), expected: /falsy/, result: false, itActual: 'new Name()', itExpected: '/falsy/' },
  { actual: new instance(), expected: /falsy/, result: false, itActual: 'new instance()', itExpected: '/falsy/' },
  { actual: new truthy(), expected: /falsy/, result: false, itActual: 'new truthy()', itExpected: '/falsy/' },
  { actual: new falsy(), expected: /falsy/, result: true, itActual: 'new falsy()', itExpected: '/falsy/' },
  { actual: new any(), expected: /falsy/, result: false, itActual: 'new any()', itExpected: '/falsy/' },
  { actual: new objectable(), expected: /falsy/, result: false, itActual: 'new objectable()', itExpected: '/falsy/' },

  { actual: Date, expected: /fal/, result: false, itActual: 'Date', itExpected: '/fal/' },
  { actual: new Date(), expected: /fal/, result: false, itActual: 'new Date()', itExpected: '/fal/' },
  { actual: Function, expected: /fal/, result: false, itActual: 'Function', itExpected: '/fal/' },
  { actual: function () { }, expected: /fal/, result: false, itActual: 'function(){}', itExpected: '/fal/' },
  { actual: new Function('return "hello"'), expected: /fal/, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/fal/' },
  { actual: (function () { return arguments; })(), expected: /fal/, result: false, itActual: '(function(){return arguments;})()', itExpected: '/fal/' },
  { actual: () => { }, expected: /fal/, result: false, itActual: '()=>{}', itExpected: '/fal/' },
  { actual: String, expected: /fal/, result: false, itActual: 'String', itExpected: '/fal/' },
  { actual: new String('Hello'), expected: /fal/, result: false, itActual: 'new String("Hello")', itExpected: '/fal/' },
  { actual: new String(''), expected: /fal/, result: false, itActual: 'new String("")', itExpected: '/fal/' },
  { actual: 'Hello', expected: /fal/, result: false, itActual: '"Hello"', itExpected: '/fal/' },
  { actual: `Hello`, expected: /fal/, result: false, itActual: '`Hello`', itExpected: '/fal/' },
  { actual: '', expected: /fal/, result: false, itActual: '""', itExpected: '/fal/' },
  { actual: Number, expected: /fal/, result: false, itActual: 'Number', itExpected: '/fal/' },
  { actual: new Number(10), expected: /fal/, result: false, itActual: 'new Number(10)', itExpected: '/fal/' },
  { actual: new Number(0), expected: /fal/, result: false, itActual: 'new Number(0)', itExpected: '/fal/' },
  { actual: 10, expected: /fal/, result: false, itActual: '10', itExpected: '/fal/' },
  { actual: 0, expected: /fal/, result: false, itActual: '0', itExpected: '/fal/' },
  { actual: Boolean, expected: /fal/, result: false, itActual: 'Boolean', itExpected: '/fal/' },
  { actual: new Boolean(0), expected: /fal/, result: false, itActual: 'new Boolean(0)', itExpected: '/fal/' },
  { actual: false, expected: /fal/, result: false, itActual: 'false', itExpected: '/fal/' },
  { actual: true, expected: /fal/, result: false, itActual: 'true', itExpected: '/fal/' },
  { actual: RegExp, expected: /fal/, result: false, itActual: 'RegExp', itExpected: '/fal/' },
  { actual: new RegExp('Hello', 'gim'), expected: /fal/, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/fal/' },
  { actual: /hello/, expected: /fal/, result: false, itActual: '/hello/', itExpected: '/fal/' },
  { actual: isNaN, expected: /fal/, result: false, itActual: 'isNaN', itExpected: '/fal/' },
  { actual: isNaN('hello'), expected: /fal/, result: false, itActual: 'isNaN("hello")', itExpected: '/fal/' },
  { actual: isFinite, expected: /fal/, result: false, itActual: 'isFinite', itExpected: '/fal/' },
  { actual: isFinite(10), expected: /fal/, result: false, itActual: 'isFinite(10)', itExpected: '/fal/' },
  { actual: Number.NEGATIVE_INFINITY, expected: /fal/, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/fal/' },
  { actual: Object, expected: /fal/, result: false, itActual: 'Object', itExpected: '/fal/' },
  { actual: {}, expected: /fal/, result: false, itActual: '{}', itExpected: '/fal/' },
  { actual: Error, expected: /fal/, result: false, itActual: 'Error', itExpected: '/fal/' },
  { actual: TypeError, expected: /fal/, result: false, itActual: 'TypeError', itExpected: '/fal/' },
  { actual: new Error('error'), expected: /fal/, result: false, itActual: 'new Error("error")', itExpected: '/fal/' },
  { actual: new TypeError('error'), expected: /fal/, result: false, itActual: 'new TypeError("error")', itExpected: '/fal/' },
  { actual: undefined, expected: /fal/, result: false, itActual: 'undefined', itExpected: '/fal/' },
  { actual: null, expected: /fal/, result: false, itActual: 'null', itExpected: '/fal/' },
  { actual: Infinity, expected: /fal/, result: false, itActual: 'Infinity', itExpected: '/fal/' },
  { actual: NaN, expected: /fal/, result: false, itActual: 'NaN', itExpected: '/fal/' },
  { actual: JSON, expected: /fal/, result: false, itActual: 'JSON', itExpected: '/fal/' },
  { actual: Promise, expected: /fal/, result: false, itActual: 'Promise', itExpected: '/fal/' },
  { actual: new Promise(() => { }), expected: /fal/, result: false, itActual: 'new Promise(()=>{})', itExpected: '/fal/' },
  { actual: {}.name, expected: /fal/, result: false, itActual: '{}.name', itExpected: '/fal/' },
  { actual: RangeError, expected: /fal/, result: false, itActual: 'RangeError', itExpected: '/fal/' },
  { actual: ReferenceError, expected: /fal/, result: false, itActual: 'ReferenceError', itExpected: '/fal/' },
  { actual: new RangeError('error'), expected: /fal/, result: false, itActual: 'new RangeError("error")', itExpected: '/fal/' },
  { actual: new ReferenceError('error'), expected: /fal/, result: false, itActual: 'new ReferenceError("error")', itExpected: '/fal/' },
  { actual: Name, expected: /fal/, result: false, itActual: 'Name', itExpected: '/fal/' },
  { actual: new Name(), expected: /fal/, result: false, itActual: 'new Name()', itExpected: '/fal/' },
  { actual: new instance(), expected: /fal/, result: false, itActual: 'new instance()', itExpected: '/fal/' },
  { actual: new truthy(), expected: /fal/, result: false, itActual: 'new truthy()', itExpected: '/fal/' },
  { actual: new falsy(), expected: /fal/, result: true, itActual: 'new falsy()', itExpected: '/fal/' },
  { actual: new any(), expected: /fal/, result: false, itActual: 'new any()', itExpected: '/fal/' },
  { actual: new objectable(), expected: /fal/, result: false, itActual: 'new objectable()', itExpected: '/fal/' },

  { actual: Date, expected: /FALSY/, result: false, itActual: 'Date', itExpected: '/FALSY/' },
  { actual: new Date(), expected: /FALSY/, result: false, itActual: 'new Date()', itExpected: '/FALSY/' },
  { actual: Function, expected: /FALSY/, result: false, itActual: 'Function', itExpected: '/FALSY/' },
  { actual: function () { }, expected: /FALSY/, result: false, itActual: 'function(){}', itExpected: '/FALSY/' },
  { actual: new Function('return "hello"'), expected: /FALSY/, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/FALSY/' },
  { actual: (function () { return arguments; })(), expected: /FALSY/, result: false, itActual: '(function(){return arguments;})()', itExpected: '/FALSY/' },
  { actual: () => { }, expected: /FALSY/, result: false, itActual: '()=>{}', itExpected: '/FALSY/' },
  { actual: String, expected: /FALSY/, result: false, itActual: 'String', itExpected: '/FALSY/' },
  { actual: new String('Hello'), expected: /FALSY/, result: false, itActual: 'new String("Hello")', itExpected: '/FALSY/' },
  { actual: new String(''), expected: /FALSY/, result: false, itActual: 'new String("")', itExpected: '/FALSY/' },
  { actual: 'Hello', expected: /FALSY/, result: false, itActual: '"Hello"', itExpected: '/FALSY/' },
  { actual: `Hello`, expected: /FALSY/, result: false, itActual: '`Hello`', itExpected: '/FALSY/' },
  { actual: '', expected: /FALSY/, result: false, itActual: '""', itExpected: '/FALSY/' },
  { actual: Number, expected: /FALSY/, result: false, itActual: 'Number', itExpected: '/FALSY/' },
  { actual: new Number(10), expected: /FALSY/, result: false, itActual: 'new Number(10)', itExpected: '/FALSY/' },
  { actual: new Number(0), expected: /FALSY/, result: false, itActual: 'new Number(0)', itExpected: '/FALSY/' },
  { actual: 10, expected: /FALSY/, result: false, itActual: '10', itExpected: '/FALSY/' },
  { actual: 0, expected: /FALSY/, result: false, itActual: '0', itExpected: '/FALSY/' },
  { actual: Boolean, expected: /FALSY/, result: false, itActual: 'Boolean', itExpected: '/FALSY/' },
  { actual: new Boolean(0), expected: /FALSY/, result: false, itActual: 'new Boolean(0)', itExpected: '/FALSY/' },
  { actual: false, expected: /FALSY/, result: false, itActual: 'false', itExpected: '/FALSY/' },
  { actual: true, expected: /FALSY/, result: false, itActual: 'true', itExpected: '/FALSY/' },
  { actual: RegExp, expected: /FALSY/, result: false, itActual: 'RegExp', itExpected: '/FALSY/' },
  { actual: new RegExp('Hello', 'gim'), expected: /FALSY/, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/FALSY/' },
  { actual: /hello/, expected: /FALSY/, result: false, itActual: '/hello/', itExpected: '/FALSY/' },
  { actual: isNaN, expected: /FALSY/, result: false, itActual: 'isNaN', itExpected: '/FALSY/' },
  { actual: isNaN('hello'), expected: /FALSY/, result: false, itActual: 'isNaN("hello")', itExpected: '/FALSY/' },
  { actual: isFinite, expected: /FALSY/, result: false, itActual: 'isFinite', itExpected: '/FALSY/' },
  { actual: isFinite(10), expected: /FALSY/, result: false, itActual: 'isFinite(10)', itExpected: '/FALSY/' },
  { actual: Number.NEGATIVE_INFINITY, expected: /FALSY/, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/FALSY/' },
  { actual: Object, expected: /FALSY/, result: false, itActual: 'Object', itExpected: '/FALSY/' },
  { actual: {}, expected: /FALSY/, result: false, itActual: '{}', itExpected: '/FALSY/' },
  { actual: Error, expected: /FALSY/, result: false, itActual: 'Error', itExpected: '/FALSY/' },
  { actual: TypeError, expected: /FALSY/, result: false, itActual: 'TypeError', itExpected: '/FALSY/' },
  { actual: new Error('error'), expected: /FALSY/, result: false, itActual: 'new Error("error")', itExpected: '/FALSY/' },
  { actual: new TypeError('error'), expected: /FALSY/, result: false, itActual: 'new TypeError("error")', itExpected: '/FALSY/' },
  { actual: undefined, expected: /FALSY/, result: false, itActual: 'undefined', itExpected: '/FALSY/' },
  { actual: null, expected: /FALSY/, result: false, itActual: 'null', itExpected: '/FALSY/' },
  { actual: Infinity, expected: /FALSY/, result: false, itActual: 'Infinity', itExpected: '/FALSY/' },
  { actual: NaN, expected: /FALSY/, result: false, itActual: 'NaN', itExpected: '/FALSY/' },
  { actual: JSON, expected: /FALSY/, result: false, itActual: 'JSON', itExpected: '/FALSY/' },
  { actual: Promise, expected: /FALSY/, result: false, itActual: 'Promise', itExpected: '/FALSY/' },
  { actual: new Promise(() => { }), expected: /FALSY/, result: false, itActual: 'new Promise(()=>{})', itExpected: '/FALSY/' },
  { actual: {}.name, expected: /FALSY/, result: false, itActual: '{}.name', itExpected: '/FALSY/' },
  { actual: RangeError, expected: /FALSY/, result: false, itActual: 'RangeError', itExpected: '/FALSY/' },
  { actual: ReferenceError, expected: /FALSY/, result: false, itActual: 'ReferenceError', itExpected: '/FALSY/' },
  { actual: new RangeError('error'), expected: /FALSY/, result: false, itActual: 'new RangeError("error")', itExpected: '/FALSY/' },
  { actual: new ReferenceError('error'), expected: /FALSY/, result: false, itActual: 'new ReferenceError("error")', itExpected: '/FALSY/' },
  { actual: Name, expected: /FALSY/, result: false, itActual: 'Name', itExpected: '/FALSY/' },
  { actual: new Name(), expected: /FALSY/, result: false, itActual: 'new Name()', itExpected: '/FALSY/' },
  { actual: new instance(), expected: /FALSY/, result: false, itActual: 'new instance()', itExpected: '/FALSY/' },
  { actual: new truthy(), expected: /FALSY/, result: false, itActual: 'new truthy()', itExpected: '/FALSY/' },
  { actual: new falsy(), expected: /FALSY/, result: false, itActual: 'new falsy()', itExpected: '/FALSY/' },
  { actual: new any(), expected: /FALSY/, result: false, itActual: 'new any()', itExpected: '/FALSY/' },
  { actual: new objectable(), expected: /FALSY/, result: false, itActual: 'new objectable()', itExpected: '/FALSY/' },

  { actual: Date, expected: /FAL/, result: false, itActual: 'Date', itExpected: '/FAL/' },
  { actual: new Date(), expected: /FAL/, result: false, itActual: 'new Date()', itExpected: '/FAL/' },
  { actual: Function, expected: /FAL/, result: false, itActual: 'Function', itExpected: '/FAL/' },
  { actual: function () { }, expected: /FAL/, result: false, itActual: 'function(){}', itExpected: '/FAL/' },
  { actual: new Function('return "hello"'), expected: /FAL/, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/FAL/' },
  { actual: (function () { return arguments; })(), expected: /FAL/, result: false, itActual: '(function(){return arguments;})()', itExpected: '/FAL/' },
  { actual: () => { }, expected: /FAL/, result: false, itActual: '()=>{}', itExpected: '/FAL/' },
  { actual: String, expected: /FAL/, result: false, itActual: 'String', itExpected: '/FAL/' },
  { actual: new String('Hello'), expected: /FAL/, result: false, itActual: 'new String("Hello")', itExpected: '/FAL/' },
  { actual: new String(''), expected: /FAL/, result: false, itActual: 'new String("")', itExpected: '/FAL/' },
  { actual: 'Hello', expected: /FAL/, result: false, itActual: '"Hello"', itExpected: '/FAL/' },
  { actual: `Hello`, expected: /FAL/, result: false, itActual: '`Hello`', itExpected: '/FAL/' },
  { actual: '', expected: /FAL/, result: false, itActual: '""', itExpected: '/FAL/' },
  { actual: Number, expected: /FAL/, result: false, itActual: 'Number', itExpected: '/FAL/' },
  { actual: new Number(10), expected: /FAL/, result: false, itActual: 'new Number(10)', itExpected: '/FAL/' },
  { actual: new Number(0), expected: /FAL/, result: false, itActual: 'new Number(0)', itExpected: '/FAL/' },
  { actual: 10, expected: /FAL/, result: false, itActual: '10', itExpected: '/FAL/' },
  { actual: 0, expected: /FAL/, result: false, itActual: '0', itExpected: '/FAL/' },
  { actual: Boolean, expected: /FAL/, result: false, itActual: 'Boolean', itExpected: '/FAL/' },
  { actual: new Boolean(0), expected: /FAL/, result: false, itActual: 'new Boolean(0)', itExpected: '/FAL/' },
  { actual: false, expected: /FAL/, result: false, itActual: 'false', itExpected: '/FAL/' },
  { actual: true, expected: /FAL/, result: false, itActual: 'true', itExpected: '/FAL/' },
  { actual: RegExp, expected: /FAL/, result: false, itActual: 'RegExp', itExpected: '/FAL/' },
  { actual: new RegExp('Hello', 'gim'), expected: /FAL/, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/FAL/' },
  { actual: /hello/, expected: /FAL/, result: false, itActual: '/hello/', itExpected: '/FAL/' },
  { actual: isNaN, expected: /FAL/, result: false, itActual: 'isNaN', itExpected: '/FAL/' },
  { actual: isNaN('hello'), expected: /FAL/, result: false, itActual: 'isNaN("hello")', itExpected: '/FAL/' },
  { actual: isFinite, expected: /FAL/, result: false, itActual: 'isFinite', itExpected: '/FAL/' },
  { actual: isFinite(10), expected: /FAL/, result: false, itActual: 'isFinite(10)', itExpected: '/FAL/' },
  { actual: Number.NEGATIVE_INFINITY, expected: /FAL/, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/FAL/' },
  { actual: Object, expected: /FAL/, result: false, itActual: 'Object', itExpected: '/FAL/' },
  { actual: {}, expected: /FAL/, result: false, itActual: '{}', itExpected: '/FAL/' },
  { actual: Error, expected: /FAL/, result: false, itActual: 'Error', itExpected: '/FAL/' },
  { actual: TypeError, expected: /FAL/, result: false, itActual: 'TypeError', itExpected: '/FAL/' },
  { actual: new Error('error'), expected: /FAL/, result: false, itActual: 'new Error("error")', itExpected: '/FAL/' },
  { actual: new TypeError('error'), expected: /FAL/, result: false, itActual: 'new TypeError("error")', itExpected: '/FAL/' },
  { actual: undefined, expected: /FAL/, result: false, itActual: 'undefined', itExpected: '/FAL/' },
  { actual: null, expected: /FAL/, result: false, itActual: 'null', itExpected: '/FAL/' },
  { actual: Infinity, expected: /FAL/, result: false, itActual: 'Infinity', itExpected: '/FAL/' },
  { actual: NaN, expected: /FAL/, result: false, itActual: 'NaN', itExpected: '/FAL/' },
  { actual: JSON, expected: /FAL/, result: false, itActual: 'JSON', itExpected: '/FAL/' },
  { actual: Promise, expected: /FAL/, result: false, itActual: 'Promise', itExpected: '/FAL/' },
  { actual: new Promise(() => { }), expected: /FAL/, result: false, itActual: 'new Promise(()=>{})', itExpected: '/FAL/' },
  { actual: {}.name, expected: /FAL/, result: false, itActual: '{}.name', itExpected: '/FAL/' },
  { actual: RangeError, expected: /FAL/, result: false, itActual: 'RangeError', itExpected: '/FAL/' },
  { actual: ReferenceError, expected: /FAL/, result: false, itActual: 'ReferenceError', itExpected: '/FAL/' },
  { actual: new RangeError('error'), expected: /FAL/, result: false, itActual: 'new RangeError("error")', itExpected: '/FAL/' },
  { actual: new ReferenceError('error'), expected: /FAL/, result: false, itActual: 'new ReferenceError("error")', itExpected: '/FAL/' },
  { actual: Name, expected: /FAL/, result: false, itActual: 'Name', itExpected: '/FAL/' },
  { actual: new Name(), expected: /FAL/, result: false, itActual: 'new Name()', itExpected: '/FAL/' },
  { actual: new instance(), expected: /FAL/, result: false, itActual: 'new instance()', itExpected: '/FAL/' },
  { actual: new truthy(), expected: /FAL/, result: false, itActual: 'new truthy()', itExpected: '/FAL/' },
  { actual: new falsy(), expected: /FAL/, result: false, itActual: 'new falsy()', itExpected: '/FAL/' },
  { actual: new any(), expected: /FAL/, result: false, itActual: 'new any()', itExpected: '/FAL/' },
  { actual: new objectable(), expected: /FAL/, result: false, itActual: 'new objectable()', itExpected: '/FAL/' },

  { actual: Date, expected: /FALSY/i, result: false, itActual: 'Date', itExpected: '/FALSY/i' },
  { actual: new Date(), expected: /FALSY/i, result: false, itActual: 'new Date()', itExpected: '/FALSY/i' },
  { actual: Function, expected: /FALSY/i, result: false, itActual: 'Function', itExpected: '/FALSY/i' },
  { actual: function () { }, expected: /FALSY/i, result: false, itActual: 'function(){}', itExpected: '/FALSY/i' },
  { actual: new Function('return "hello"'), expected: /FALSY/i, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/FALSY/i' },
  { actual: (function () { return arguments; })(), expected: /FALSY/i, result: false, itActual: '(function(){return arguments;})()', itExpected: '/FALSY/i' },
  { actual: () => { }, expected: /FALSY/i, result: false, itActual: '()=>{}', itExpected: '/FALSY/i' },
  { actual: String, expected: /FALSY/i, result: false, itActual: 'String', itExpected: '/FALSY/i' },
  { actual: new String('Hello'), expected: /FALSY/i, result: false, itActual: 'new String("Hello")', itExpected: '/FALSY/i' },
  { actual: new String(''), expected: /FALSY/i, result: false, itActual: 'new String("")', itExpected: '/FALSY/i' },
  { actual: 'Hello', expected: /FALSY/i, result: false, itActual: '"Hello"', itExpected: '/FALSY/i' },
  { actual: `Hello`, expected: /FALSY/i, result: false, itActual: '`Hello`', itExpected: '/FALSY/i' },
  { actual: '', expected: /FALSY/i, result: true, itActual: '""', itExpected: '/FALSY/i' },
  { actual: Number, expected: /FALSY/i, result: false, itActual: 'Number', itExpected: '/FALSY/i' },
  { actual: new Number(10), expected: /FALSY/i, result: false, itActual: 'new Number(10)', itExpected: '/FALSY/i' },
  { actual: new Number(0), expected: /FALSY/i, result: false, itActual: 'new Number(0)', itExpected: '/FALSY/i' },
  { actual: 10, expected: /FALSY/i, result: false, itActual: '10', itExpected: '/FALSY/i' },
  { actual: 0, expected: /FALSY/i, result: true, itActual: '0', itExpected: '/FALSY/i' },
  { actual: Boolean, expected: /FALSY/i, result: false, itActual: 'Boolean', itExpected: '/FALSY/i' },
  { actual: new Boolean(0), expected: /FALSY/i, result: false, itActual: 'new Boolean(0)', itExpected: '/FALSY/i' },
  { actual: false, expected: /FALSY/i, result: true, itActual: 'false', itExpected: '/FALSY/i' },
  { actual: true, expected: /FALSY/i, result: false, itActual: 'true', itExpected: '/FALSY/i' },
  { actual: RegExp, expected: /FALSY/i, result: false, itActual: 'RegExp', itExpected: '/FALSY/i' },
  { actual: new RegExp('Hello', 'gim'), expected: /FALSY/i, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/FALSY/i' },
  { actual: /hello/, expected: /FALSY/i, result: false, itActual: '/hello/', itExpected: '/FALSY/i' },
  { actual: isNaN, expected: /FALSY/i, result: false, itActual: 'isNaN', itExpected: '/FALSY/i' },
  { actual: isNaN('hello'), expected: /FALSY/i, result: false, itActual: 'isNaN("hello")', itExpected: '/FALSY/i' },
  { actual: isFinite, expected: /FALSY/i, result: false, itActual: 'isFinite', itExpected: '/FALSY/i' },
  { actual: isFinite(10), expected: /FALSY/i, result: false, itActual: 'isFinite(10)', itExpected: '/FALSY/i' },
  { actual: Number.NEGATIVE_INFINITY, expected: /FALSY/i, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/FALSY/i' },
  { actual: Object, expected: /FALSY/i, result: false, itActual: 'Object', itExpected: '/FALSY/i' },
  { actual: {}, expected: /FALSY/i, result: false, itActual: '{}', itExpected: '/FALSY/i' },
  { actual: Error, expected: /FALSY/i, result: false, itActual: 'Error', itExpected: '/FALSY/i' },
  { actual: TypeError, expected: /FALSY/i, result: false, itActual: 'TypeError', itExpected: '/FALSY/i' },
  { actual: new Error('error'), expected: /FALSY/i, result: false, itActual: 'new Error("error")', itExpected: '/FALSY/i' },
  { actual: new TypeError('error'), expected: /FALSY/i, result: false, itActual: 'new TypeError("error")', itExpected: '/FALSY/i' },
  { actual: undefined, expected: /FALSY/i, result: true, itActual: 'undefined', itExpected: '/FALSY/i' },
  { actual: null, expected: /FALSY/i, result: true, itActual: 'null', itExpected: '/FALSY/i' },
  { actual: Infinity, expected: /FALSY/i, result: false, itActual: 'Infinity', itExpected: '/FALSY/i' },
  { actual: NaN, expected: /FALSY/i, result: true, itActual: 'NaN', itExpected: '/FALSY/i' },
  { actual: JSON, expected: /FALSY/i, result: false, itActual: 'JSON', itExpected: '/FALSY/i' },
  { actual: Promise, expected: /FALSY/i, result: false, itActual: 'Promise', itExpected: '/FALSY/i' },
  { actual: new Promise(() => { }), expected: /FALSY/i, result: false, itActual: 'new Promise(()=>{})', itExpected: '/FALSY/i' },
  { actual: {}.name, expected: /FALSY/i, result: true, itActual: '{}.name', itExpected: '/FALSY/i' },
  { actual: RangeError, expected: /FALSY/i, result: false, itActual: 'RangeError', itExpected: '/FALSY/i' },
  { actual: ReferenceError, expected: /FALSY/i, result: false, itActual: 'ReferenceError', itExpected: '/FALSY/i' },
  { actual: new RangeError('error'), expected: /FALSY/i, result: false, itActual: 'new RangeError("error")', itExpected: '/FALSY/i' },
  { actual: new ReferenceError('error'), expected: /FALSY/i, result: false, itActual: 'new ReferenceError("error")', itExpected: '/FALSY/i' },
  { actual: Name, expected: /FALSY/i, result: false, itActual: 'Name', itExpected: '/FALSY/i' },
  { actual: new Name(), expected: /FALSY/i, result: false, itActual: 'new Name()', itExpected: '/FALSY/i' },
  { actual: new instance(), expected: /FALSY/i, result: false, itActual: 'new instance()', itExpected: '/FALSY/i' },
  { actual: new truthy(), expected: /FALSY/i, result: false, itActual: 'new truthy()', itExpected: '/FALSY/i' },
  { actual: new falsy(), expected: /FALSY/i, result: true, itActual: 'new falsy()', itExpected: '/FALSY/i' },
  { actual: new any(), expected: /FALSY/i, result: false, itActual: 'new any()', itExpected: '/FALSY/i' },
  { actual: new objectable(), expected: /FALSY/i, result: false, itActual: 'new objectable()', itExpected: '/FALSY/i' },

  { actual: Date, expected: /FAL/i, result: false, itActual: 'Date', itExpected: '/FAL/i' },
  { actual: new Date(), expected: /FAL/i, result: false, itActual: 'new Date()', itExpected: '/FAL/i' },
  { actual: Function, expected: /FAL/i, result: false, itActual: 'Function', itExpected: '/FAL/i' },
  { actual: function () { }, expected: /FAL/i, result: false, itActual: 'function(){}', itExpected: '/FAL/i' },
  { actual: new Function('return "hello"'), expected: /FAL/i, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/FAL/i' },
  { actual: (function () { return arguments; })(), expected: /FAL/i, result: false, itActual: '(function(){return arguments;})()', itExpected: '/FAL/i' },
  { actual: () => { }, expected: /FAL/i, result: false, itActual: '()=>{}', itExpected: '/FAL/i' },
  { actual: String, expected: /FAL/i, result: false, itActual: 'String', itExpected: '/FAL/i' },
  { actual: new String('Hello'), expected: /FAL/i, result: false, itActual: 'new String("Hello")', itExpected: '/FAL/i' },
  { actual: new String(''), expected: /FAL/i, result: false, itActual: 'new String("")', itExpected: '/FAL/i' },
  { actual: 'Hello', expected: /FAL/i, result: false, itActual: '"Hello"', itExpected: '/FAL/i' },
  { actual: `Hello`, expected: /FAL/i, result: false, itActual: '`Hello`', itExpected: '/FAL/i' },
  { actual: '', expected: /FAL/i, result: false, itActual: '""', itExpected: '/FAL/i' },
  { actual: Number, expected: /FAL/i, result: false, itActual: 'Number', itExpected: '/FAL/i' },
  { actual: new Number(10), expected: /FAL/i, result: false, itActual: 'new Number(10)', itExpected: '/FAL/i' },
  { actual: new Number(0), expected: /FAL/i, result: false, itActual: 'new Number(0)', itExpected: '/FAL/i' },
  { actual: 10, expected: /FAL/i, result: false, itActual: '10', itExpected: '/FAL/i' },
  { actual: 0, expected: /FAL/i, result: false, itActual: '0', itExpected: '/FAL/i' },
  { actual: Boolean, expected: /FAL/i, result: false, itActual: 'Boolean', itExpected: '/FAL/i' },
  { actual: new Boolean(0), expected: /FAL/i, result: false, itActual: 'new Boolean(0)', itExpected: '/FAL/i' },
  { actual: false, expected: /FAL/i, result: false, itActual: 'false', itExpected: '/FAL/i' },
  { actual: true, expected: /FAL/i, result: false, itActual: 'true', itExpected: '/FAL/i' },
  { actual: RegExp, expected: /FAL/i, result: false, itActual: 'RegExp', itExpected: '/FAL/i' },
  { actual: new RegExp('Hello', 'gim'), expected: /FAL/i, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/FAL/i' },
  { actual: /hello/, expected: /FAL/i, result: false, itActual: '/hello/', itExpected: '/FAL/i' },
  { actual: isNaN, expected: /FAL/i, result: false, itActual: 'isNaN', itExpected: '/FAL/i' },
  { actual: isNaN('hello'), expected: /FAL/i, result: false, itActual: 'isNaN("hello")', itExpected: '/FAL/i' },
  { actual: isFinite, expected: /FAL/i, result: false, itActual: 'isFinite', itExpected: '/FAL/i' },
  { actual: isFinite(10), expected: /FAL/i, result: false, itActual: 'isFinite(10)', itExpected: '/FAL/i' },
  { actual: Number.NEGATIVE_INFINITY, expected: /FAL/i, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/FAL/i' },
  { actual: Object, expected: /FAL/i, result: false, itActual: 'Object', itExpected: '/FAL/i' },
  { actual: {}, expected: /FAL/i, result: false, itActual: '{}', itExpected: '/FAL/i' },
  { actual: Error, expected: /FAL/i, result: false, itActual: 'Error', itExpected: '/FAL/i' },
  { actual: TypeError, expected: /FAL/i, result: false, itActual: 'TypeError', itExpected: '/FAL/i' },
  { actual: new Error('error'), expected: /FAL/i, result: false, itActual: 'new Error("error")', itExpected: '/FAL/i' },
  { actual: new TypeError('error'), expected: /FAL/i, result: false, itActual: 'new TypeError("error")', itExpected: '/FAL/i' },
  { actual: undefined, expected: /FAL/i, result: false, itActual: 'undefined', itExpected: '/FAL/i' },
  { actual: null, expected: /FAL/i, result: false, itActual: 'null', itExpected: '/FAL/i' },
  { actual: Infinity, expected: /FAL/i, result: false, itActual: 'Infinity', itExpected: '/FAL/i' },
  { actual: NaN, expected: /FAL/i, result: false, itActual: 'NaN', itExpected: '/FAL/i' },
  { actual: JSON, expected: /FAL/i, result: false, itActual: 'JSON', itExpected: '/FAL/i' },
  { actual: Promise, expected: /FAL/i, result: false, itActual: 'Promise', itExpected: '/FAL/i' },
  { actual: new Promise(() => { }), expected: /FAL/i, result: false, itActual: 'new Promise(()=>{})', itExpected: '/FAL/i' },
  { actual: {}.name, expected: /FAL/i, result: false, itActual: '{}.name', itExpected: '/FAL/i' },
  { actual: RangeError, expected: /FAL/i, result: false, itActual: 'RangeError', itExpected: '/FAL/i' },
  { actual: ReferenceError, expected: /FAL/i, result: false, itActual: 'ReferenceError', itExpected: '/FAL/i' },
  { actual: new RangeError('error'), expected: /FAL/i, result: false, itActual: 'new RangeError("error")', itExpected: '/FAL/i' },
  { actual: new ReferenceError('error'), expected: /FAL/i, result: false, itActual: 'new ReferenceError("error")', itExpected: '/FAL/i' },
  { actual: Name, expected: /FAL/i, result: false, itActual: 'Name', itExpected: '/FAL/i' },
  { actual: new Name(), expected: /FAL/i, result: false, itActual: 'new Name()', itExpected: '/FAL/i' },
  { actual: new instance(), expected: /FAL/i, result: false, itActual: 'new instance()', itExpected: '/FAL/i' },
  { actual: new truthy(), expected: /FAL/i, result: false, itActual: 'new truthy()', itExpected: '/FAL/i' },
  { actual: new falsy(), expected: /FAL/i, result: true, itActual: 'new falsy()', itExpected: '/FAL/i' },
  { actual: new any(), expected: /FAL/i, result: false, itActual: 'new any()', itExpected: '/FAL/i' },
  { actual: new objectable(), expected: /FAL/i, result: false, itActual: 'new objectable()', itExpected: '/FAL/i' },

  { actual: Date, expected: /falsy|fun/i, result: true, itActual: 'Date', itExpected: '/falsy|fun/i' },
  { actual: new Date(), expected: /falsy|dat/i, result: true, itActual: 'new Date()', itExpected: '/falsy|dat/i' },
  { actual: Function, expected: /falsy|fun/i, result: true, itActual: 'Function', itExpected: '/falsy|fun/i' },
  { actual: function () { }, expected: /falsy|fun/i, result: true, itActual: 'function(){}', itExpected: '/falsy|fun/i' },
  { actual: new Function('return "hello"'), expected: /falsy|fun/i, result: true, itActual: 'new Function(\'return "hello"\')', itExpected: '/falsy|fun/i' },
  { actual: (function () { return arguments; })(), expected: /falsy|arguments/i, result: true, itActual: '(function(){return arguments;})()', itExpected: '/falsy|arg/i' },
  { actual: (function () { return arguments; })(), expected: /falsy|Arguments/i, result: true, itActual: '(function(){return arguments;})()', itExpected: '/falsy|arg/i' },
  { actual: (function () { return arguments; })(), expected: /falsy|ARGUMENTS/i, result: true, itActual: '(function(){return arguments;})()', itExpected: '/falsy|arg/i' },
  { actual: (function () { return arguments; })(), expected: /falsy|arg/i, result: false, itActual: '(function(){return arguments;})()', itExpected: '/falsy|arg/i' },
  { actual: (function () { return arguments; })(), expected: /falsy|obj/i, result: true, itActual: '(function(){return arguments;})()', itExpected: '/falsy|obj/i' },
  { actual: () => { }, expected: /falsy|fun/i, result: true, itActual: '()=>{}', itExpected: '/falsy|fun/i' },
  { actual: String, expected: /falsy|fun/i, result: true, itActual: 'String', itExpected: '/falsy|fun/i' },
  { actual: new String('Hello'), expected: /falsy|str/i, result: true, itActual: 'new String("Hello")', itExpected: '/falsy|str/i' },
  { actual: new String(''), expected: /falsy|str/i, result: true, itActual: 'new String("")', itExpected: '/falsy|str/i' },
  { actual: 'Hello', expected: /falsy|str/i, result: true, itActual: '"Hello"', itExpected: '/falsy|str/i' },
  { actual: `Hello`, expected: /falsy|str/i, result: true, itActual: '`Hello`', itExpected: '/falsy|str/i' },
  { actual: '', expected: /truthy|str/i, result: true, itActual: '""', itExpected: '/truthy|str/i' },
  { actual: Number, expected: /falsy|fun/i, result: true, itActual: 'Number', itExpected: '/falsy|fun/i' },
  { actual: new Number(10), expected: /falsy|num/i, result: true, itActual: 'new Number(10)', itExpected: '/falsy|num/i' },
  { actual: new Number(0), expected: /falsy|num/i, result: true, itActual: 'new Number(0)', itExpected: '/falsy|num/i' },
  { actual: 10, expected: /falsy|num/i, result: true, itActual: '10', itExpected: '/falsy|num/i' },
  { actual: 0, expected: /truthy|num/i, result: true, itActual: '0', itExpected: '/falsy|num/i' },
  { actual: Boolean, expected: /falsy|fun/i, result: true, itActual: 'Boolean', itExpected: '/falsy|fun/i' },
  { actual: new Boolean(0), expected: /falsy|boo/i, result: true, itActual: 'new Boolean(0)', itExpected: '/falsy|boo/i' },
  { actual: false, expected: /truthy|boo/i, result: true, itActual: 'false', itExpected: '/truthy|boo/i' },
  { actual: true, expected: /falsy|boo/i, result: true, itActual: 'true', itExpected: '/falsy|boo/i' },
  { actual: RegExp, expected: /falsy|fun/i, result: true, itActual: 'RegExp', itExpected: '/falsy|fun/i' },
  { actual: new RegExp('Hello', 'gim'), expected: /falsy|reg/i, result: true, itActual: 'new RegExp("Hello","gim")', itExpected: '/falsy|reg/i' },
  { actual: /hello/, expected: /falsy|reg/i, result: true, itActual: '/hello/', itExpected: '/falsy|reg/i' },
  { actual: isNaN, expected: /falsy|fun/i, result: true, itActual: 'isNaN', itExpected: '/falsy|fun/i' },
  { actual: isNaN('hello'), expected: /falsy|boo/i, result: true, itActual: 'isNaN("hello")', itExpected: '/truthy|boo/i' },
  { actual: isFinite, expected: /falsy|fun/i, result: true, itActual: 'isFinite', itExpected: '/falsy|fun/i' },
  { actual: isFinite(10), expected: /falsy|boo/i, result: true, itActual: 'isFinite(10)', itExpected: '/falsy|boo/i' },
  { actual: Number.NEGATIVE_INFINITY, expected: /falsy|num/i, result: true, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/falsy|num/i' },
  { actual: Object, expected: /falsy|fun/i, result: true, itActual: 'Object', itExpected: '/falsy|fun/i' },
  { actual: {}, expected: /falsy|obj/i, result: true, itActual: '{}', itExpected: '/falsy|obj/i' },
  { actual: Error, expected: /falsy|fun/i, result: true, itActual: 'Error', itExpected: '/falsy|fun/i' },
  { actual: TypeError, expected: /falsy|fun/i, result: true, itActual: 'TypeError', itExpected: '/falsy|fun/i' },
  { actual: new Error('error'), expected: /falsy|err/i, result: true, itActual: 'new Error("error")', itExpected: '/falsy|err/i' },
  { actual: new TypeError('error'), expected: /falsy|err/i, result: true, itActual: 'new TypeError("error")', itExpected: '/falsy|err/i' },
  { actual: undefined, expected: /truthy|undefined/i, result: true, itActual: 'undefined', itExpected: '/truthy|undefined/i' },
  { actual: null, expected: /truthy|null/i, result: true, itActual: 'null', itExpected: '/truthy|null/i' },
  { actual: Infinity, expected: /falsy|num/i, result: true, itActual: 'Infinity', itExpected: '/falsy|num/i' },
  { actual: NaN, expected: /truthy|num/i, result: true, itActual: 'NaN', itExpected: '/falsy|num/i' },
  { actual: JSON, expected: /falsy|obj/i, result: true, itActual: 'JSON', itExpected: '/falsy|obj/i' },
  { actual: Promise, expected: /falsy|fun/i, result: true, itActual: 'Promise', itExpected: '/falsy|fun/i' },
  { actual: new Promise(() => { }), expected: /falsy|pro/i, result: true, itActual: 'new Promise(()=>{})', itExpected: '/falsy|pro/i' },
  { actual: {}.name, expected: /truthy|und/i, result: true, itActual: '{}.name', itExpected: '/truthy|und/i' },
  { actual: RangeError, expected: /falsy|fun/i, result: true, itActual: 'RangeError', itExpected: '/falsy|fun/i' },
  { actual: ReferenceError, expected: /falsy|fun/i, result: true, itActual: 'ReferenceError', itExpected: '/falsy|fun/i' },
  { actual: new RangeError('error'), expected: /falsy|err/i, result: true, itActual: 'new RangeError("error")', itExpected: '/falsy|err/i' },
  { actual: new ReferenceError('error'), expected: /falsy|err/i, result: true, itActual: 'new ReferenceError("error")', itExpected: '/falsy|err/i' },
  { actual: Name, expected: /falsy|fun/i, result: true, itActual: 'Name', itExpected: '/falsy|fun/i' },
  { actual: new Name(), expected: /falsy|nam/i, result: true, itActual: 'new Name()', itExpected: '/falsy|nam/i' },
  { actual: new instance(), expected: /falsy|iNs/i, result: true, itActual: 'new instance()', itExpected: '/falsy|iNs/i' },
  { actual: new truthy(), expected: /falsy|tRu/i, result: true, itActual: 'new truthy()', itExpected: '/falsy|tRu/i' },
  { actual: new falsy(), expected: /falsy|fAl/i, result: true, itActual: 'new falsy()', itExpected: '/falsy|fAl/i' },
  { actual: new any(), expected: /falsy|aN/i, result: true, itActual: 'new any()', itExpected: '/falsy|aN/i' },
  { actual: new objectable(), expected: /falsy|oBj/i, result: true, itActual: 'new objectable()', itExpected: '/falsy|oBj/i' },

  { actual: Date, expected: /objectable/, result: true, itActual: 'Date', itExpected: '/objectable/' },
  { actual: new Date(), expected: /objectable/, result: true, itActual: 'new Date()', itExpected: '/objectable/' },
  { actual: Function, expected: /objectable/, result: true, itActual: 'Function', itExpected: '/objectable/' },
  { actual: function () { }, expected: /objectable/, result: true, itActual: 'function(){}', itExpected: '/objectable/' },
  { actual: new Function('return "hello"'), expected: /objectable/, result: true, itActual: 'new Function(\'return "hello"\')', itExpected: '/objectable/' },
  { actual: (function () { return arguments; })(), expected: /objectable/, result: true, itActual: '(function(){return arguments;})()', itExpected: '/objectable/' },
  { actual: () => { }, expected: /objectable/, result: true, itActual: '()=>{}', itExpected: '/objectable/' },
  { actual: String, expected: /objectable/, result: true, itActual: 'String', itExpected: '/objectable/' },
  { actual: new String('Hello'), expected: /objectable/, result: true, itActual: 'new String("Hello")', itExpected: '/objectable/' },
  { actual: new String(''), expected: /objectable/, result: true, itActual: 'new String("")', itExpected: '/objectable/' },
  { actual: 'Hello', expected: /objectable/, result: false, itActual: '"Hello"', itExpected: '/objectable/' },
  { actual: `Hello`, expected: /objectable/, result: false, itActual: '`Hello`', itExpected: '/objectable/' },
  { actual: '', expected: /objectable/, result: false, itActual: '""', itExpected: '/objectable/' },
  { actual: Number, expected: /objectable/, result: true, itActual: 'Number', itExpected: '/objectable/' },
  { actual: new Number(10), expected: /objectable/, result: true, itActual: 'new Number(10)', itExpected: '/objectable/' },
  { actual: new Number(0), expected: /objectable/, result: true, itActual: 'new Number(0)', itExpected: '/objectable/' },
  { actual: 10, expected: /objectable/, result: false, itActual: '10', itExpected: '/objectable/' },
  { actual: 0, expected: /objectable/, result: false, itActual: '0', itExpected: '/objectable/' },
  { actual: Boolean, expected: /objectable/, result: true, itActual: 'Boolean', itExpected: '/objectable/' },
  { actual: new Boolean(0), expected: /objectable/, result: true, itActual: 'new Boolean(0)', itExpected: '/objectable/' },
  { actual: false, expected: /objectable/, result: false, itActual: 'false', itExpected: '/objectable/' },
  { actual: true, expected: /objectable/, result: false, itActual: 'true', itExpected: '/objectable/' },
  { actual: RegExp, expected: /objectable/, result: true, itActual: 'RegExp', itExpected: '/objectable/' },
  { actual: new RegExp('Hello', 'gim'), expected: /objectable/, result: true, itActual: 'new RegExp("Hello","gim")', itExpected: '/objectable/' },
  { actual: /hello/, expected: /objectable/, result: true, itActual: '/hello/', itExpected: '/objectable/' },
  { actual: isNaN, expected: /objectable/, result: true, itActual: 'isNaN', itExpected: '/objectable/' },
  { actual: isNaN('hello'), expected: /objectable/, result: false, itActual: 'isNaN("hello")', itExpected: '/objectable/' },
  { actual: isFinite, expected: /objectable/, result: true, itActual: 'isFinite', itExpected: '/objectable/' },
  { actual: isFinite(10), expected: /objectable/, result: false, itActual: 'isFinite(10)', itExpected: '/objectable/' },
  { actual: Number.NEGATIVE_INFINITY, expected: /objectable/, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/objectable/' },
  { actual: Object, expected: /objectable/, result: true, itActual: 'Object', itExpected: '/objectable/' },
  { actual: {}, expected: /objectable/, result: true, itActual: '{}', itExpected: '/objectable/' },
  { actual: Error, expected: /objectable/, result: true, itActual: 'Error', itExpected: '/objectable/' },
  { actual: TypeError, expected: /objectable/, result: true, itActual: 'TypeError', itExpected: '/objectable/' },
  { actual: new Error('error'), expected: /objectable/, result: true, itActual: 'new Error("error")', itExpected: '/objectable/' },
  { actual: new TypeError('error'), expected: /objectable/, result: true, itActual: 'new TypeError("error")', itExpected: '/objectable/' },
  { actual: undefined, expected: /objectable/, result: false, itActual: 'undefined', itExpected: '/objectable/' },
  { actual: null, expected: /objectable/, result: false, itActual: 'null', itExpected: '/objectable/' },
  { actual: Infinity, expected: /objectable/, result: false, itActual: 'Infinity', itExpected: '/objectable/' },
  { actual: NaN, expected: /objectable/, result: false, itActual: 'NaN', itExpected: '/objectable/' },
  { actual: JSON, expected: /objectable/, result: true, itActual: 'JSON', itExpected: '/objectable/' },
  { actual: Promise, expected: /objectable/, result: true, itActual: 'Promise', itExpected: '/objectable/' },
  { actual: new Promise(() => { }), expected: /objectable/, result: true, itActual: 'new Promise(()=>{})', itExpected: '/objectable/' },
  { actual: {}.name, expected: /objectable/, result: false, itActual: '{}.name', itExpected: '/objectable/' },
  { actual: RangeError, expected: /objectable/, result: true, itActual: 'RangeError', itExpected: '/objectable/' },
  { actual: ReferenceError, expected: /objectable/, result: true, itActual: 'ReferenceError', itExpected: '/objectable/' },
  { actual: new RangeError('error'), expected: /objectable/, result: true, itActual: 'new RangeError("error")', itExpected: '/objectable/' },
  { actual: new ReferenceError('error'), expected: /objectable/, result: true, itActual: 'new ReferenceError("error")', itExpected: '/objectable/' },
  { actual: Name, expected: /objectable/, result: true, itActual: 'Name', itExpected: '/objectable/' },
  { actual: new Name(), expected: /objectable/, result: true, itActual: 'new Name()', itExpected: '/objectable/' },
  { actual: new instance(), expected: /objectable/, result: true, itActual: 'new instance()', itExpected: '/objectable/' },
  { actual: new truthy(), expected: /objectable/, result: true, itActual: 'new truthy()', itExpected: '/objectable/' },
  { actual: new falsy(), expected: /objectable/, result: true, itActual: 'new falsy()', itExpected: '/objectable/' },
  { actual: new any(), expected: /objectable/, result: true, itActual: 'new any()', itExpected: '/objectable/' },
  { actual: new objectable(), expected: /objectable/, result: true, itActual: 'new objectable()', itExpected: '/objectable/' },

  { actual: Date, expected: /ObJeCtAbLe/, result: false, itActual: 'Date', itExpected: '/ObJeCtAbLe/' },
  { actual: new Date(), expected: /ObJeCtAbLe/, result: false, itActual: 'new Date()', itExpected: '/ObJeCtAbLe/' },
  { actual: Function, expected: /ObJeCtAbLe/, result: false, itActual: 'Function', itExpected: '/ObJeCtAbLe/' },
  { actual: function () { }, expected: /ObJeCtAbLe/, result: false, itActual: 'function(){}', itExpected: '/ObJeCtAbLe/' },
  { actual: new Function('return "hello"'), expected: /ObJeCtAbLe/, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/ObJeCtAbLe/' },
  { actual: (function () { return arguments; })(), expected: /ObJeCtAbLe/, result: false, itActual: '(function(){return arguments;})()', itExpected: '/ObJeCtAbLe/' },
  { actual: () => { }, expected: /ObJeCtAbLe/, result: false, itActual: '()=>{}', itExpected: '/ObJeCtAbLe/' },
  { actual: String, expected: /ObJeCtAbLe/, result: false, itActual: 'String', itExpected: '/ObJeCtAbLe/' },
  { actual: new String('Hello'), expected: /ObJeCtAbLe/, result: false, itActual: 'new String("Hello")', itExpected: '/ObJeCtAbLe/' },
  { actual: new String(''), expected: /ObJeCtAbLe/, result: false, itActual: 'new String("")', itExpected: '/ObJeCtAbLe/' },
  { actual: 'Hello', expected: /ObJeCtAbLe/, result: false, itActual: '"Hello"', itExpected: '/ObJeCtAbLe/' },
  { actual: `Hello`, expected: /ObJeCtAbLe/, result: false, itActual: '`Hello`', itExpected: '/ObJeCtAbLe/' },
  { actual: '', expected: /ObJeCtAbLe/, result: false, itActual: '""', itExpected: '/ObJeCtAbLe/' },
  { actual: Number, expected: /ObJeCtAbLe/, result: false, itActual: 'Number', itExpected: '/ObJeCtAbLe/' },
  { actual: new Number(10), expected: /ObJeCtAbLe/, result: false, itActual: 'new Number(10)', itExpected: '/ObJeCtAbLe/' },
  { actual: new Number(0), expected: /ObJeCtAbLe/, result: false, itActual: 'new Number(0)', itExpected: '/ObJeCtAbLe/' },
  { actual: 10, expected: /ObJeCtAbLe/, result: false, itActual: '10', itExpected: '/ObJeCtAbLe/' },
  { actual: 0, expected: /ObJeCtAbLe/, result: false, itActual: '0', itExpected: '/ObJeCtAbLe/' },
  { actual: Boolean, expected: /ObJeCtAbLe/, result: false, itActual: 'Boolean', itExpected: '/ObJeCtAbLe/' },
  { actual: new Boolean(0), expected: /ObJeCtAbLe/, result: false, itActual: 'new Boolean(0)', itExpected: '/ObJeCtAbLe/' },
  { actual: false, expected: /ObJeCtAbLe/, result: false, itActual: 'false', itExpected: '/ObJeCtAbLe/' },
  { actual: true, expected: /ObJeCtAbLe/, result: false, itActual: 'true', itExpected: '/ObJeCtAbLe/' },
  { actual: RegExp, expected: /ObJeCtAbLe/, result: false, itActual: 'RegExp', itExpected: '/ObJeCtAbLe/' },
  { actual: new RegExp('Hello', 'gim'), expected: /ObJeCtAbLe/, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/ObJeCtAbLe/' },
  { actual: /hello/, expected: /ObJeCtAbLe/, result: false, itActual: '/hello/', itExpected: '/ObJeCtAbLe/' },
  { actual: isNaN, expected: /ObJeCtAbLe/, result: false, itActual: 'isNaN', itExpected: '/ObJeCtAbLe/' },
  { actual: isNaN('hello'), expected: /ObJeCtAbLe/, result: false, itActual: 'isNaN("hello")', itExpected: '/ObJeCtAbLe/' },
  { actual: isFinite, expected: /ObJeCtAbLe/, result: false, itActual: 'isFinite', itExpected: '/ObJeCtAbLe/' },
  { actual: isFinite(10), expected: /ObJeCtAbLe/, result: false, itActual: 'isFinite(10)', itExpected: '/ObJeCtAbLe/' },
  { actual: Number.NEGATIVE_INFINITY, expected: /ObJeCtAbLe/, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/ObJeCtAbLe/' },
  { actual: Object, expected: /ObJeCtAbLe/, result: false, itActual: 'Object', itExpected: '/ObJeCtAbLe/' },
  { actual: {}, expected: /ObJeCtAbLe/, result: false, itActual: '{}', itExpected: '/ObJeCtAbLe/' },
  { actual: Error, expected: /ObJeCtAbLe/, result: false, itActual: 'Error', itExpected: '/ObJeCtAbLe/' },
  { actual: TypeError, expected: /ObJeCtAbLe/, result: false, itActual: 'TypeError', itExpected: '/ObJeCtAbLe/' },
  { actual: new Error('error'), expected: /ObJeCtAbLe/, result: false, itActual: 'new Error("error")', itExpected: '/ObJeCtAbLe/' },
  { actual: new TypeError('error'), expected: /ObJeCtAbLe/, result: false, itActual: 'new TypeError("error")', itExpected: '/ObJeCtAbLe/' },
  { actual: undefined, expected: /ObJeCtAbLe/, result: false, itActual: 'undefined', itExpected: '/ObJeCtAbLe/' },
  { actual: null, expected: /ObJeCtAbLe/, result: false, itActual: 'null', itExpected: '/ObJeCtAbLe/' },
  { actual: Infinity, expected: /ObJeCtAbLe/, result: false, itActual: 'Infinity', itExpected: '/ObJeCtAbLe/' },
  { actual: NaN, expected: /ObJeCtAbLe/, result: false, itActual: 'NaN', itExpected: '/ObJeCtAbLe/' },
  { actual: JSON, expected: /ObJeCtAbLe/, result: false, itActual: 'JSON', itExpected: '/ObJeCtAbLe/' },
  { actual: Promise, expected: /ObJeCtAbLe/, result: false, itActual: 'Promise', itExpected: '/ObJeCtAbLe/' },
  { actual: new Promise(() => { }), expected: /ObJeCtAbLe/, result: false, itActual: 'new Promise(()=>{})', itExpected: '/ObJeCtAbLe/' },
  { actual: {}.name, expected: /ObJeCtAbLe/, result: false, itActual: '{}.name', itExpected: '/ObJeCtAbLe/' },
  { actual: RangeError, expected: /ObJeCtAbLe/, result: false, itActual: 'RangeError', itExpected: '/ObJeCtAbLe/' },
  { actual: ReferenceError, expected: /ObJeCtAbLe/, result: false, itActual: 'ReferenceError', itExpected: '/ObJeCtAbLe/' },
  { actual: new RangeError('error'), expected: /ObJeCtAbLe/, result: false, itActual: 'new RangeError("error")', itExpected: '/ObJeCtAbLe/' },
  { actual: new ReferenceError('error'), expected: /ObJeCtAbLe/, result: false, itActual: 'new ReferenceError("error")', itExpected: '/ObJeCtAbLe/' },
  { actual: Name, expected: /ObJeCtAbLe/, result: false, itActual: 'Name', itExpected: '/ObJeCtAbLe/' },
  { actual: new Name(), expected: /ObJeCtAbLe/, result: false, itActual: 'new Name()', itExpected: '/ObJeCtAbLe/' },
  { actual: new instance(), expected: /ObJeCtAbLe/, result: false, itActual: 'new instance()', itExpected: '/ObJeCtAbLe/' },
  { actual: new truthy(), expected: /ObJeCtAbLe/, result: false, itActual: 'new truthy()', itExpected: '/ObJeCtAbLe/' },
  { actual: new falsy(), expected: /ObJeCtAbLe/, result: false, itActual: 'new falsy()', itExpected: '/ObJeCtAbLe/' },
  { actual: new any(), expected: /ObJeCtAbLe/, result: false, itActual: 'new any()', itExpected: '/ObJeCtAbLe/' },
  { actual: new objectable(), expected: /ObJeCtAbLe/, result: false, itActual: 'new objectable()', itExpected: '/ObJeCtAbLe/' },

  { actual: Date, expected: /ObJeCtAbLe/i, result: true, itActual: 'Date', itExpected: '/ObJeCtAbLe/i' },
  { actual: new Date(), expected: /ObJeCtAbLe/i, result: true, itActual: 'new Date()', itExpected: '/ObJeCtAbLe/i' },
  { actual: Function, expected: /ObJeCtAbLe/i, result: true, itActual: 'Function', itExpected: '/ObJeCtAbLe/i' },
  { actual: function () { }, expected: /ObJeCtAbLe/i, result: true, itActual: 'function(){}', itExpected: '/ObJeCtAbLe/i' },
  { actual: new Function('return "hello"'), expected: /ObJeCtAbLe/i, result: true, itActual: 'new Function(\'return "hello"\')', itExpected: '/ObJeCtAbLe/i' },
  { actual: (function () { return arguments; })(), expected: /ObJeCtAbLe/i, result: true, itActual: '(function(){return arguments;})()', itExpected: '/ObJeCtAbLe/i' },
  { actual: () => { }, expected: /ObJeCtAbLe/i, result: true, itActual: '()=>{}', itExpected: '/ObJeCtAbLe/i' },
  { actual: String, expected: /ObJeCtAbLe/i, result: true, itActual: 'String', itExpected: '/ObJeCtAbLe/i' },
  { actual: new String('Hello'), expected: /ObJeCtAbLe/i, result: true, itActual: 'new String("Hello")', itExpected: '/ObJeCtAbLe/i' },
  { actual: new String(''), expected: /ObJeCtAbLe/i, result: true, itActual: 'new String("")', itExpected: '/ObJeCtAbLe/i' },
  { actual: 'Hello', expected: /ObJeCtAbLe/i, result: false, itActual: '"Hello"', itExpected: '/ObJeCtAbLe/i' },
  { actual: `Hello`, expected: /ObJeCtAbLe/i, result: false, itActual: '`Hello`', itExpected: '/ObJeCtAbLe/i' },
  { actual: '', expected: /ObJeCtAbLe/i, result: false, itActual: '""', itExpected: '/ObJeCtAbLe/i' },
  { actual: Number, expected: /ObJeCtAbLe/i, result: true, itActual: 'Number', itExpected: '/ObJeCtAbLe/i' },
  { actual: new Number(10), expected: /ObJeCtAbLe/i, result: true, itActual: 'new Number(10)', itExpected: '/ObJeCtAbLe/i' },
  { actual: new Number(0), expected: /ObJeCtAbLe/i, result: true, itActual: 'new Number(0)', itExpected: '/ObJeCtAbLe/i' },
  { actual: 10, expected: /ObJeCtAbLe/i, result: false, itActual: '10', itExpected: '/ObJeCtAbLe/i' },
  { actual: 0, expected: /ObJeCtAbLe/i, result: false, itActual: '0', itExpected: '/ObJeCtAbLe/i' },
  { actual: Boolean, expected: /ObJeCtAbLe/i, result: true, itActual: 'Boolean', itExpected: '/ObJeCtAbLe/i' },
  { actual: new Boolean(0), expected: /ObJeCtAbLe/i, result: true, itActual: 'new Boolean(0)', itExpected: '/ObJeCtAbLe/i' },
  { actual: false, expected: /ObJeCtAbLe/i, result: false, itActual: 'false', itExpected: '/ObJeCtAbLe/i' },
  { actual: true, expected: /ObJeCtAbLe/i, result: false, itActual: 'true', itExpected: '/ObJeCtAbLe/i' },
  { actual: RegExp, expected: /ObJeCtAbLe/i, result: true, itActual: 'RegExp', itExpected: '/ObJeCtAbLe/i' },
  { actual: new RegExp('Hello', 'gim'), expected: /ObJeCtAbLe/i, result: true, itActual: 'new RegExp("Hello","gim")', itExpected: '/ObJeCtAbLe/i' },
  { actual: /hello/, expected: /ObJeCtAbLe/i, result: true, itActual: '/hello/', itExpected: '/ObJeCtAbLe/i' },
  { actual: isNaN, expected: /ObJeCtAbLe/i, result: true, itActual: 'isNaN', itExpected: '/ObJeCtAbLe/i' },
  { actual: isNaN('hello'), expected: /ObJeCtAbLe/i, result: false, itActual: 'isNaN("hello")', itExpected: '/ObJeCtAbLe/i' },
  { actual: isFinite, expected: /ObJeCtAbLe/i, result: true, itActual: 'isFinite', itExpected: '/ObJeCtAbLe/i' },
  { actual: isFinite(10), expected: /ObJeCtAbLe/i, result: false, itActual: 'isFinite(10)', itExpected: '/ObJeCtAbLe/i' },
  { actual: Number.NEGATIVE_INFINITY, expected: /ObJeCtAbLe/i, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/ObJeCtAbLe/i' },
  { actual: Object, expected: /ObJeCtAbLe/i, result: true, itActual: 'Object', itExpected: '/ObJeCtAbLe/i' },
  { actual: {}, expected: /ObJeCtAbLe/i, result: true, itActual: '{}', itExpected: '/ObJeCtAbLe/i' },
  { actual: Error, expected: /ObJeCtAbLe/i, result: true, itActual: 'Error', itExpected: '/ObJeCtAbLe/i' },
  { actual: TypeError, expected: /ObJeCtAbLe/i, result: true, itActual: 'TypeError', itExpected: '/ObJeCtAbLe/i' },
  { actual: new Error('error'), expected: /ObJeCtAbLe/i, result: true, itActual: 'new Error("error")', itExpected: '/ObJeCtAbLe/i' },
  { actual: new TypeError('error'), expected: /ObJeCtAbLe/i, result: true, itActual: 'new TypeError("error")', itExpected: '/ObJeCtAbLe/i' },
  { actual: undefined, expected: /ObJeCtAbLe/i, result: false, itActual: 'undefined', itExpected: '/ObJeCtAbLe/i' },
  { actual: null, expected: /ObJeCtAbLe/i, result: false, itActual: 'null', itExpected: '/ObJeCtAbLe/i' },
  { actual: Infinity, expected: /ObJeCtAbLe/i, result: false, itActual: 'Infinity', itExpected: '/ObJeCtAbLe/i' },
  { actual: NaN, expected: /ObJeCtAbLe/i, result: false, itActual: 'NaN', itExpected: '/ObJeCtAbLe/i' },
  { actual: JSON, expected: /ObJeCtAbLe/i, result: true, itActual: 'JSON', itExpected: '/ObJeCtAbLe/i' },
  { actual: Promise, expected: /ObJeCtAbLe/i, result: true, itActual: 'Promise', itExpected: '/ObJeCtAbLe/i' },
  { actual: new Promise(() => { }), expected: /ObJeCtAbLe/i, result: true, itActual: 'new Promise(()=>{})', itExpected: '/ObJeCtAbLe/i' },
  { actual: {}.name, expected: /ObJeCtAbLe/i, result: false, itActual: '{}.name', itExpected: '/ObJeCtAbLe/i' },
  { actual: RangeError, expected: /ObJeCtAbLe/i, result: true, itActual: 'RangeError', itExpected: '/ObJeCtAbLe/i' },
  { actual: ReferenceError, expected: /ObJeCtAbLe/i, result: true, itActual: 'ReferenceError', itExpected: '/ObJeCtAbLe/i' },
  { actual: new RangeError('error'), expected: /ObJeCtAbLe/i, result: true, itActual: 'new RangeError("error")', itExpected: '/ObJeCtAbLe/i' },
  { actual: new ReferenceError('error'), expected: /ObJeCtAbLe/i, result: true, itActual: 'new ReferenceError("error")', itExpected: '/ObJeCtAbLe/i' },
  { actual: Name, expected: /ObJeCtAbLe/i, result: true, itActual: 'Name', itExpected: '/ObJeCtAbLe/i' },
  { actual: new Name(), expected: /ObJeCtAbLe/i, result: true, itActual: 'new Name()', itExpected: '/ObJeCtAbLe/i' },
  { actual: new instance(), expected: /ObJeCtAbLe/i, result: true, itActual: 'new instance()', itExpected: '/ObJeCtAbLe/i' },
  { actual: new truthy(), expected: /ObJeCtAbLe/i, result: true, itActual: 'new truthy()', itExpected: '/ObJeCtAbLe/i' },
  { actual: new falsy(), expected: /ObJeCtAbLe/i, result: true, itActual: 'new falsy()', itExpected: '/ObJeCtAbLe/i' },
  { actual: new any(), expected: /ObJeCtAbLe/i, result: true, itActual: 'new any()', itExpected: '/ObJeCtAbLe/i' },
  { actual: new objectable(), expected: /ObJeCtAbLe/i, result: true, itActual: 'new objectable()', itExpected: '/ObJeCtAbLe/i' },

  { actual: Date, expected: /objecta/, result: false, itActual: 'Date', itExpected: '/objecta/' },
  { actual: new Date(), expected: /objecta/, result: false, itActual: 'new Date()', itExpected: '/objecta/' },
  { actual: Function, expected: /objecta/, result: false, itActual: 'Function', itExpected: '/objecta/' },
  { actual: function () { }, expected: /objecta/, result: false, itActual: 'function(){}', itExpected: '/objecta/' },
  { actual: new Function('return "hello"'), expected: /objecta/, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/objecta/' },
  { actual: (function () { return arguments; })(), expected: /objecta/, result: false, itActual: '(function(){return arguments;})()', itExpected: '/objecta/' },
  { actual: () => { }, expected: /objecta/, result: false, itActual: '()=>{}', itExpected: '/objecta/' },
  { actual: String, expected: /objecta/, result: false, itActual: 'String', itExpected: '/objecta/' },
  { actual: new String('Hello'), expected: /objecta/, result: false, itActual: 'new String("Hello")', itExpected: '/objecta/' },
  { actual: new String(''), expected: /objecta/, result: false, itActual: 'new String("")', itExpected: '/objecta/' },
  { actual: 'Hello', expected: /objecta/, result: false, itActual: '"Hello"', itExpected: '/objecta/' },
  { actual: `Hello`, expected: /objecta/, result: false, itActual: '`Hello`', itExpected: '/objecta/' },
  { actual: '', expected: /objecta/, result: false, itActual: '""', itExpected: '/objecta/' },
  { actual: Number, expected: /objecta/, result: false, itActual: 'Number', itExpected: '/objecta/' },
  { actual: new Number(10), expected: /objecta/, result: false, itActual: 'new Number(10)', itExpected: '/objecta/' },
  { actual: new Number(0), expected: /objecta/, result: false, itActual: 'new Number(0)', itExpected: '/objecta/' },
  { actual: 10, expected: /objecta/, result: false, itActual: '10', itExpected: '/objecta/' },
  { actual: 0, expected: /objecta/, result: false, itActual: '0', itExpected: '/objecta/' },
  { actual: Boolean, expected: /objecta/, result: false, itActual: 'Boolean', itExpected: '/objecta/' },
  { actual: new Boolean(0), expected: /objecta/, result: false, itActual: 'new Boolean(0)', itExpected: '/objecta/' },
  { actual: false, expected: /objecta/, result: false, itActual: 'false', itExpected: '/objecta/' },
  { actual: true, expected: /objecta/, result: false, itActual: 'true', itExpected: '/objecta/' },
  { actual: RegExp, expected: /objecta/, result: false, itActual: 'RegExp', itExpected: '/objecta/' },
  { actual: new RegExp('Hello', 'gim'), expected: /objecta/, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/objecta/' },
  { actual: /hello/, expected: /objecta/, result: false, itActual: '/hello/', itExpected: '/objecta/' },
  { actual: isNaN, expected: /objecta/, result: false, itActual: 'isNaN', itExpected: '/objecta/' },
  { actual: isNaN('hello'), expected: /objecta/, result: false, itActual: 'isNaN("hello")', itExpected: '/objecta/' },
  { actual: isFinite, expected: /objecta/, result: false, itActual: 'isFinite', itExpected: '/objecta/' },
  { actual: isFinite(10), expected: /objecta/, result: false, itActual: 'isFinite(10)', itExpected: '/objecta/' },
  { actual: Number.NEGATIVE_INFINITY, expected: /objecta/, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/objecta/' },
  { actual: Object, expected: /objecta/, result: false, itActual: 'Object', itExpected: '/objecta/' },
  { actual: {}, expected: /objecta/, result: false, itActual: '{}', itExpected: '/objecta/' },
  { actual: Error, expected: /objecta/, result: false, itActual: 'Error', itExpected: '/objecta/' },
  { actual: TypeError, expected: /objecta/, result: false, itActual: 'TypeError', itExpected: '/objecta/' },
  { actual: new Error('error'), expected: /objecta/, result: false, itActual: 'new Error("error")', itExpected: '/objecta/' },
  { actual: new TypeError('error'), expected: /objecta/, result: false, itActual: 'new TypeError("error")', itExpected: '/objecta/' },
  { actual: undefined, expected: /objecta/, result: false, itActual: 'undefined', itExpected: '/objecta/' },
  { actual: null, expected: /objecta/, result: false, itActual: 'null', itExpected: '/objecta/' },
  { actual: Infinity, expected: /objecta/, result: false, itActual: 'Infinity', itExpected: '/objecta/' },
  { actual: NaN, expected: /objecta/, result: false, itActual: 'NaN', itExpected: '/objecta/' },
  { actual: JSON, expected: /objecta/, result: false, itActual: 'JSON', itExpected: '/objecta/' },
  { actual: Promise, expected: /objecta/, result: false, itActual: 'Promise', itExpected: '/objecta/' },
  { actual: new Promise(() => { }), expected: /objecta/, result: false, itActual: 'new Promise(()=>{})', itExpected: '/objecta/' },
  { actual: {}.name, expected: /objecta/, result: false, itActual: '{}.name', itExpected: '/objecta/' },
  { actual: RangeError, expected: /objecta/, result: false, itActual: 'RangeError', itExpected: '/objecta/' },
  { actual: ReferenceError, expected: /objecta/, result: false, itActual: 'ReferenceError', itExpected: '/objecta/' },
  { actual: new RangeError('error'), expected: /objecta/, result: false, itActual: 'new RangeError("error")', itExpected: '/objecta/' },
  { actual: new ReferenceError('error'), expected: /objecta/, result: false, itActual: 'new ReferenceError("error")', itExpected: '/objecta/' },
  { actual: Name, expected: /objecta/, result: false, itActual: 'Name', itExpected: '/objecta/' },
  { actual: new Name(), expected: /objecta/, result: false, itActual: 'new Name()', itExpected: '/objecta/' },
  { actual: new instance(), expected: /objecta/, result: false, itActual: 'new instance()', itExpected: '/objecta/' },
  { actual: new truthy(), expected: /objecta/, result: false, itActual: 'new truthy()', itExpected: '/objecta/' },
  { actual: new falsy(), expected: /objecta/, result: false, itActual: 'new falsy()', itExpected: '/objecta/' },
  { actual: new any(), expected: /objecta/, result: false, itActual: 'new any()', itExpected: '/objecta/' },
  { actual: new objectable(), expected: /objecta/, result: true, itActual: 'new objectable()', itExpected: '/objecta/' },

  { actual: Date, expected: /ObJeCtA/, result: false, itActual: 'Date', itExpected: '/ObJeCtA/' },
  { actual: new Date(), expected: /ObJeCtA/, result: false, itActual: 'new Date()', itExpected: '/ObJeCtA/' },
  { actual: Function, expected: /ObJeCtA/, result: false, itActual: 'Function', itExpected: '/ObJeCtA/' },
  { actual: function () { }, expected: /ObJeCtA/, result: false, itActual: 'function(){}', itExpected: '/ObJeCtA/' },
  { actual: new Function('return "hello"'), expected: /ObJeCtA/, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/ObJeCtA/' },
  { actual: (function () { return arguments; })(), expected: /ObJeCtA/, result: false, itActual: '(function(){return arguments;})()', itExpected: '/ObJeCtA/' },
  { actual: () => { }, expected: /ObJeCtA/, result: false, itActual: '()=>{}', itExpected: '/ObJeCtA/' },
  { actual: String, expected: /ObJeCtA/, result: false, itActual: 'String', itExpected: '/ObJeCtA/' },
  { actual: new String('Hello'), expected: /ObJeCtA/, result: false, itActual: 'new String("Hello")', itExpected: '/ObJeCtA/' },
  { actual: new String(''), expected: /ObJeCtA/, result: false, itActual: 'new String("")', itExpected: '/ObJeCtA/' },
  { actual: 'Hello', expected: /ObJeCtA/, result: false, itActual: '"Hello"', itExpected: '/ObJeCtA/' },
  { actual: `Hello`, expected: /ObJeCtA/, result: false, itActual: '`Hello`', itExpected: '/ObJeCtA/' },
  { actual: '', expected: /ObJeCtA/, result: false, itActual: '""', itExpected: '/ObJeCtA/' },
  { actual: Number, expected: /ObJeCtA/, result: false, itActual: 'Number', itExpected: '/ObJeCtA/' },
  { actual: new Number(10), expected: /ObJeCtA/, result: false, itActual: 'new Number(10)', itExpected: '/ObJeCtA/' },
  { actual: new Number(0), expected: /ObJeCtA/, result: false, itActual: 'new Number(0)', itExpected: '/ObJeCtA/' },
  { actual: 10, expected: /ObJeCtA/, result: false, itActual: '10', itExpected: '/ObJeCtA/' },
  { actual: 0, expected: /ObJeCtA/, result: false, itActual: '0', itExpected: '/ObJeCtA/' },
  { actual: Boolean, expected: /ObJeCtA/, result: false, itActual: 'Boolean', itExpected: '/ObJeCtA/' },
  { actual: new Boolean(0), expected: /ObJeCtA/, result: false, itActual: 'new Boolean(0)', itExpected: '/ObJeCtA/' },
  { actual: false, expected: /ObJeCtA/, result: false, itActual: 'false', itExpected: '/ObJeCtA/' },
  { actual: true, expected: /ObJeCtA/, result: false, itActual: 'true', itExpected: '/ObJeCtA/' },
  { actual: RegExp, expected: /ObJeCtA/, result: false, itActual: 'RegExp', itExpected: '/ObJeCtA/' },
  { actual: new RegExp('Hello', 'gim'), expected: /ObJeCtA/, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/ObJeCtA/' },
  { actual: /hello/, expected: /ObJeCtA/, result: false, itActual: '/hello/', itExpected: '/ObJeCtA/' },
  { actual: isNaN, expected: /ObJeCtA/, result: false, itActual: 'isNaN', itExpected: '/ObJeCtA/' },
  { actual: isNaN('hello'), expected: /ObJeCtA/, result: false, itActual: 'isNaN("hello")', itExpected: '/ObJeCtA/' },
  { actual: isFinite, expected: /ObJeCtA/, result: false, itActual: 'isFinite', itExpected: '/ObJeCtA/' },
  { actual: isFinite(10), expected: /ObJeCtA/, result: false, itActual: 'isFinite(10)', itExpected: '/ObJeCtA/' },
  { actual: Number.NEGATIVE_INFINITY, expected: /ObJeCtA/, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/ObJeCtA/' },
  { actual: Object, expected: /ObJeCtA/, result: false, itActual: 'Object', itExpected: '/ObJeCtA/' },
  { actual: {}, expected: /ObJeCtA/, result: false, itActual: '{}', itExpected: '/ObJeCtA/' },
  { actual: Error, expected: /ObJeCtA/, result: false, itActual: 'Error', itExpected: '/ObJeCtA/' },
  { actual: TypeError, expected: /ObJeCtA/, result: false, itActual: 'TypeError', itExpected: '/ObJeCtA/' },
  { actual: new Error('error'), expected: /ObJeCtA/, result: false, itActual: 'new Error("error")', itExpected: '/ObJeCtA/' },
  { actual: new TypeError('error'), expected: /ObJeCtA/, result: false, itActual: 'new TypeError("error")', itExpected: '/ObJeCtA/' },
  { actual: undefined, expected: /ObJeCtA/, result: false, itActual: 'undefined', itExpected: '/ObJeCtA/' },
  { actual: null, expected: /ObJeCtA/, result: false, itActual: 'null', itExpected: '/ObJeCtA/' },
  { actual: Infinity, expected: /ObJeCtA/, result: false, itActual: 'Infinity', itExpected: '/ObJeCtA/' },
  { actual: NaN, expected: /ObJeCtA/, result: false, itActual: 'NaN', itExpected: '/ObJeCtA/' },
  { actual: JSON, expected: /ObJeCtA/, result: false, itActual: 'JSON', itExpected: '/ObJeCtA/' },
  { actual: Promise, expected: /ObJeCtA/, result: false, itActual: 'Promise', itExpected: '/ObJeCtA/' },
  { actual: new Promise(() => { }), expected: /ObJeCtA/, result: false, itActual: 'new Promise(()=>{})', itExpected: '/ObJeCtA/' },
  { actual: {}.name, expected: /ObJeCtA/, result: false, itActual: '{}.name', itExpected: '/ObJeCtA/' },
  { actual: RangeError, expected: /ObJeCtA/, result: false, itActual: 'RangeError', itExpected: '/ObJeCtA/' },
  { actual: ReferenceError, expected: /ObJeCtA/, result: false, itActual: 'ReferenceError', itExpected: '/ObJeCtA/' },
  { actual: new RangeError('error'), expected: /ObJeCtA/, result: false, itActual: 'new RangeError("error")', itExpected: '/ObJeCtA/' },
  { actual: new ReferenceError('error'), expected: /ObJeCtA/, result: false, itActual: 'new ReferenceError("error")', itExpected: '/ObJeCtA/' },
  { actual: Name, expected: /ObJeCtA/, result: false, itActual: 'Name', itExpected: '/ObJeCtA/' },
  { actual: new Name(), expected: /ObJeCtA/, result: false, itActual: 'new Name()', itExpected: '/ObJeCtA/' },
  { actual: new instance(), expected: /ObJeCtA/, result: false, itActual: 'new instance()', itExpected: '/ObJeCtA/' },
  { actual: new truthy(), expected: /ObJeCtA/, result: false, itActual: 'new truthy()', itExpected: '/ObJeCtA/' },
  { actual: new falsy(), expected: /ObJeCtA/, result: false, itActual: 'new falsy()', itExpected: '/ObJeCtA/' },
  { actual: new any(), expected: /ObJeCtA/, result: false, itActual: 'new any()', itExpected: '/ObJeCtA/' },
  { actual: new objectable(), expected: /ObJeCtA/, result: false, itActual: 'new objectable()', itExpected: '/ObJeCtA/' },

  { actual: Date, expected: /ObJeCtA/i, result: false, itActual: 'Date', itExpected: '/ObJeCtA/i' },
  { actual: new Date(), expected: /ObJeCtA/i, result: false, itActual: 'new Date()', itExpected: '/ObJeCtA/i' },
  { actual: Function, expected: /ObJeCtA/i, result: false, itActual: 'Function', itExpected: '/ObJeCtA/i' },
  { actual: function () { }, expected: /ObJeCtA/i, result: false, itActual: 'function(){}', itExpected: '/ObJeCtA/i' },
  { actual: new Function('return "hello"'), expected: /ObJeCtA/i, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/ObJeCtA/i' },
  { actual: (function () { return arguments; })(), expected: /ObJeCtA/i, result: false, itActual: '(function(){return arguments;})()', itExpected: '/ObJeCtA/i' },
  { actual: () => { }, expected: /ObJeCtA/i, result: false, itActual: '()=>{}', itExpected: '/ObJeCtA/i' },
  { actual: String, expected: /ObJeCtA/i, result: false, itActual: 'String', itExpected: '/ObJeCtA/i' },
  { actual: new String('Hello'), expected: /ObJeCtA/i, result: false, itActual: 'new String("Hello")', itExpected: '/ObJeCtA/i' },
  { actual: new String(''), expected: /ObJeCtA/i, result: false, itActual: 'new String("")', itExpected: '/ObJeCtA/i' },
  { actual: 'Hello', expected: /ObJeCtA/i, result: false, itActual: '"Hello"', itExpected: '/ObJeCtA/i' },
  { actual: `Hello`, expected: /ObJeCtA/i, result: false, itActual: '`Hello`', itExpected: '/ObJeCtA/i' },
  { actual: '', expected: /ObJeCtA/i, result: false, itActual: '""', itExpected: '/ObJeCtA/i' },
  { actual: Number, expected: /ObJeCtA/i, result: false, itActual: 'Number', itExpected: '/ObJeCtA/i' },
  { actual: new Number(10), expected: /ObJeCtA/i, result: false, itActual: 'new Number(10)', itExpected: '/ObJeCtA/i' },
  { actual: new Number(0), expected: /ObJeCtA/i, result: false, itActual: 'new Number(0)', itExpected: '/ObJeCtA/i' },
  { actual: 10, expected: /ObJeCtA/i, result: false, itActual: '10', itExpected: '/ObJeCtA/i' },
  { actual: 0, expected: /ObJeCtA/i, result: false, itActual: '0', itExpected: '/ObJeCtA/i' },
  { actual: Boolean, expected: /ObJeCtA/i, result: false, itActual: 'Boolean', itExpected: '/ObJeCtA/i' },
  { actual: new Boolean(0), expected: /ObJeCtA/i, result: false, itActual: 'new Boolean(0)', itExpected: '/ObJeCtA/i' },
  { actual: false, expected: /ObJeCtA/i, result: false, itActual: 'false', itExpected: '/ObJeCtA/i' },
  { actual: true, expected: /ObJeCtA/i, result: false, itActual: 'true', itExpected: '/ObJeCtA/i' },
  { actual: RegExp, expected: /ObJeCtA/i, result: false, itActual: 'RegExp', itExpected: '/ObJeCtA/i' },
  { actual: new RegExp('Hello', 'gim'), expected: /ObJeCtA/i, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/ObJeCtA/i' },
  { actual: /hello/, expected: /ObJeCtA/i, result: false, itActual: '/hello/', itExpected: '/ObJeCtA/i' },
  { actual: isNaN, expected: /ObJeCtA/i, result: false, itActual: 'isNaN', itExpected: '/ObJeCtA/i' },
  { actual: isNaN('hello'), expected: /ObJeCtA/i, result: false, itActual: 'isNaN("hello")', itExpected: '/ObJeCtA/i' },
  { actual: isFinite, expected: /ObJeCtA/i, result: false, itActual: 'isFinite', itExpected: '/ObJeCtA/i' },
  { actual: isFinite(10), expected: /ObJeCtA/i, result: false, itActual: 'isFinite(10)', itExpected: '/ObJeCtA/i' },
  { actual: Number.NEGATIVE_INFINITY, expected: /ObJeCtA/i, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/ObJeCtA/i' },
  { actual: Object, expected: /ObJeCtA/i, result: false, itActual: 'Object', itExpected: '/ObJeCtA/i' },
  { actual: {}, expected: /ObJeCtA/i, result: false, itActual: '{}', itExpected: '/ObJeCtA/i' },
  { actual: Error, expected: /ObJeCtA/i, result: false, itActual: 'Error', itExpected: '/ObJeCtA/i' },
  { actual: TypeError, expected: /ObJeCtA/i, result: false, itActual: 'TypeError', itExpected: '/ObJeCtA/i' },
  { actual: new Error('error'), expected: /ObJeCtA/i, result: false, itActual: 'new Error("error")', itExpected: '/ObJeCtA/i' },
  { actual: new TypeError('error'), expected: /ObJeCtA/i, result: false, itActual: 'new TypeError("error")', itExpected: '/ObJeCtA/i' },
  { actual: undefined, expected: /ObJeCtA/i, result: false, itActual: 'undefined', itExpected: '/ObJeCtA/i' },
  { actual: null, expected: /ObJeCtA/i, result: false, itActual: 'null', itExpected: '/ObJeCtA/i' },
  { actual: Infinity, expected: /ObJeCtA/i, result: false, itActual: 'Infinity', itExpected: '/ObJeCtA/i' },
  { actual: NaN, expected: /ObJeCtA/i, result: false, itActual: 'NaN', itExpected: '/ObJeCtA/i' },
  { actual: JSON, expected: /ObJeCtA/i, result: false, itActual: 'JSON', itExpected: '/ObJeCtA/i' },
  { actual: Promise, expected: /ObJeCtA/i, result: false, itActual: 'Promise', itExpected: '/ObJeCtA/i' },
  { actual: new Promise(() => { }), expected: /ObJeCtA/i, result: false, itActual: 'new Promise(()=>{})', itExpected: '/ObJeCtA/i' },
  { actual: {}.name, expected: /ObJeCtA/i, result: false, itActual: '{}.name', itExpected: '/ObJeCtA/i' },
  { actual: RangeError, expected: /ObJeCtA/i, result: false, itActual: 'RangeError', itExpected: '/ObJeCtA/i' },
  { actual: ReferenceError, expected: /ObJeCtA/i, result: false, itActual: 'ReferenceError', itExpected: '/ObJeCtA/i' },
  { actual: new RangeError('error'), expected: /ObJeCtA/i, result: false, itActual: 'new RangeError("error")', itExpected: '/ObJeCtA/i' },
  { actual: new ReferenceError('error'), expected: /ObJeCtA/i, result: false, itActual: 'new ReferenceError("error")', itExpected: '/ObJeCtA/i' },
  { actual: Name, expected: /ObJeCtA/i, result: false, itActual: 'Name', itExpected: '/ObJeCtA/i' },
  { actual: new Name(), expected: /ObJeCtA/i, result: false, itActual: 'new Name()', itExpected: '/ObJeCtA/i' },
  { actual: new instance(), expected: /ObJeCtA/i, result: false, itActual: 'new instance()', itExpected: '/ObJeCtA/i' },
  { actual: new truthy(), expected: /ObJeCtA/i, result: false, itActual: 'new truthy()', itExpected: '/ObJeCtA/i' },
  { actual: new falsy(), expected: /ObJeCtA/i, result: false, itActual: 'new falsy()', itExpected: '/ObJeCtA/i' },
  { actual: new any(), expected: /ObJeCtA/i, result: false, itActual: 'new any()', itExpected: '/ObJeCtA/i' },
  { actual: new objectable(), expected: /ObJeCtA/i, result: true, itActual: 'new objectable()', itExpected: '/ObJeCtA/i' },

  { actual: Date, expected: /obj/, result: false, itActual: 'Date', itExpected: '/obj/' },
  { actual: new Date(), expected: /obj/, result: false, itActual: 'new Date()', itExpected: '/obj/' },
  { actual: Function, expected: /obj/, result: false, itActual: 'Function', itExpected: '/obj/' },
  { actual: function () { }, expected: /obj/, result: false, itActual: 'function(){}', itExpected: '/obj/' },
  { actual: new Function('return "hello"'), expected: /obj/, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/obj/' },
  { actual: (function () { return arguments; })(), expected: /obj/, result: false, itActual: '(function(){return arguments;})()', itExpected: '/obj/' },
  { actual: () => { }, expected: /obj/, result: false, itActual: '()=>{}', itExpected: '/obj/' },
  { actual: String, expected: /obj/, result: false, itActual: 'String', itExpected: '/obj/' },
  { actual: new String('Hello'), expected: /obj/, result: false, itActual: 'new String("Hello")', itExpected: '/obj/' },
  { actual: new String(''), expected: /obj/, result: false, itActual: 'new String("")', itExpected: '/obj/' },
  { actual: 'Hello', expected: /obj/, result: false, itActual: '"Hello"', itExpected: '/obj/' },
  { actual: `Hello`, expected: /obj/, result: false, itActual: '`Hello`', itExpected: '/obj/' },
  { actual: '', expected: /obj/, result: false, itActual: '""', itExpected: '/obj/' },
  { actual: Number, expected: /obj/, result: false, itActual: 'Number', itExpected: '/obj/' },
  { actual: new Number(10), expected: /obj/, result: false, itActual: 'new Number(10)', itExpected: '/obj/' },
  { actual: new Number(0), expected: /obj/, result: false, itActual: 'new Number(0)', itExpected: '/obj/' },
  { actual: 10, expected: /obj/, result: false, itActual: '10', itExpected: '/obj/' },
  { actual: 0, expected: /obj/, result: false, itActual: '0', itExpected: '/obj/' },
  { actual: Boolean, expected: /obj/, result: false, itActual: 'Boolean', itExpected: '/obj/' },
  { actual: new Boolean(0), expected: /obj/, result: false, itActual: 'new Boolean(0)', itExpected: '/obj/' },
  { actual: false, expected: /obj/, result: false, itActual: 'false', itExpected: '/obj/' },
  { actual: true, expected: /obj/, result: false, itActual: 'true', itExpected: '/obj/' },
  { actual: RegExp, expected: /obj/, result: false, itActual: 'RegExp', itExpected: '/obj/' },
  { actual: new RegExp('Hello', 'gim'), expected: /obj/, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/obj/' },
  { actual: /hello/, expected: /obj/, result: false, itActual: '/hello/', itExpected: '/obj/' },
  { actual: isNaN, expected: /obj/, result: false, itActual: 'isNaN', itExpected: '/obj/' },
  { actual: isNaN('hello'), expected: /obj/, result: false, itActual: 'isNaN("hello")', itExpected: '/obj/' },
  { actual: isFinite, expected: /obj/, result: false, itActual: 'isFinite', itExpected: '/obj/' },
  { actual: isFinite(10), expected: /obj/, result: false, itActual: 'isFinite(10)', itExpected: '/obj/' },
  { actual: Number.NEGATIVE_INFINITY, expected: /obj/, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/obj/' },
  { actual: Object, expected: /obj/, result: false, itActual: 'Object', itExpected: '/obj/' },
  { actual: {}, expected: /obj/, result: false, itActual: '{}', itExpected: '/obj/' },
  { actual: Error, expected: /obj/, result: false, itActual: 'Error', itExpected: '/obj/' },
  { actual: TypeError, expected: /obj/, result: false, itActual: 'TypeError', itExpected: '/obj/' },
  { actual: new Error('error'), expected: /obj/, result: false, itActual: 'new Error("error")', itExpected: '/obj/' },
  { actual: new TypeError('error'), expected: /obj/, result: false, itActual: 'new TypeError("error")', itExpected: '/obj/' },
  { actual: undefined, expected: /obj/, result: false, itActual: 'undefined', itExpected: '/obj/' },
  { actual: null, expected: /obj/, result: false, itActual: 'null', itExpected: '/obj/' },
  { actual: Infinity, expected: /obj/, result: false, itActual: 'Infinity', itExpected: '/obj/' },
  { actual: NaN, expected: /obj/, result: false, itActual: 'NaN', itExpected: '/obj/' },
  { actual: JSON, expected: /obj/, result: false, itActual: 'JSON', itExpected: '/obj/' },
  { actual: Promise, expected: /obj/, result: false, itActual: 'Promise', itExpected: '/obj/' },
  { actual: new Promise(() => { }), expected: /obj/, result: false, itActual: 'new Promise(()=>{})', itExpected: '/obj/' },
  { actual: {}.name, expected: /obj/, result: false, itActual: '{}.name', itExpected: '/obj/' },
  { actual: RangeError, expected: /obj/, result: false, itActual: 'RangeError', itExpected: '/obj/' },
  { actual: ReferenceError, expected: /obj/, result: false, itActual: 'ReferenceError', itExpected: '/obj/' },
  { actual: new RangeError('error'), expected: /obj/, result: false, itActual: 'new RangeError("error")', itExpected: '/obj/' },
  { actual: new ReferenceError('error'), expected: /obj/, result: false, itActual: 'new ReferenceError("error")', itExpected: '/obj/' },
  { actual: Name, expected: /obj/, result: false, itActual: 'Name', itExpected: '/obj/' },
  { actual: new Name(), expected: /obj/, result: false, itActual: 'new Name()', itExpected: '/obj/' },
  { actual: new instance(), expected: /obj/, result: false, itActual: 'new instance()', itExpected: '/obj/' },
  { actual: new truthy(), expected: /obj/, result: false, itActual: 'new truthy()', itExpected: '/obj/' },
  { actual: new falsy(), expected: /obj/, result: false, itActual: 'new falsy()', itExpected: '/obj/' },
  { actual: new any(), expected: /obj/, result: false, itActual: 'new any()', itExpected: '/obj/' },
  { actual: new objectable(), expected: /obj/, result: true, itActual: 'new objectable()', itExpected: '/obj/' },

  { actual: Date, expected: /ObJ/, result: false, itActual: 'Date', itExpected: '/ObJ/' },
  { actual: new Date(), expected: /ObJ/, result: false, itActual: 'new Date()', itExpected: '/ObJ/' },
  { actual: Function, expected: /ObJ/, result: false, itActual: 'Function', itExpected: '/ObJ/' },
  { actual: function () { }, expected: /ObJ/, result: false, itActual: 'function(){}', itExpected: '/ObJ/' },
  { actual: new Function('return "hello"'), expected: /ObJ/, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/ObJ/' },
  { actual: (function () { return arguments; })(), expected: /ObJ/, result: false, itActual: '(function(){return arguments;})()', itExpected: '/ObJ/' },
  { actual: () => { }, expected: /ObJ/, result: false, itActual: '()=>{}', itExpected: '/ObJ/' },
  { actual: String, expected: /ObJ/, result: false, itActual: 'String', itExpected: '/ObJ/' },
  { actual: new String('Hello'), expected: /ObJ/, result: false, itActual: 'new String("Hello")', itExpected: '/ObJ/' },
  { actual: new String(''), expected: /ObJ/, result: false, itActual: 'new String("")', itExpected: '/ObJ/' },
  { actual: 'Hello', expected: /ObJ/, result: false, itActual: '"Hello"', itExpected: '/ObJ/' },
  { actual: `Hello`, expected: /ObJ/, result: false, itActual: '`Hello`', itExpected: '/ObJ/' },
  { actual: '', expected: /ObJ/, result: false, itActual: '""', itExpected: '/ObJ/' },
  { actual: Number, expected: /ObJ/, result: false, itActual: 'Number', itExpected: '/ObJ/' },
  { actual: new Number(10), expected: /ObJ/, result: false, itActual: 'new Number(10)', itExpected: '/ObJ/' },
  { actual: new Number(0), expected: /ObJ/, result: false, itActual: 'new Number(0)', itExpected: '/ObJ/' },
  { actual: 10, expected: /ObJ/, result: false, itActual: '10', itExpected: '/ObJ/' },
  { actual: 0, expected: /ObJ/, result: false, itActual: '0', itExpected: '/ObJ/' },
  { actual: Boolean, expected: /ObJ/, result: false, itActual: 'Boolean', itExpected: '/ObJ/' },
  { actual: new Boolean(0), expected: /ObJ/, result: false, itActual: 'new Boolean(0)', itExpected: '/ObJ/' },
  { actual: false, expected: /ObJ/, result: false, itActual: 'false', itExpected: '/ObJ/' },
  { actual: true, expected: /ObJ/, result: false, itActual: 'true', itExpected: '/ObJ/' },
  { actual: RegExp, expected: /ObJ/, result: false, itActual: 'RegExp', itExpected: '/ObJ/' },
  { actual: new RegExp('Hello', 'gim'), expected: /ObJ/, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/ObJ/' },
  { actual: /hello/, expected: /ObJ/, result: false, itActual: '/hello/', itExpected: '/ObJ/' },
  { actual: isNaN, expected: /ObJ/, result: false, itActual: 'isNaN', itExpected: '/ObJ/' },
  { actual: isNaN('hello'), expected: /ObJ/, result: false, itActual: 'isNaN("hello")', itExpected: '/ObJ/' },
  { actual: isFinite, expected: /ObJ/, result: false, itActual: 'isFinite', itExpected: '/ObJ/' },
  { actual: isFinite(10), expected: /ObJ/, result: false, itActual: 'isFinite(10)', itExpected: '/ObJ/' },
  { actual: Number.NEGATIVE_INFINITY, expected: /ObJ/, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/ObJ/' },
  { actual: Object, expected: /ObJ/, result: false, itActual: 'Object', itExpected: '/ObJ/' },
  { actual: {}, expected: /ObJ/, result: false, itActual: '{}', itExpected: '/ObJ/' },
  { actual: Error, expected: /ObJ/, result: false, itActual: 'Error', itExpected: '/ObJ/' },
  { actual: TypeError, expected: /ObJ/, result: false, itActual: 'TypeError', itExpected: '/ObJ/' },
  { actual: new Error('error'), expected: /ObJ/, result: false, itActual: 'new Error("error")', itExpected: '/ObJ/' },
  { actual: new TypeError('error'), expected: /ObJ/, result: false, itActual: 'new TypeError("error")', itExpected: '/ObJ/' },
  { actual: undefined, expected: /ObJ/, result: false, itActual: 'undefined', itExpected: '/ObJ/' },
  { actual: null, expected: /ObJ/, result: false, itActual: 'null', itExpected: '/ObJ/' },
  { actual: Infinity, expected: /ObJ/, result: false, itActual: 'Infinity', itExpected: '/ObJ/' },
  { actual: NaN, expected: /ObJ/, result: false, itActual: 'NaN', itExpected: '/ObJ/' },
  { actual: JSON, expected: /ObJ/, result: false, itActual: 'JSON', itExpected: '/ObJ/' },
  { actual: Promise, expected: /ObJ/, result: false, itActual: 'Promise', itExpected: '/ObJ/' },
  { actual: new Promise(() => { }), expected: /ObJ/, result: false, itActual: 'new Promise(()=>{})', itExpected: '/ObJ/' },
  { actual: {}.name, expected: /ObJ/, result: false, itActual: '{}.name', itExpected: '/ObJ/' },
  { actual: RangeError, expected: /ObJ/, result: false, itActual: 'RangeError', itExpected: '/ObJ/' },
  { actual: ReferenceError, expected: /ObJ/, result: false, itActual: 'ReferenceError', itExpected: '/ObJ/' },
  { actual: new RangeError('error'), expected: /ObJ/, result: false, itActual: 'new RangeError("error")', itExpected: '/ObJ/' },
  { actual: new ReferenceError('error'), expected: /ObJ/, result: false, itActual: 'new ReferenceError("error")', itExpected: '/ObJ/' },
  { actual: Name, expected: /ObJ/, result: false, itActual: 'Name', itExpected: '/ObJ/' },
  { actual: new Name(), expected: /ObJ/, result: false, itActual: 'new Name()', itExpected: '/ObJ/' },
  { actual: new instance(), expected: /ObJ/, result: false, itActual: 'new instance()', itExpected: '/ObJ/' },
  { actual: new truthy(), expected: /ObJ/, result: false, itActual: 'new truthy()', itExpected: '/ObJ/' },
  { actual: new falsy(), expected: /ObJ/, result: false, itActual: 'new falsy()', itExpected: '/ObJ/' },
  { actual: new any(), expected: /ObJ/, result: false, itActual: 'new any()', itExpected: '/ObJ/' },
  { actual: new objectable(), expected: /ObJ/, result: false, itActual: 'new objectable()', itExpected: '/ObJ/' },

  { actual: Date, expected: /ObJ/i, result: false, itActual: 'Date', itExpected: '/ObJ/i' },
  { actual: new Date(), expected: /ObJ/i, result: false, itActual: 'new Date()', itExpected: '/ObJ/i' },
  { actual: Function, expected: /ObJ/i, result: false, itActual: 'Function', itExpected: '/ObJ/i' },
  { actual: function () { }, expected: /ObJ/i, result: false, itActual: 'function(){}', itExpected: '/ObJ/i' },
  { actual: new Function('return "hello"'), expected: /ObJ/i, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '/ObJ/i' },
  { actual: (function () { return arguments; })(), expected: /ObJ/i, result: true, itActual: '(function(){return arguments;})()', itExpected: '/ObJ/i' },
  { actual: () => { }, expected: /ObJ/i, result: false, itActual: '()=>{}', itExpected: '/ObJ/i' },
  { actual: String, expected: /ObJ/i, result: false, itActual: 'String', itExpected: '/ObJ/i' },
  { actual: new String('Hello'), expected: /ObJ/i, result: false, itActual: 'new String("Hello")', itExpected: '/ObJ/i' },
  { actual: new String(''), expected: /ObJ/i, result: false, itActual: 'new String("")', itExpected: '/ObJ/i' },
  { actual: 'Hello', expected: /ObJ/i, result: false, itActual: '"Hello"', itExpected: '/ObJ/i' },
  { actual: `Hello`, expected: /ObJ/i, result: false, itActual: '`Hello`', itExpected: '/ObJ/i' },
  { actual: '', expected: /ObJ/i, result: false, itActual: '""', itExpected: '/ObJ/i' },
  { actual: Number, expected: /ObJ/i, result: false, itActual: 'Number', itExpected: '/ObJ/i' },
  { actual: new Number(10), expected: /ObJ/i, result: false, itActual: 'new Number(10)', itExpected: '/ObJ/i' },
  { actual: new Number(0), expected: /ObJ/i, result: false, itActual: 'new Number(0)', itExpected: '/ObJ/i' },
  { actual: 10, expected: /ObJ/i, result: false, itActual: '10', itExpected: '/ObJ/i' },
  { actual: 0, expected: /ObJ/i, result: false, itActual: '0', itExpected: '/ObJ/i' },
  { actual: Boolean, expected: /ObJ/i, result: false, itActual: 'Boolean', itExpected: '/ObJ/i' },
  { actual: new Boolean(0), expected: /ObJ/i, result: false, itActual: 'new Boolean(0)', itExpected: '/ObJ/i' },
  { actual: false, expected: /ObJ/i, result: false, itActual: 'false', itExpected: '/ObJ/i' },
  { actual: true, expected: /ObJ/i, result: false, itActual: 'true', itExpected: '/ObJ/i' },
  { actual: RegExp, expected: /ObJ/i, result: false, itActual: 'RegExp', itExpected: '/ObJ/i' },
  { actual: new RegExp('Hello', 'gim'), expected: /ObJ/i, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '/ObJ/i' },
  { actual: /hello/, expected: /ObJ/i, result: false, itActual: '/hello/', itExpected: '/ObJ/i' },
  { actual: isNaN, expected: /ObJ/i, result: false, itActual: 'isNaN', itExpected: '/ObJ/i' },
  { actual: isNaN('hello'), expected: /ObJ/i, result: false, itActual: 'isNaN("hello")', itExpected: '/ObJ/i' },
  { actual: isFinite, expected: /ObJ/i, result: false, itActual: 'isFinite', itExpected: '/ObJ/i' },
  { actual: isFinite(10), expected: /ObJ/i, result: false, itActual: 'isFinite(10)', itExpected: '/ObJ/i' },
  { actual: Number.NEGATIVE_INFINITY, expected: /ObJ/i, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '/ObJ/i' },
  { actual: Object, expected: /ObJ/i, result: false, itActual: 'Object', itExpected: '/ObJ/i' },
  { actual: {}, expected: /ObJ/i, result: true, itActual: '{}', itExpected: '/ObJ/i' },
  { actual: Error, expected: /ObJ/i, result: false, itActual: 'Error', itExpected: '/ObJ/i' },
  { actual: TypeError, expected: /ObJ/i, result: false, itActual: 'TypeError', itExpected: '/ObJ/i' },
  { actual: new Error('error'), expected: /ObJ/i, result: false, itActual: 'new Error("error")', itExpected: '/ObJ/i' },
  { actual: new TypeError('error'), expected: /ObJ/i, result: false, itActual: 'new TypeError("error")', itExpected: '/ObJ/i' },
  { actual: undefined, expected: /ObJ/i, result: false, itActual: 'undefined', itExpected: '/ObJ/i' },
  { actual: null, expected: /ObJ/i, result: false, itActual: 'null', itExpected: '/ObJ/i' },
  { actual: Infinity, expected: /ObJ/i, result: false, itActual: 'Infinity', itExpected: '/ObJ/i' },
  { actual: NaN, expected: /ObJ/i, result: false, itActual: 'NaN', itExpected: '/ObJ/i' },
  { actual: JSON, expected: /ObJ/i, result: true, itActual: 'JSON', itExpected: '/ObJ/i' },
  { actual: Promise, expected: /ObJ/i, result: false, itActual: 'Promise', itExpected: '/ObJ/i' },
  { actual: new Promise(() => { }), expected: /ObJ/i, result: false, itActual: 'new Promise(()=>{})', itExpected: '/ObJ/i' },
  { actual: {}.name, expected: /ObJ/i, result: false, itActual: '{}.name', itExpected: '/ObJ/i' },
  { actual: RangeError, expected: /ObJ/i, result: false, itActual: 'RangeError', itExpected: '/ObJ/i' },
  { actual: ReferenceError, expected: /ObJ/i, result: false, itActual: 'ReferenceError', itExpected: '/ObJ/i' },
  { actual: new RangeError('error'), expected: /ObJ/i, result: false, itActual: 'new RangeError("error")', itExpected: '/ObJ/i' },
  { actual: new ReferenceError('error'), expected: /ObJ/i, result: false, itActual: 'new ReferenceError("error")', itExpected: '/ObJ/i' },
  { actual: Name, expected: /ObJ/i, result: false, itActual: 'Name', itExpected: '/ObJ/i' },
  { actual: new Name(), expected: /ObJ/i, result: false, itActual: 'new Name()', itExpected: '/ObJ/i' },
  { actual: new instance(), expected: /ObJ/i, result: false, itActual: 'new instance()', itExpected: '/ObJ/i' },
  { actual: new truthy(), expected: /ObJ/i, result: false, itActual: 'new truthy()', itExpected: '/ObJ/i' },
  { actual: new falsy(), expected: /ObJ/i, result: false, itActual: 'new falsy()', itExpected: '/ObJ/i' },
  { actual: new any(), expected: /ObJ/i, result: false, itActual: 'new any()', itExpected: '/ObJ/i' },
  { actual: new objectable(), expected: /ObJ/i, result: true, itActual: 'new objectable()', itExpected: '/ObJ/i' },

  { actual: Date, expected: Function, result: true, itActual: 'Date', itExpected: 'Function' },
  { actual: new Date(), expected: Date, result: true, itActual: 'new Date()', itExpected: 'Date' },
  { actual: Function, expected: Function, result: true, itActual: 'Function', itExpected: 'Function' },
  { actual: function () { }, expected: Function, result: true, itActual: 'function(){}', itExpected: 'Function' },
  { actual: new Function('return "hello"'), expected: Function, result: true, itActual: 'new Function(\'return "hello"\')', itExpected: 'Function' },
  { actual: (function () { return arguments; })(), expected: Object, result: true, itActual: '(function(){return arguments;})()', itExpected: 'Object' },
  { actual: () => { }, expected: Function, result: true, itActual: '()=>{}', itExpected: 'Function' },
  { actual: String, expected: Function, result: true, itActual: 'String', itExpected: 'Function' },
  { actual: new String('Hello'), expected: String, result: true, itActual: 'new String("Hello")', itExpected: 'String' },
  { actual: new String(''), expected: String, result: true, itActual: 'new String("")', itExpected: 'String' },
  { actual: 'Hello', expected: String, result: true, itActual: '"Hello"', itExpected: 'String' },
  { actual: `Hello`, expected: String, result: true, itActual: '`Hello`', itExpected: 'String' },
  { actual: '', expected: String, result: true, itActual: '""', itExpected: 'String' },
  { actual: Number, expected: Function, result: true, itActual: 'Number', itExpected: 'Function' },
  { actual: new Number(10), expected: Number, result: true, itActual: 'new Number(10)', itExpected: 'Number' },
  { actual: new Number(0), expected: Number, result: true, itActual: 'new Number(0)', itExpected: 'Number' },
  { actual: 10, expected: Number, result: true, itActual: '10', itExpected: 'Number' },
  { actual: 0, expected: Number, result: true, itActual: '0', itExpected: 'Number' },
  { actual: Boolean, expected: Function, result: true, itActual: 'Boolean', itExpected: 'Function' },
  { actual: new Boolean(0), expected: Boolean, result: true, itActual: 'new Boolean(0)', itExpected: 'Boolean' },
  { actual: false, expected: Boolean, result: true, itActual: 'false', itExpected: 'Boolean' },
  { actual: true, expected: Boolean, result: true, itActual: 'true', itExpected: 'Boolean' },
  { actual: RegExp, expected: Function, result: true, itActual: 'RegExp', itExpected: 'Function' },
  { actual: new RegExp('Hello', 'gim'), expected: RegExp, result: true, itActual: 'new RegExp("Hello","gim")', itExpected: 'RegExp' },
  { actual: /hello/, expected: RegExp, result: true, itActual: '/hello/', itExpected: 'RegExp' },
  { actual: isNaN, expected: Function, result: true, itActual: 'isNaN', itExpected: 'Function' },
  { actual: isNaN('hello'), expected: Boolean, result: true, itActual: 'isNaN("hello")', itExpected: 'Boolean' },
  { actual: isFinite, expected: Function, result: true, itActual: 'isFinite', itExpected: 'Function' },
  { actual: isFinite(10), expected: Boolean, result: true, itActual: 'isFinite(10)', itExpected: 'Boolean' },
  { actual: Number.NEGATIVE_INFINITY, expected: Number, result: true, itActual: 'Number.NEGATIVE_INFINITY', itExpected: 'Number' },
  { actual: Object, expected: Function, result: true, itActual: 'Object', itExpected: 'Function' },
  { actual: {}, expected: Object, result: true, itActual: '{}', itExpected: 'Object' },
  { actual: Error, expected: Function, result: true, itActual: 'Error', itExpected: 'Function' },
  { actual: TypeError, expected: Function, result: true, itActual: 'TypeError', itExpected: 'Function' },
  { actual: new Error('error'), expected: Error, result: true, itActual: 'new Error("error")', itExpected: 'Error' },
  { actual: new TypeError('error'), expected: Error, result: false, itActual: 'new TypeError("error")', itExpected: 'Error' },
  { actual: new TypeError('error'), expected: TypeError, result: true, itActual: 'new TypeError("error")', itExpected: 'TypeError' },
  { actual: undefined, expected: undefined, result: true, itActual: 'undefined', itExpected: 'undefined' },
  { actual: null, expected: null, result: true, itActual: 'null', itExpected: 'null' },
  { actual: Infinity, expected: Number, result: true, itActual: 'Infinity', itExpected: 'Number' },
  { actual: NaN, expected: Number, result: true, itActual: 'NaN', itExpected: 'Number' },
  { actual: JSON, expected: Object, result: true, itActual: 'JSON', itExpected: 'Object' },
  { actual: Promise, expected: Function, result: true, itActual: 'Promise', itExpected: 'Function' },
  { actual: new Promise(() => { }), expected: Promise, result: true, itActual: 'new Promise(()=>{})', itExpected: 'Promise' },
  { actual: {}.name, expected: undefined, result: true, itActual: '{}.name', itExpected: 'undefined' },
  { actual: RangeError, expected: Function, result: true, itActual: 'RangeError', itExpected: 'Function' },
  { actual: ReferenceError, expected: Function, result: true, itActual: 'ReferenceError', itExpected: 'Function' },
  { actual: new RangeError('error'), expected: Error, result: false, itActual: 'new RangeError("error")', itExpected: 'Error' },
  { actual: new RangeError('error'), expected: RangeError, result: true, itActual: 'new RangeError("error")', itExpected: 'RangeError' },
  { actual: new ReferenceError('error'), expected: Error, result: false, itActual: 'new ReferenceError("error")', itExpected: 'Error' },
  { actual: new ReferenceError('error'), expected: ReferenceError, result: true, itActual: 'new ReferenceError("error")', itExpected: 'ReferenceError' },
  { actual: Name, expected: Function, result: true, itActual: 'Name', itExpected: 'Function' },
  { actual: new Name(), expected: Name, result: true, itActual: 'new Name()', itExpected: 'Name' },
  { actual: new instance(), expected: instance, result: true, itActual: 'new instance()', itExpected: 'instance' },
  { actual: new truthy(), expected: truthy, result: true, itActual: 'new truthy()', itExpected: 'truthy' },
  { actual: new falsy(), expected: falsy, result: true, itActual: 'new falsy()', itExpected: 'falsy' },
  { actual: new any(), expected: any, result: true, itActual: 'new any()', itExpected: 'any' },
  { actual: new objectable(), expected: objectable, result: true, itActual: 'new objectable()', itExpected: 'expected' },

  { actual: Date, expected: Object, result: false, itActual: 'Date', itExpected: 'Object' },
  { actual: new Date(), expected: Object, result: false, itActual: 'new Date()', itExpected: 'Object' },
  { actual: Function, expected: Object, result: false, itActual: 'Function', itExpected: 'Object' },
  { actual: function () { }, expected: Object, result: false, itActual: 'function(){}', itExpected: 'Object' },
  { actual: new Function('return "hello"'), expected: Object, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: 'Object' },
  { actual: (function () { return arguments; })(), expected: Function, result: false, itActual: '(function(){return arguments;})()', itExpected: 'Function' },
  { actual: () => { }, expected: Object, result: false, itActual: '()=>{}', itExpected: 'Object' },
  { actual: String, expected: Object, result: false, itActual: 'String', itExpected: 'Object' },
  { actual: new String('Hello'), expected: Object, result: false, itActual: 'new String("Hello")', itExpected: 'Object' },
  { actual: new String(''), expected: Object, result: false, itActual: 'new String("")', itExpected: 'Object' },
  { actual: 'Hello', expected: Object, result: false, itActual: '"Hello"', itExpected: 'Object' },
  { actual: `Hello`, expected: Object, result: false, itActual: '`Hello`', itExpected: 'Object' },
  { actual: '', expected: Object, result: false, itActual: '""', itExpected: 'Object' },
  { actual: Number, expected: Object, result: false, itActual: 'Number', itExpected: 'Object' },
  { actual: new Number(10), expected: Object, result: false, itActual: 'new Number(10)', itExpected: 'Object' },
  { actual: new Number(0), expected: Object, result: false, itActual: 'new Number(0)', itExpected: 'Object' },
  { actual: 10, expected: Object, result: false, itActual: '10', itExpected: 'Object' },
  { actual: 0, expected: Object, result: false, itActual: '0', itExpected: 'Object' },
  { actual: Boolean, expected: Object, result: false, itActual: 'Boolean', itExpected: 'Object' },
  { actual: new Boolean(0), expected: Object, result: false, itActual: 'new Boolean(0)', itExpected: 'Object' },
  { actual: false, expected: Object, result: false, itActual: 'false', itExpected: 'Object' },
  { actual: true, expected: Object, result: false, itActual: 'true', itExpected: 'Object' },
  { actual: RegExp, expected: Object, result: false, itActual: 'RegExp', itExpected: 'Object' },
  { actual: new RegExp('Hello', 'gim'), expected: Object, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: 'Object' },
  { actual: /hello/, expected: Object, result: false, itActual: '/hello/', itExpected: 'Object' },
  { actual: isNaN, expected: Object, result: false, itActual: 'isNaN', itExpected: 'Object' },
  { actual: isNaN('hello'), expected: Object, result: false, itActual: 'isNaN("hello")', itExpected: 'Object' },
  { actual: isFinite, expected: Object, result: false, itActual: 'isFinite', itExpected: 'Object' },
  { actual: isFinite(10), expected: Object, result: false, itActual: 'isFinite(10)', itExpected: 'Object' },
  { actual: Number.NEGATIVE_INFINITY, expected: Object, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: 'Object' },
  { actual: Object, expected: Number, result: false, itActual: 'Object', itExpected: 'Number' },
  { actual: {}, expected: Function, result: false, itActual: '{}', itExpected: 'Function' },
  { actual: Error, expected: Object, result: false, itActual: 'Error', itExpected: 'Object' },
  { actual: TypeError, expected: Object, result: false, itActual: 'TypeError', itExpected: 'Object' },
  { actual: new Error('error'), expected: Object, result: false, itActual: 'new Error("error")', itExpected: 'Object' },
  { actual: new TypeError('error'), expected: Object, result: false, itActual: 'new TypeError("error")', itExpected: 'Object' },
  { actual: undefined, expected: Object, result: false, itActual: 'undefined', itExpected: 'Object' },
  { actual: null, expected: Object, result: false, itActual: 'null', itExpected: 'Object' },
  { actual: Infinity, expected: Object, result: false, itActual: 'Infinity', itExpected: 'Object' },
  { actual: NaN, expected: Object, result: false, itActual: 'NaN', itExpected: 'Object' },
  { actual: JSON, expected: Function, result: false, itActual: 'JSON', itExpected: 'Function' },
  { actual: Promise, expected: Object, result: false, itActual: 'Promise', itExpected: 'Object' },
  { actual: new Promise(() => { }), expected: Object, result: false, itActual: 'new Promise(()=>{})', itExpected: 'Object' },
  { actual: {}.name, expected: Object, result: false, itActual: '{}.name', itExpected: 'Object' },
  { actual: RangeError, expected: Object, result: false, itActual: 'RangeError', itExpected: 'Object' },
  { actual: ReferenceError, expected: Object, result: false, itActual: 'ReferenceError', itExpected: 'Object' },
  { actual: new RangeError('error'), expected: Object, result: false, itActual: 'new RangeError("error")', itExpected: 'Object' },
  { actual: new ReferenceError('error'), expected: Object, result: false, itActual: 'new ReferenceError("error")', itExpected: 'Object' },
  { actual: Name, expected: Object, result: false, itActual: 'Name', itExpected: 'Object' },
  { actual: new Name(), expected: Object, result: false, itActual: 'new Name()', itExpected: 'Object' },
  { actual: new instance(), expected: Object, result: false, itActual: 'new instance()', itExpected: 'Object' },
  { actual: new truthy(), expected: Object, result: false, itActual: 'new truthy()', itExpected: 'Object' },
  { actual: new falsy(), expected: Object, result: false, itActual: 'new falsy()', itExpected: 'Object' },
  { actual: new any(), expected: Object, result: false, itActual: 'new any()', itExpected: 'Object' },
  { actual: new objectable(), expected: Object, result: false, itActual: 'new objectable()', itExpected: 'Object' },

  { actual: Date, expected: Date, result: false, itActual: 'Date', itExpected: 'Date' },
  { actual: new Date(), expected: Function, result: false, itActual: 'new Date()', itExpected: 'Function' },
  { actual: Function, expected: Array, result: false, itActual: 'Function', itExpected: 'Array' },
  { actual: function () { }, expected: Array, result: false, itActual: 'function(){}', itExpected: 'Array' },
  { actual: new Function('return "hello"'), expected: Array, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: 'Array' },
  { actual: (function () { return arguments; })(), expected: Array, result: false, itActual: '(function(){return arguments;})()', itExpected: 'Array' },
  { actual: () => { }, expected: Array, result: false, itActual: '()=>{}', itExpected: 'Array' },
  { actual: String, expected: String, result: false, itActual: 'String', itExpected: 'String' },
  { actual: new String('Hello'), expected: Function, result: false, itActual: 'new String("Hello")', itExpected: 'Function' },
  { actual: new String(''), expected: Function, result: false, itActual: 'new String("")', itExpected: 'Function' },
  { actual: 'Hello', expected: Function, result: false, itActual: '"Hello"', itExpected: 'Function' },
  { actual: `Hello`, expected: Function, result: false, itActual: '`Hello`', itExpected: 'Function' },
  { actual: '', expected: Function, result: false, itActual: '""', itExpected: 'Function' },
  { actual: Number, expected: Number, result: false, itActual: 'Number', itExpected: 'Number' },
  { actual: new Number(10), expected: Function, result: false, itActual: 'new Number(10)', itExpected: 'Function' },
  { actual: new Number(0), expected: Function, result: false, itActual: 'new Number(0)', itExpected: 'Function' },
  { actual: 10, expected: Function, result: false, itActual: '10', itExpected: 'Function' },
  { actual: 0, expected: Function, result: false, itActual: '0', itExpected: 'Function' },
  { actual: Boolean, expected: Boolean, result: false, itActual: 'Boolean', itExpected: 'Boolean' },
  { actual: new Boolean(0), expected: Function, result: false, itActual: 'new Boolean(0)', itExpected: 'Function' },
  { actual: false, expected: Function, result: false, itActual: 'false', itExpected: 'Function' },
  { actual: true, expected: Function, result: false, itActual: 'true', itExpected: 'Function' },
  { actual: RegExp, expected: RegExp, result: false, itActual: 'RegExp', itExpected: 'RegExp' },
  { actual: new RegExp('Hello', 'gim'), expected: Function, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: 'Function' },
  { actual: /hello/, expected: Function, result: false, itActual: '/hello/', itExpected: 'Function' },
  { actual: isNaN, expected: Array, result: false, itActual: 'isNaN', itExpected: 'Array' },
  { actual: isNaN('hello'), expected: Number, result: false, itActual: 'isNaN("hello")', itExpected: 'Number' },
  { actual: isFinite, expected: Number, result: false, itActual: 'isFinite', itExpected: 'Number' },
  { actual: isFinite(10), expected: Number, result: false, itActual: 'isFinite(10)', itExpected: 'Number' },
  { actual: Number.NEGATIVE_INFINITY, expected: Function, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: 'Function' },
  { actual: Object, expected: Object, result: false, itActual: 'Object', itExpected: 'Object' },
  { actual: {}, expected: Number, result: false, itActual: '{}', itExpected: 'Number' },
  { actual: Error, expected: Error, result: false, itActual: 'Error', itExpected: 'Error' },
  { actual: TypeError, expected: Error, result: false, itActual: 'TypeError', itExpected: 'Error' },
  { actual: new Error('error'), expected: Function, result: false, itActual: 'new Error("error")', itExpected: 'Function' },
  { actual: new TypeError('error'), expected: Function, result: false, itActual: 'new TypeError("error")', itExpected: 'Function' },
  { actual: undefined, expected: null, result: false, itActual: 'undefined', itExpected: 'null' },
  { actual: null, expected: undefined, result: false, itActual: 'null', itExpected: 'undefined' },
  { actual: Infinity, expected: Function, result: false, itActual: 'Infinity', itExpected: 'Function' },
  { actual: NaN, expected: Function, result: false, itActual: 'NaN', itExpected: 'Function' },
  { actual: JSON, expected: Number, result: false, itActual: 'JSON', itExpected: 'Number' },
  { actual: Promise, expected: Promise, result: false, itActual: 'Promise', itExpected: 'Promise' },
  { actual: new Promise(() => { }), expected: Function, result: false, itActual: 'new Promise(()=>{})', itExpected: 'Function' },
  { actual: {}.name, expected: null, result: false, itActual: '{}.name', itExpected: 'null' },
  { actual: RangeError, expected: RangeError, result: false, itActual: 'RangeError', itExpected: 'RangeError' },
  { actual: ReferenceError, expected: ReferenceError, result: false, itActual: 'ReferenceError', itExpected: 'ReferenceError' },
  { actual: new RangeError('error'), expected: Function, result: false, itActual: 'new RangeError("error")', itExpected: 'Function' },
  { actual: new ReferenceError('error'), expected: Function, result: false, itActual: 'new ReferenceError("error")', itExpected: 'Function' },
  { actual: Name, expected: Name, result: false, itActual: 'Name', itExpected: 'Name' },
  { actual: new Name(), expected: Function, result: false, itActual: 'new Name()', itExpected: 'Function' },
  { actual: new instance(), expected: Function, result: false, itActual: 'new instance()', itExpected: 'Function' },
  { actual: new truthy(), expected: Function, result: false, itActual: 'new truthy()', itExpected: 'Function' },
  { actual: new falsy(), expected: Function, result: false, itActual: 'new falsy()', itExpected: 'Function' },
  { actual: new any(), expected: Function, result: false, itActual: 'new any()', itExpected: 'Function' },
  { actual: new objectable(), expected: Function, result: false, itActual: 'new objectable()', itExpected: 'Function' },

  { actual: Date, expected: null, result: false, itActual: 'Date', itExpected: 'null' },
  { actual: new Date(), expected: null, result: false, itActual: 'new Date()', itExpected: 'null' },
  { actual: Function, expected: null, result: false, itActual: 'Function', itExpected: 'null' },
  { actual: function () { }, expected: null, result: false, itActual: 'function(){}', itExpected: 'null' },
  { actual: new Function('return "hello"'), expected: null, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: 'null' },
  { actual: (function () { return arguments; })(), expected: null, result: false, itActual: '(function(){return arguments;})()', itExpected: 'null' },
  { actual: () => { }, expected: null, result: false, itActual: '()=>{}', itExpected: 'null' },
  { actual: String, expected: null, result: false, itActual: 'String', itExpected: 'null' },
  { actual: new String('Hello'), expected: null, result: false, itActual: 'new String("Hello")', itExpected: 'null' },
  { actual: new String(''), expected: null, result: false, itActual: 'new String("")', itExpected: 'null' },
  { actual: 'Hello', expected: null, result: false, itActual: '"Hello"', itExpected: 'null' },
  { actual: `Hello`, expected: null, result: false, itActual: '`Hello`', itExpected: 'null' },
  { actual: '', expected: null, result: false, itActual: '""', itExpected: 'null' },
  { actual: Number, expected: null, result: false, itActual: 'Number', itExpected: 'null' },
  { actual: new Number(10), expected: null, result: false, itActual: 'new Number(10)', itExpected: 'null' },
  { actual: new Number(0), expected: null, result: false, itActual: 'new Number(0)', itExpected: 'null' },
  { actual: 10, expected: null, result: false, itActual: '10', itExpected: 'null' },
  { actual: 0, expected: null, result: false, itActual: '0', itExpected: 'null' },
  { actual: Boolean, expected: null, result: false, itActual: 'Boolean', itExpected: 'null' },
  { actual: new Boolean(0), expected: null, result: false, itActual: 'new Boolean(0)', itExpected: 'null' },
  { actual: false, expected: null, result: false, itActual: 'false', itExpected: 'null' },
  { actual: true, expected: null, result: false, itActual: 'true', itExpected: 'null' },
  { actual: RegExp, expected: null, result: false, itActual: 'RegExp', itExpected: 'null' },
  { actual: new RegExp('Hello', 'gim'), expected: null, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: 'null' },
  { actual: /hello/, expected: null, result: false, itActual: '/hello/', itExpected: 'null' },
  { actual: isNaN, expected: null, result: false, itActual: 'isNaN', itExpected: 'null' },
  { actual: isNaN('hello'), expected: null, result: false, itActual: 'isNaN("hello")', itExpected: 'null' },
  { actual: isFinite, expected: null, result: false, itActual: 'isFinite', itExpected: 'null' },
  { actual: isFinite(10), expected: null, result: false, itActual: 'isFinite(10)', itExpected: 'null' },
  { actual: Number.NEGATIVE_INFINITY, expected: null, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: 'null' },
  { actual: Object, expected: null, result: false, itActual: 'Object', itExpected: 'null' },
  { actual: {}, expected: null, result: false, itActual: '{}', itExpected: 'null' },
  { actual: Error, expected: null, result: false, itActual: 'Error', itExpected: 'null' },
  { actual: TypeError, expected: null, result: false, itActual: 'TypeError', itExpected: 'null' },
  { actual: new Error('error'), expected: null, result: false, itActual: 'new Error("error")', itExpected: 'null' },
  { actual: new TypeError('error'), expected: null, result: false, itActual: 'new TypeError("error")', itExpected: 'null' },
  { actual: Infinity, expected: null, result: false, itActual: 'Infinity', itExpected: 'null' },
  { actual: NaN, expected: null, result: false, itActual: 'NaN', itExpected: 'null' },
  { actual: JSON, expected: null, result: false, itActual: 'JSON', itExpected: 'null' },
  { actual: Promise, expected: null, result: false, itActual: 'Promise', itExpected: 'null' },
  { actual: new Promise(() => { }), expected: null, result: false, itActual: 'new Promise(()=>{})', itExpected: 'null' },
  { actual: RangeError, expected: null, result: false, itActual: 'RangeError', itExpected: 'null' },
  { actual: ReferenceError, expected: null, result: false, itActual: 'ReferenceError', itExpected: 'null' },
  { actual: new RangeError('error'), expected: null, result: false, itActual: 'new RangeError("error")', itExpected: 'null' },
  { actual: new ReferenceError('error'), expected: null, result: false, itActual: 'new ReferenceError("error")', itExpected: 'null' },
  { actual: Name, expected: null, result: false, itActual: 'Name', itExpected: 'null' },
  { actual: new Name(), expected: null, result: false, itActual: 'new Name()', itExpected: 'null' },
  { actual: new instance(), expected: null, result: false, itActual: 'new instance()', itExpected: 'null' },
  { actual: new truthy(), expected: null, result: false, itActual: 'new truthy()', itExpected: 'null' },
  { actual: new falsy(), expected: null, result: false, itActual: 'new falsy()', itExpected: 'null' },
  { actual: new any(), expected: null, result: false, itActual: 'new any()', itExpected: 'null' },
  { actual: new objectable(), expected: null, result: false, itActual: 'new objectable()', itExpected: 'null' },

  { actual: Date, expected: undefined, result: false, itActual: 'Date', itExpected: 'undefined' },
  { actual: new Date(), expected: undefined, result: false, itActual: 'new Date()', itExpected: 'undefined' },
  { actual: Function, expected: undefined, result: false, itActual: 'Function', itExpected: 'undefined' },
  { actual: function () { }, expected: undefined, result: false, itActual: 'function(){}', itExpected: 'undefined' },
  { actual: new Function('return "hello"'), expected: undefined, result: false, itActual: 'new Function(\'return "hello"\')', itExpected: 'undefined' },
  { actual: (function () { return arguments; })(), expected: undefined, result: false, itActual: '(function(){return arguments;})()', itExpected: 'undefined' },
  { actual: () => { }, expected: undefined, result: false, itActual: '()=>{}', itExpected: 'undefined' },
  { actual: String, expected: undefined, result: false, itActual: 'String', itExpected: 'undefined' },
  { actual: new String('Hello'), expected: undefined, result: false, itActual: 'new String("Hello")', itExpected: 'undefined' },
  { actual: new String(''), expected: undefined, result: false, itActual: 'new String("")', itExpected: 'undefined' },
  { actual: 'Hello', expected: undefined, result: false, itActual: '"Hello"', itExpected: 'undefined' },
  { actual: `Hello`, expected: undefined, result: false, itActual: '`Hello`', itExpected: 'undefined' },
  { actual: '', expected: undefined, result: false, itActual: '""', itExpected: 'undefined' },
  { actual: Number, expected: undefined, result: false, itActual: 'Number', itExpected: 'undefined' },
  { actual: new Number(10), expected: undefined, result: false, itActual: 'new Number(10)', itExpected: 'undefined' },
  { actual: new Number(0), expected: undefined, result: false, itActual: 'new Number(0)', itExpected: 'undefined' },
  { actual: 10, expected: undefined, result: false, itActual: '10', itExpected: 'undefined' },
  { actual: 0, expected: undefined, result: false, itActual: '0', itExpected: 'undefined' },
  { actual: Boolean, expected: undefined, result: false, itActual: 'Boolean', itExpected: 'undefined' },
  { actual: new Boolean(0), expected: undefined, result: false, itActual: 'new Boolean(0)', itExpected: 'undefined' },
  { actual: false, expected: undefined, result: false, itActual: 'false', itExpected: 'undefined' },
  { actual: true, expected: undefined, result: false, itActual: 'true', itExpected: 'undefined' },
  { actual: RegExp, expected: undefined, result: false, itActual: 'RegExp', itExpected: 'undefined' },
  { actual: new RegExp('Hello', 'gim'), expected: undefined, result: false, itActual: 'new RegExp("Hello","gim")', itExpected: 'undefined' },
  { actual: /hello/, expected: undefined, result: false, itActual: '/hello/', itExpected: 'undefined' },
  { actual: isNaN, expected: undefined, result: false, itActual: 'isNaN', itExpected: 'undefined' },
  { actual: isNaN('hello'), expected: undefined, result: false, itActual: 'isNaN("hello")', itExpected: 'undefined' },
  { actual: isFinite, expected: undefined, result: false, itActual: 'isFinite', itExpected: 'undefined' },
  { actual: isFinite(10), expected: undefined, result: false, itActual: 'isFinite(10)', itExpected: 'undefined' },
  { actual: Number.NEGATIVE_INFINITY, expected: undefined, result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: 'undefined' },
  { actual: Object, expected: undefined, result: false, itActual: 'Object', itExpected: 'undefined' },
  { actual: {}, expected: undefined, result: false, itActual: '{}', itExpected: 'undefined' },
  { actual: Error, expected: undefined, result: false, itActual: 'Error', itExpected: 'undefined' },
  { actual: TypeError, expected: undefined, result: false, itActual: 'TypeError', itExpected: 'undefined' },
  { actual: new Error('error'), expected: undefined, result: false, itActual: 'new Error("error")', itExpected: 'undefined' },
  { actual: new TypeError('error'), expected: undefined, result: false, itActual: 'new TypeError("error")', itExpected: 'undefined' },
  { actual: Infinity, expected: undefined, result: false, itActual: 'Infinity', itExpected: 'undefined' },
  { actual: NaN, expected: undefined, result: false, itActual: 'NaN', itExpected: 'undefined' },
  { actual: JSON, expected: undefined, result: false, itActual: 'JSON', itExpected: 'undefined' },
  { actual: Promise, expected: undefined, result: false, itActual: 'Promise', itExpected: 'undefined' },
  { actual: new Promise(() => { }), expected: undefined, result: false, itActual: 'new Promise(()=>{})', itExpected: 'undefined' },
  { actual: RangeError, expected: undefined, result: false, itActual: 'RangeError', itExpected: 'undefined' },
  { actual: ReferenceError, expected: undefined, result: false, itActual: 'ReferenceError', itExpected: 'undefined' },
  { actual: new RangeError('error'), expected: undefined, result: false, itActual: 'new RangeError("error")', itExpected: 'undefined' },
  { actual: new ReferenceError('error'), expected: undefined, result: false, itActual: 'new ReferenceError("error")', itExpected: 'undefined' },
  { actual: Name, expected: undefined, result: false, itActual: 'Name', itExpected: 'undefined' },
  { actual: new Name(), expected: undefined, result: false, itActual: 'new Name()', itExpected: 'undefined' },
  { actual: new instance(), expected: undefined, result: false, itActual: 'new instance()', itExpected: 'undefined' },
  { actual: new truthy(), expected: undefined, result: false, itActual: 'new truthy()', itExpected: 'undefined' },
  { actual: new falsy(), expected: undefined, result: false, itActual: 'new falsy()', itExpected: 'undefined' },
  { actual: new any(), expected: undefined, result: false, itActual: 'new any()', itExpected: 'undefined' },
  { actual: new objectable(), expected: undefined, result: false, itActual: 'new objectable()', itExpected: 'undefined' },

  { actual: Date, expected: [null, undefined], result: false, itActual: 'Date', itExpected: '[null,undefined]' },
  { actual: new Date(), expected: [null, undefined], result: false, itActual: 'new Date()', itExpected: '[null,undefined]' },
  { actual: Function, expected: [null, undefined], result: false, itActual: 'Function', itExpected: '[null,undefined]' },
  { actual: function () { }, expected: [null, undefined], result: false, itActual: 'function(){}', itExpected: '[null,undefined]' },
  { actual: new Function('return "hello"'), expected: [null, undefined], result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '[null,undefined]' },
  { actual: (function () { return arguments; })(), expected: [null, undefined], result: false, itActual: '(function(){return arguments;})()', itExpected: '[null,undefined]' },
  { actual: () => { }, expected: [null, undefined], result: false, itActual: '()=>{}', itExpected: '[null,undefined]' },
  { actual: String, expected: [null, undefined], result: false, itActual: 'String', itExpected: '[null,undefined]' },
  { actual: new String('Hello'), expected: [null, undefined], result: false, itActual: 'new String("Hello")', itExpected: '[null,undefined]' },
  { actual: new String(''), expected: [null, undefined], result: false, itActual: 'new String("")', itExpected: '[null,undefined]' },
  { actual: 'Hello', expected: [null, undefined], result: false, itActual: '"Hello"', itExpected: '[null,undefined]' },
  { actual: `Hello`, expected: [null, undefined], result: false, itActual: '`Hello`', itExpected: '[null,undefined]' },
  { actual: '', expected: [null, undefined], result: false, itActual: '""', itExpected: '[null,undefined]' },
  { actual: Number, expected: [null, undefined], result: false, itActual: 'Number', itExpected: '[null,undefined]' },
  { actual: new Number(10), expected: [null, undefined], result: false, itActual: 'new Number(10)', itExpected: '[null,undefined]' },
  { actual: new Number(0), expected: [null, undefined], result: false, itActual: 'new Number(0)', itExpected: '[null,undefined]' },
  { actual: 10, expected: [null, undefined], result: false, itActual: '10', itExpected: '[null,undefined]' },
  { actual: 0, expected: [null, undefined], result: false, itActual: '0', itExpected: '[null,undefined]' },
  { actual: Boolean, expected: [null, undefined], result: false, itActual: 'Boolean', itExpected: '[null,undefined]' },
  { actual: new Boolean(0), expected: [null, undefined], result: false, itActual: 'new Boolean(0)', itExpected: '[null,undefined]' },
  { actual: false, expected: [null, undefined], result: false, itActual: 'false', itExpected: '[null,undefined]' },
  { actual: true, expected: [null, undefined], result: false, itActual: 'true', itExpected: '[null,undefined]' },
  { actual: RegExp, expected: [null, undefined], result: false, itActual: 'RegExp', itExpected: '[null,undefined]' },
  { actual: new RegExp('Hello', 'gim'), expected: [null, undefined], result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '[null,undefined]' },
  { actual: /hello/, expected: [null, undefined], result: false, itActual: '/hello/', itExpected: '[null,undefined]' },
  { actual: isNaN, expected: [null, undefined], result: false, itActual: 'isNaN', itExpected: '[null,undefined]' },
  { actual: isNaN('hello'), expected: [null, undefined], result: false, itActual: 'isNaN("hello")', itExpected: '[null,undefined]' },
  { actual: isFinite, expected: [null, undefined], result: false, itActual: 'isFinite', itExpected: '[null,undefined]' },
  { actual: isFinite(10), expected: [null, undefined], result: false, itActual: 'isFinite(10)', itExpected: '[null,undefined]' },
  { actual: Number.NEGATIVE_INFINITY, expected: [null, undefined], result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '[null,undefined]' },
  { actual: Object, expected: [null, undefined], result: false, itActual: 'Object', itExpected: '[null,undefined]' },
  { actual: {}, expected: [null, undefined], result: false, itActual: '{}', itExpected: '[null,undefined]' },
  { actual: Error, expected: [null, undefined], result: false, itActual: 'Error', itExpected: '[null,undefined]' },
  { actual: TypeError, expected: [null, undefined], result: false, itActual: 'TypeError', itExpected: '[null,undefined]' },
  { actual: new Error('error'), expected: [null, undefined], result: false, itActual: 'new Error("error")', itExpected: '[null,undefined]' },
  { actual: new TypeError('error'), expected: [null, undefined], result: false, itActual: 'new TypeError("error")', itExpected: '[null,undefined]' },
  { actual: undefined, expected: [null, undefined], result: true, itActual: 'undefined', itExpected: '[null,undefined]' },
  { actual: null, expected: [null, undefined], result: true, itActual: 'null', itExpected: '[null,undefined]' },
  { actual: Infinity, expected: [null, undefined], result: false, itActual: 'Infinity', itExpected: '[null,undefined]' },
  { actual: NaN, expected: [null, undefined], result: false, itActual: 'NaN', itExpected: '[null,undefined]' },
  { actual: JSON, expected: [null, undefined], result: false, itActual: 'JSON', itExpected: '[null,undefined]' },
  { actual: Promise, expected: [null, undefined], result: false, itActual: 'Promise', itExpected: '[null,undefined]' },
  { actual: new Promise(() => { }), expected: [null, undefined], result: false, itActual: 'new Promise(()=>{})', itExpected: '[null,undefined]' },
  { actual: {}.name, expected: [null, undefined], result: true, itActual: '{}.name', itExpected: '[null,undefined]' },
  { actual: RangeError, expected: [null, undefined], result: false, itActual: 'RangeError', itExpected: '[null,undefined]' },
  { actual: ReferenceError, expected: [null, undefined], result: false, itActual: 'ReferenceError', itExpected: '[null,undefined]' },
  { actual: new RangeError('error'), expected: [null, undefined], result: false, itActual: 'new RangeError("error")', itExpected: '[null,undefined]' },
  { actual: new ReferenceError('error'), expected: [null, undefined], result: false, itActual: 'new ReferenceError("error")', itExpected: '[null,undefined]' },
  { actual: Name, expected: [null, undefined], result: false, itActual: 'Name', itExpected: '[null,undefined]' },
  { actual: new Name(), expected: [null, undefined], result: false, itActual: 'new Name()', itExpected: '[null,undefined]' },
  { actual: new instance(), expected: [null, undefined], result: false, itActual: 'new instance()', itExpected: '[null, undefined]' },
  { actual: new truthy(), expected: [null, undefined], result: false, itActual: 'new truthy()', itExpected: '[null, undefined]' },
  { actual: new falsy(), expected: [null, undefined], result: false, itActual: 'new falsy()', itExpected: '[null, undefined]' },
  { actual: new any(), expected: [null, undefined], result: false, itActual: 'new any()', itExpected: '[null, undefined]' },
  { actual: new objectable(), expected: [null, undefined], result: false, itActual: 'new objectable()', itExpected: '[null, undefined]' },

  { actual: Date, expected: [String, Number, Date], result: false, itActual: 'Date', itExpected: '[String,Number,Date]' },
  { actual: new Date(), expected: [String, Number, Function], result: false, itActual: 'new Date()', itExpected: '[String,Number,Function]' },
  { actual: Function, expected: [String, Number, Object], result: false, itActual: 'Function', itExpected: '[String,Number,Object]' },
  { actual: function () { }, expected: [String, Number, Object], result: false, itActual: 'function(){}', itExpected: '[String,Number,Object]' },
  { actual: new Function('return "hello"'), expected: [String, Number, Object], result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '[String,Number,Object]' },
  { actual: (function () { return arguments; })(), expected: [String, Number, Function], result: false, itActual: '(function(){return arguments;})()', itExpected: '[String,Number,Function]' },
  { actual: () => { }, expected: [String, Number, Object], result: false, itActual: '()=>{}', itExpected: '[String,Number,Object]' },
  { actual: String, expected: [String, Number, Object], result: false, itActual: 'String', itExpected: '[String,Number,Object]' },
  { actual: new String('Hello'), expected: [Function, Number, Object], result: false, itActual: 'new String("Hello")', itExpected: '[Function,Number,Object]' },
  { actual: new String(''), expected: [Function, Number, Object], result: false, itActual: 'new String("")', itExpected: '[Function,Number,Object]' },
  { actual: 'Hello', expected: [Function, Number, Object], result: false, itActual: '"Hello"', itExpected: '[Function,Number,Object]' },
  { actual: `Hello`, expected: [Function, Number, Object], result: false, itActual: '`Hello`', itExpected: '[Function,Number,Object]' },
  { actual: '', expected: [Function, Number, Object], result: false, itActual: '""', itExpected: '[Function,Number,Object]' },
  { actual: Number, expected: [Array, Number, Object], result: false, itActual: 'Number', itExpected: '[Array,Number,Object]' },
  { actual: new Number(10), expected: [Array, Function, Object], result: false, itActual: 'new Number(10)', itExpected: '[Array,Function,Object]' },
  { actual: new Number(0), expected: [Array, Function, Object], result: false, itActual: 'new Number(0)', itExpected: '[Array,Function,Object]' },
  { actual: 10, expected: [Array, Function, Object], result: false, itActual: '10', itExpected: '[Array,Function,Object]' },
  { actual: 0, expected: [Array, Function, Object], result: false, itActual: '0', itExpected: '[Array,Function,Object]' },
  { actual: Boolean, expected: [Array, String, Object], result: false, itActual: 'Boolean', itExpected: '[Array,String,Object]' },
  { actual: new Boolean(0), expected: [Array, String, Object], result: false, itActual: 'new Boolean(0)', itExpected: '[Array,String,Object]' },
  { actual: false, expected: [Array, String, Object], result: false, itActual: 'false', itExpected: '[Array,String,Object]' },
  { actual: true, expected: [Array, String, Object], result: false, itActual: 'true', itExpected: '[Array,String,Object]' },
  { actual: RegExp, expected: [Array, String, RegExp], result: false, itActual: 'RegExp', itExpected: '[Array,String,RegExp]' },
  { actual: new RegExp('Hello', 'gim'), expected: [Array, String, Object], result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '[Array,String,Object]' },
  { actual: /hello/, expected: [Array, String, Object], result: false, itActual: '/hello/', itExpected: '[Array,String,Object]' },
  { actual: isNaN, expected: [Array, String, Object], result: false, itActual: 'isNaN', itExpected: '[Array,String,Object]' },
  { actual: isNaN('hello'), expected: [Array, String, Object], result: false, itActual: 'isNaN("hello")', itExpected: '[Array,String,Object]' },
  { actual: isFinite, expected: [Array, String, Object], result: false, itActual: 'isFinite', itExpected: '[Array,String,Object]' },
  { actual: isFinite(10), expected: [Array, String, Object], result: false, itActual: 'isFinite(10)', itExpected: '[Array,String,Object]' },
  { actual: Number.NEGATIVE_INFINITY, expected: [Array, String, Object], result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '[Array,String,Object]' },
  { actual: Object, expected: [Array, String, Object], result: false, itActual: 'Object', itExpected: '[Array,String,Object]' },
  { actual: {}, expected: [Array, String, Function], result: false, itActual: '{}', itExpected: '[Array,String,Function]' },
  { actual: Error, expected: [Array, String, Object], result: false, itActual: 'Error', itExpected: '[Array,String,Object]' },
  { actual: TypeError, expected: [Array, String, Object], result: false, itActual: 'TypeError', itExpected: '[Array,String,Object]' },
  { actual: new Error('error'), expected: [Array, String, Object], result: false, itActual: 'new Error("error")', itExpected: '[Array,String,Object]' },
  { actual: new TypeError('error'), expected: [Array, String, Object], result: false, itActual: 'new TypeError("error")', itExpected: '[Array,String,Object]' },
  { actual: undefined, expected: [Array, String, Object], result: false, itActual: 'undefined', itExpected: '[Array,String,Object]' },
  { actual: null, expected: [Array, String, Object], result: false, itActual: 'null', itExpected: '[Array,String,Object]' },
  { actual: Infinity, expected: [Array, String, Object], result: false, itActual: 'Infinity', itExpected: '[Array,String,Object]' },
  { actual: NaN, expected: [Array, String, Object], result: false, itActual: 'NaN', itExpected: '[Array,String,Object]' },
  { actual: JSON, expected: [Array, String, Function], result: false, itActual: 'JSON', itExpected: '[Array,String,Function]' },
  { actual: Promise, expected: [Array, String, Object], result: false, itActual: 'Promise', itExpected: '[Array,String,Object]' },
  { actual: new Promise(() => { }), expected: [Array, String, Object], result: false, itActual: 'new Promise(()=>{})', itExpected: '[Array,String,Object]' },
  { actual: {}.name, expected: [Array, String, Object], result: false, itActual: '{}.name', itExpected: '[Array,String,Object]' },
  { actual: RangeError, expected: [Array, String, Object], result: false, itActual: 'RangeError', itExpected: '[Array,String,Object]' },
  { actual: ReferenceError, expected: [Array, String, Object], result: false, itActual: 'ReferenceError', itExpected: '[Array,String,Object]' },
  { actual: new RangeError('error'), expected: [Array, String, Object], result: false, itActual: 'new RangeError("error")', itExpected: '[Array,String,Object]' },
  { actual: new ReferenceError('error'), expected: [Array, String, Object], result: false, itActual: 'new ReferenceError("error")', itExpected: '[Array,String,Object]' },
  { actual: Name, expected: [Array, String, Object], result: false, itActual: 'Name', itExpected: '[Array,String,Object]' },
  { actual: new Name(), expected: [Array, String, Object], result: false, itActual: 'new Name()', itExpected: '[Array,String,Object]' },
  { actual: new instance(), expected: [Array, String, Object], result: false, itActual: 'new instance()', itExpected: '[Array, String, Object]' },
  { actual: new truthy(), expected: [Array, String, Object], result: false, itActual: 'new truthy()', itExpected: '[Array, String, Object]' },
  { actual: new falsy(), expected: [Array, String, Object], result: false, itActual: 'new falsy()', itExpected: '[Array, String, Object]' },
  { actual: new any(), expected: [Array, String, Object], result: false, itActual: 'new any()', itExpected: '[Array, String, Object]' },
  { actual: new objectable(), expected: [Array, String, Object], result: false, itActual: 'new objectable()', itExpected: '[Array, String, Object]' },

  { actual: Date, expected: [Boolean, null, undefined, Function], result: true, itActual: 'Date', itExpected: '[Boolean,null,undefined,Function]' },
  { actual: new Date(), expected: [Boolean, null, undefined, Date], result: true, itActual: 'new Date()', itExpected: '[Boolean,null,undefined,Date]' },
  { actual: Function, expected: [Boolean, null, undefined, Function], result: true, itActual: 'Function', itExpected: '[Boolean,null,undefined,Function]' },
  { actual: function () { }, expected: [Boolean, null, undefined, Function], result: true, itActual: 'function(){}', itExpected: '[Boolean,null,undefined,Function]' },
  { actual: new Function('return "hello"'), expected: [Boolean, null, undefined, Function], result: true, itActual: 'new Function(\'return "hello"\')', itExpected: '[Boolean,null,undefined,Function]' },
  { actual: (function () { return arguments; })(), expected: [Boolean, null, undefined, Object], result: true, itActual: '(function(){return arguments;})()', itExpected: '[Boolean,null,undefined,Object]' },
  { actual: () => { }, expected: [Boolean, null, undefined, Function], result: true, itActual: '()=>{}', itExpected: '[Boolean,null,undefined,Function]' },
  { actual: String, expected: [Boolean, null, undefined, Function], result: true, itActual: 'String', itExpected: '[Boolean,null,undefined,Function]' },
  { actual: new String('Hello'), expected: [Boolean, null, undefined, String], result: true, itActual: 'new String("Hello")', itExpected: '[Boolean,null,undefined,String]' },
  { actual: new String(''), expected: [Boolean, null, undefined, String], result: true, itActual: 'new String("")', itExpected: '[Boolean,null,undefined,String]' },
  { actual: 'Hello', expected: [Boolean, null, undefined, String], result: true, itActual: '"Hello"', itExpected: '[Boolean,null,undefined,String]' },
  { actual: `Hello`, expected: [Boolean, null, undefined, String], result: true, itActual: '`Hello`', itExpected: '[Boolean,null,undefined,String]' },
  { actual: '', expected: [Boolean, null, undefined, String], result: true, itActual: '""', itExpected: '[Boolean,null,undefined,String]' },
  { actual: Number, expected: [Boolean, null, undefined, Function], result: true, itActual: 'Number', itExpected: '[Boolean,null,undefined,Function]' },
  { actual: new Number(10), expected: [Boolean, null, undefined, Number], result: true, itActual: 'new Number(10)', itExpected: '[Boolean,null,undefined,Number]' },
  { actual: new Number(0), expected: [Boolean, null, undefined, Number], result: true, itActual: 'new Number(0)', itExpected: '[Boolean,null,undefined,Number]' },
  { actual: 10, expected: [Boolean, null, undefined, Number], result: true, itActual: '10', itExpected: '[Boolean,null,undefined,Number]' },
  { actual: 0, expected: [Boolean, null, undefined, Number], result: true, itActual: '0', itExpected: '[Boolean,null,undefined,Number]' },
  { actual: Boolean, expected: [Boolean, null, undefined, Function], result: true, itActual: 'Boolean', itExpected: '[Boolean,null,undefined,Function]' },
  { actual: new Boolean(0), expected: [Boolean, null, undefined, Boolean], result: true, itActual: 'new Boolean(0)', itExpected: '[Boolean,null,undefined,Boolean]' },
  { actual: false, expected: [Boolean, null, undefined, Boolean], result: true, itActual: 'false', itExpected: '[Boolean,null,undefined,Boolean]' },
  { actual: true, expected: [Boolean, null, undefined, Boolean], result: true, itActual: 'true', itExpected: '[Boolean,null,undefined,Boolean]' },
  { actual: RegExp, expected: [Boolean, null, undefined, Function], result: true, itActual: 'RegExp', itExpected: '[Boolean,null,undefined,Function]' },
  { actual: new RegExp('Hello', 'gim'), expected: [Boolean, null, undefined, RegExp], result: true, itActual: 'new RegExp("Hello","gim")', itExpected: '[Boolean,null,undefined,RegExp]' },
  { actual: /hello/, expected: [Boolean, null, undefined, RegExp], result: true, itActual: '/hello/', itExpected: '[Boolean,null,undefined,RegExp]' },
  { actual: isNaN, expected: [Boolean, null, undefined, Function], result: true, itActual: 'isNaN', itExpected: '[Boolean,null,undefined,Function]' },
  { actual: isNaN('hello'), expected: [Boolean, null, undefined, Boolean], result: true, itActual: 'isNaN("hello")', itExpected: '[Boolean,null,undefined,Boolean]' },
  { actual: isFinite, expected: [Boolean, null, undefined, Function], result: true, itActual: 'isFinite', itExpected: '[Boolean,null,undefined,Function]' },
  { actual: isFinite(10), expected: [Boolean, null, undefined, Boolean], result: true, itActual: 'isFinite(10)', itExpected: '[Boolean,null,undefined,Boolean]' },
  { actual: Number.NEGATIVE_INFINITY, expected: [Boolean, null, undefined, Number], result: true, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '[Boolean,null,undefined,Number]' },
  { actual: Object, expected: [Boolean, null, undefined, Function], result: true, itActual: 'Object', itExpected: '[Boolean,null,undefined,Function]' },
  { actual: {}, expected: [Boolean, null, undefined, Object], result: true, itActual: '{}', itExpected: '[Boolean,null,undefined,Object]' },
  { actual: Error, expected: [Boolean, null, undefined, Function], result: true, itActual: 'Error', itExpected: '[Boolean,null,undefined,Function]' },
  { actual: TypeError, expected: [Boolean, null, undefined, Function], result: true, itActual: 'TypeError', itExpected: '[Boolean,null,undefined,Function]' },
  { actual: new Error('error'), expected: [Boolean, null, undefined, Error], result: true, itActual: 'new Error("error")', itExpected: '[Boolean,null,undefined,Error]' },
  { actual: new TypeError('error'), expected: [Boolean, null, undefined, Error], result: false, itActual: 'new TypeError("error")', itExpected: '[Boolean,null,undefined,Error]' },
  { actual: new TypeError('error'), expected: [Boolean, null, undefined, TypeError], result: true, itActual: 'new TypeError("error")', itExpected: '[Boolean,null,undefined,TypeError]' },
  { actual: undefined, expected: [Boolean, Function, null, undefined], result: true, itActual: 'undefined', itExpected: '[Boolean,Function,null,undefined]' },
  { actual: null, expected: [Boolean, Function, undefined, null], result: true, itActual: 'null', itExpected: '[Boolean,Function,undefined,null]' },
  { actual: Infinity, expected: [Boolean, Function, undefined, Number], result: true, itActual: 'Infinity', itExpected: '[Boolean,Function,undefined,Number]' },
  { actual: NaN, expected: [Boolean, Function, undefined, Number], result: true, itActual: 'NaN', itExpected: '[Boolean,Function,undefined,Number]' },
  { actual: JSON, expected: [Boolean, Function, undefined, Object], result: true, itActual: 'JSON', itExpected: '[Boolean,Function,undefined,Object]' },
  { actual: Promise, expected: [Boolean, Function, undefined, Function], result: true, itActual: 'Promise', itExpected: '[Boolean,Function,undefined,Function]' },
  { actual: new Promise(() => { }), expected: [Boolean, Function, undefined, Promise], result: true, itActual: 'new Promise(()=>{})', itExpected: '[Boolean,Function,undefined,Promise]' },
  { actual: {}.name, expected: [Boolean, Function, null, undefined], result: true, itActual: '{}.name', itExpected: '[Boolean,Function,null,undefined]' },
  { actual: RangeError, expected: [Boolean, null, undefined, Function], result: true, itActual: 'RangeError', itExpected: '[Boolean,null,undefined,Function]' },
  { actual: ReferenceError, expected: [Boolean, null, undefined, Function], result: true, itActual: 'ReferenceError', itExpected: '[Boolean,null,undefined,Function]' },
  { actual: new RangeError('error'), expected: [Boolean, null, undefined, Error], result: false, itActual: 'new RangeError("error")', itExpected: '[Boolean,null,undefined,Error]' },
  { actual: new RangeError('error'), expected: [Boolean, null, undefined, RangeError], result: true, itActual: 'new RangeError("error")', itExpected: '[Boolean,null,undefined,RangeError]' },
  { actual: new ReferenceError('error'), expected: [Boolean, null, undefined, Error], result: false, itActual: 'new ReferenceError("error")', itExpected: '[Boolean,null,undefined,Error]' },
  { actual: new ReferenceError('error'), expected: [Boolean, null, undefined, ReferenceError], result: true, itActual: 'new ReferenceError("error")', itExpected: '[Boolean,null,undefined,ReferenceError]' },
  { actual: Name, expected: [Boolean, Function, undefined, Function], result: true, itActual: 'Name', itExpected: '[Boolean,Function,undefined,Function]' },
  { actual: new Name(), expected: [Boolean, Function, undefined, Name], result: true, itActual: 'new Name()', itExpected: '[Boolean,Function,undefined,Name]' },
  { actual: new instance(), expected: [Boolean, Function, undefined, instance], result: true, itActual: 'new instance()', itExpected: '[Boolean, Function, undefined, instance]' },
  { actual: new truthy(), expected: [Boolean, Function, undefined, truthy], result: true, itActual: 'new truthy()', itExpected: '[Boolean, Function, undefined, truthy]' },
  { actual: new falsy(), expected: [Boolean, Function, undefined, falsy], result: true, itActual: 'new falsy()', itExpected: '[Boolean, Function, undefined, falsy]' },
  { actual: new any(), expected: [Boolean, Function, undefined, any], result: true, itActual: 'new any()', itExpected: '[Boolean, Function, undefined, any]' },
  { actual: new objectable(), expected: [Boolean, Function, undefined, objectable], result: true, itActual: 'new objectable()', itExpected: '[Boolean, Function, undefined, objectable]' },

  { actual: Date, expected: [], result: true, itActual: 'Date', itExpected: '[]' },
  { actual: new Date(), expected: [], result: true, itActual: 'new Date()', itExpected: '[]' },
  { actual: Function, expected: [], result: true, itActual: 'Function', itExpected: '[]' },
  { actual: function () { }, expected: [], result: true, itActual: 'function(){}', itExpected: '[]' },
  { actual: new Function('return "hello"'), expected: [], result: true, itActual: 'new Function(\'return "hello"\')', itExpected: '[]' },
  { actual: (function () { return arguments; })(), expected: [], result: true, itActual: '(function(){return arguments;})()', itExpected: '[]' },
  { actual: () => { }, expected: [], result: true, itActual: '()=>{}', itExpected: '[]' },
  { actual: String, expected: [], result: true, itActual: 'String', itExpected: '[]' },
  { actual: new String('Hello'), expected: [], result: true, itActual: 'new String("Hello")', itExpected: '[]' },
  { actual: new String(''), expected: [], result: true, itActual: 'new String("")', itExpected: '[]' },
  { actual: 'Hello', expected: [], result: true, itActual: '"Hello"', itExpected: '[]' },
  { actual: `Hello`, expected: [], result: true, itActual: '`Hello`', itExpected: '[]' },
  { actual: '', expected: [], result: true, itActual: '""', itExpected: '[]' },
  { actual: Number, expected: [], result: true, itActual: 'Number', itExpected: '[]' },
  { actual: new Number(10), expected: [], result: true, itActual: 'new Number(10)', itExpected: '[]' },
  { actual: new Number(0), expected: [], result: true, itActual: 'new Number(0)', itExpected: '[]' },
  { actual: 10, expected: [], result: true, itActual: '10', itExpected: '[]' },
  { actual: 0, expected: [], result: true, itActual: '0', itExpected: '[]' },
  { actual: Boolean, expected: [], result: true, itActual: 'Boolean', itExpected: '[]' },
  { actual: new Boolean(0), expected: [], result: true, itActual: 'new Boolean(0)', itExpected: '[]' },
  { actual: false, expected: [], result: true, itActual: 'false', itExpected: '[]' },
  { actual: true, expected: [], result: true, itActual: 'true', itExpected: '[]' },
  { actual: RegExp, expected: [], result: true, itActual: 'RegExp', itExpected: '[]' },
  { actual: new RegExp('Hello', 'gim'), expected: [], result: true, itActual: 'new RegExp("Hello","gim")', itExpected: '[]' },
  { actual: /hello/, expected: [], result: true, itActual: '/hello/', itExpected: '[]' },
  { actual: isNaN, expected: [], result: true, itActual: 'isNaN', itExpected: '[]' },
  { actual: isNaN('hello'), expected: [], result: true, itActual: 'isNaN("hello")', itExpected: '[]' },
  { actual: isFinite, expected: [], result: true, itActual: 'isFinite', itExpected: '[]' },
  { actual: isFinite(10), expected: [], result: true, itActual: 'isFinite(10)', itExpected: '[]' },
  { actual: Number.NEGATIVE_INFINITY, expected: [], result: true, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '[]' },
  { actual: Object, expected: [], result: true, itActual: 'Object', itExpected: '[]' },
  { actual: {}, expected: [], result: true, itActual: '{}', itExpected: '[]' },
  { actual: Error, expected: [], result: true, itActual: 'Error', itExpected: '[]' },
  { actual: TypeError, expected: [], result: true, itActual: 'TypeError', itExpected: '[]' },
  { actual: new Error('error'), expected: [], result: true, itActual: 'new Error("error")', itExpected: '[]' },
  { actual: new TypeError('error'), expected: [], result: true, itActual: 'new TypeError("error")', itExpected: '[]' },
  { actual: undefined, expected: [], result: true, itActual: 'undefined', itExpected: '[]' },
  { actual: null, expected: [], result: true, itActual: 'null', itExpected: '[]' },
  { actual: Infinity, expected: [], result: true, itActual: 'Infinity', itExpected: '[]' },
  { actual: NaN, expected: [], result: true, itActual: 'NaN', itExpected: '[]' },
  { actual: JSON, expected: [], result: true, itActual: 'JSON', itExpected: '[]' },
  { actual: Promise, expected: [], result: true, itActual: 'Promise', itExpected: '[]' },
  { actual: new Promise(() => { }), expected: [], result: true, itActual: 'new Promise(()=>{})', itExpected: '[]' },
  { actual: {}.name, expected: [], result: true, itActual: '{}.name', itExpected: '[]' },
  { actual: RangeError, expected: [], result: true, itActual: 'RangeError', itExpected: '[]' },
  { actual: ReferenceError, expected: [], result: true, itActual: 'ReferenceError', itExpected: '[]' },
  { actual: new RangeError('error'), expected: [], result: true, itActual: 'new RangeError("error")', itExpected: '[]' },
  { actual: new ReferenceError('error'), expected: [], result: true, itActual: 'new ReferenceError("error")', itExpected: '[]' },
  { actual: Name, expected: [], result: true, itActual: 'Name', itExpected: '[]' },
  { actual: new Name(), expected: [], result: true, itActual: 'new Name()', itExpected: '[]' },
  { actual: new instance(), expected: [], result: true, itActual: 'new instance()', itExpected: '[]' },
  { actual: new truthy(), expected: [], result: true, itActual: 'new truthy()', itExpected: '[]' },
  { actual: new falsy(), expected: [], result: true, itActual: 'new falsy()', itExpected: '[]' },
  { actual: new any(), expected: [], result: true, itActual: 'new any()', itExpected: '[]' },
  { actual: new objectable(), expected: [], result: true, itActual: 'new objectable()', itExpected: '[]' },

  { actual: Date, expected: ['hello', 10, false], result: false, itActual: 'Date', itExpected: '["hello",10,false]' },
  { actual: new Date(), expected: ['hello', 10, false], result: false, itActual: 'new Date()', itExpected: '["hello",10,false]' },
  { actual: Function, expected: ['hello', 10, false], result: false, itActual: 'Function', itExpected: '["hello",10,false]' },
  { actual: function () { }, expected: ['hello', 10, false], result: false, itActual: 'function(){}', itExpected: '["hello",10,false]' },
  { actual: new Function('return "hello"'), expected: ['hello', 10, false], result: false, itActual: 'new Function(\'return "hello"\')', itExpected: '["hello",10,false]' },
  { actual: (function () { return arguments; })(), expected: ['hello', 10, false], result: false, itActual: '(function(){return arguments;})()', itExpected: '["hello",10,false]' },
  { actual: () => { }, expected: ['hello', 10, false], result: false, itActual: '()=>{}', itExpected: '["hello",10,false]' },
  { actual: String, expected: ['hello', 10, false], result: false, itActual: 'String', itExpected: '["hello",10,false]' },
  { actual: new String('Hello'), expected: ['hello', 10, false], result: false, itActual: 'new String("Hello")', itExpected: '["hello",10,false]' },
  { actual: new String(''), expected: ['hello', 10, false], result: false, itActual: 'new String("")', itExpected: '["hello",10,false]' },
  { actual: 'Hello', expected: ['hello', 10, false], result: false, itActual: '"Hello"', itExpected: '["hello",10,false]' },
  { actual: `Hello`, expected: ['hello', 10, false], result: false, itActual: '`Hello`', itExpected: '["hello",10,false]' },
  { actual: '', expected: ['hello', 10, false], result: false, itActual: '""', itExpected: '["hello",10,false]' },
  { actual: Number, expected: ['hello', 10, false], result: false, itActual: 'Number', itExpected: '["hello",10,false]' },
  { actual: new Number(10), expected: ['hello', 10, false], result: false, itActual: 'new Number(10)', itExpected: '["hello",10,false]' },
  { actual: new Number(0), expected: ['hello', 10, false], result: false, itActual: 'new Number(0)', itExpected: '["hello",10,false]' },
  { actual: 10, expected: ['hello', 10, false], result: false, itActual: '10', itExpected: '["hello",10,false]' },
  { actual: 0, expected: ['hello', 10, false], result: false, itActual: '0', itExpected: '["hello",10,false]' },
  { actual: Boolean, expected: ['hello', 10, false], result: false, itActual: 'Boolean', itExpected: '["hello",10,false]' },
  { actual: new Boolean(0), expected: ['hello', 10, false], result: false, itActual: 'new Boolean(0)', itExpected: '["hello",10,false]' },
  { actual: false, expected: ['hello', 10, false], result: false, itActual: 'false', itExpected: '["hello",10,false]' },
  { actual: true, expected: ['hello', 10, false], result: false, itActual: 'true', itExpected: '["hello",10,false]' },
  { actual: RegExp, expected: ['hello', 10, false], result: false, itActual: 'RegExp', itExpected: '["hello",10,false]' },
  { actual: new RegExp('Hello', 'gim'), expected: ['hello', 10, false], result: false, itActual: 'new RegExp("Hello","gim")', itExpected: '["hello",10,false]' },
  { actual: /hello/, expected: ['hello', 10, false], result: false, itActual: '/hello/', itExpected: '["hello",10,false]' },
  { actual: isNaN, expected: ['hello', 10, false], result: false, itActual: 'isNaN', itExpected: '["hello",10,false]' },
  { actual: isNaN('hello'), expected: ['hello', 10, false], result: false, itActual: 'isNaN("hello")', itExpected: '["hello",10,false]' },
  { actual: isFinite, expected: ['hello', 10, false], result: false, itActual: 'isFinite', itExpected: '["hello",10,false]' },
  { actual: isFinite(10), expected: ['hello', 10, false], result: false, itActual: 'isFinite(10)', itExpected: '["hello",10,false]' },
  { actual: Number.NEGATIVE_INFINITY, expected: ['hello', 10, false], result: false, itActual: 'Number.NEGATIVE_INFINITY', itExpected: '["hello",10,false]' },
  { actual: Object, expected: ['hello', 10, false], result: false, itActual: 'Object', itExpected: '["hello",10,false]' },
  { actual: {}, expected: ['hello', 10, false], result: false, itActual: '{}', itExpected: '["hello",10,false]' },
  { actual: Error, expected: ['hello', 10, false], result: false, itActual: 'Error', itExpected: '["hello",10,false]' },
  { actual: TypeError, expected: ['hello', 10, false], result: false, itActual: 'TypeError', itExpected: '["hello",10,false]' },
  { actual: new Error('error'), expected: ['hello', 10, false], result: false, itActual: 'new Error("error")', itExpected: '["hello",10,false]' },
  { actual: new TypeError('error'), expected: ['hello', 10, false], result: false, itActual: 'new TypeError("error")', itExpected: '["hello",10,false]' },
  { actual: undefined, expected: ['hello', 10, false], result: false, itActual: 'undefined', itExpected: '["hello",10,false]' },
  { actual: null, expected: ['hello', 10, false], result: false, itActual: 'null', itExpected: '["hello",10,false]' },
  { actual: Infinity, expected: ['hello', 10, false], result: false, itActual: 'Infinity', itExpected: '["hello",10,false]' },
  { actual: NaN, expected: ['hello', 10, false], result: false, itActual: 'NaN', itExpected: '["hello",10,false]' },
  { actual: JSON, expected: ['hello', 10, false], result: false, itActual: 'JSON', itExpected: '["hello",10,false]' },
  { actual: Promise, expected: ['hello', 10, false], result: false, itActual: 'Promise', itExpected: '["hello",10,false]' },
  { actual: new Promise(() => { }), expected: ['hello', 10, false], result: false, itActual: 'new Promise(()=>{})', itExpected: '["hello",10,false]' },
  { actual: {}.name, expected: ['hello', 10, false], result: false, itActual: '{}.name', itExpected: '["hello",10,false]' },
  { actual: RangeError, expected: ['hello', 10, false], result: false, itActual: 'RangeError', itExpected: '["hello",10,false]' },
  { actual: ReferenceError, expected: ['hello', 10, false], result: false, itActual: 'ReferenceError', itExpected: '["hello",10,false]' },
  { actual: new RangeError('error'), expected: ['hello', 10, false], result: false, itActual: 'new RangeError("error")', itExpected: '["hello",10,false]' },
  { actual: new ReferenceError('error'), expected: ['hello', 10, false], result: false, itActual: 'new ReferenceError("error")', itExpected: '["hello",10,false]' },
  { actual: Name, expected: ['hello', 10, false], result: false, itActual: 'Name', itExpected: '["hello",10,false]' },
  { actual: new Name(), expected: ['hello', 10, false], result: false, itActual: 'new Name()', itExpected: '["hello",10,false]' },
  { actual: new instance(), expected: ['hello', 10, false], result: false, itActual: 'new instance()', itExpected: '["hello", 10, false]' },
  { actual: new truthy(), expected: ['hello', 10, false], result: false, itActual: 'new truthy()', itExpected: '["hello", 10, false]' },
  { actual: new falsy(), expected: ['hello', 10, false], result: false, itActual: 'new falsy()', itExpected: '["hello", 10, false]' },
  { actual: new any(), expected: ['hello', 10, false], result: false, itActual: 'new any()', itExpected: '["hello", 10, false]' },
  { actual: new objectable(), expected: ['hello', 10, false], result: false, itActual: 'new objectable()', itExpected: '["hello", 10, false]' }
];